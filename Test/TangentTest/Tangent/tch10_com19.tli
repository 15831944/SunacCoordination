// Created by Microsoft (R) C/C++ Compiler Version 10.00.30319.01 (dd0593ba).
//
// d:\temp\asdksquarewrapper_dg\square\x64\debug\tch10_com19.tli
//
// Wrapper implementations for Win32 type library C:\Tangent\TArchT20V5\SYS19x64\Tch10_Com19.dll
// compiler-generated file created 03/18/20 at 17:58:27 - DO NOT EDIT!


//
// interface IComBalcony wrapper method implementations
//

#pragma implementation_key(1)
inline double COMKERNALLib::IComBalcony::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2)
inline void COMKERNALLib::IComBalcony::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(3)
inline double COMKERNALLib::IComBalcony::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(4)
inline void COMKERNALLib::IComBalcony::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(5)
inline double COMKERNALLib::IComBalcony::GetRailHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RailHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(6)
inline void COMKERNALLib::IComBalcony::PutRailHeight ( double pVal ) {
    HRESULT _hr = put_RailHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(7)
inline _bstr_t COMKERNALLib::IComBalcony::GetRailClipInsu ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailClipInsu(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(8)
inline void COMKERNALLib::IComBalcony::PutRailClipInsu ( _bstr_t pVal ) {
    HRESULT _hr = put_RailClipInsu(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(9)
inline double COMKERNALLib::IComBalcony::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(10)
inline void COMKERNALLib::IComBalcony::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(11)
inline double COMKERNALLib::IComBalcony::GetGirderThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_GirderThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(12)
inline void COMKERNALLib::IComBalcony::PutGirderThickness ( double pVal ) {
    HRESULT _hr = put_GirderThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(13)
inline _bstr_t COMKERNALLib::IComBalcony::GetHasGirder ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasGirder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(14)
inline void COMKERNALLib::IComBalcony::PutHasGirder ( _bstr_t pVal ) {
    HRESULT _hr = put_HasGirder(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(15)
inline double COMKERNALLib::IComBalcony::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(16)
inline void COMKERNALLib::IComBalcony::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(17)
inline ACAD_LAYER COMKERNALLib::IComBalcony::GetGroundLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_GroundLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(18)
inline void COMKERNALLib::IComBalcony::PutGroundLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_GroundLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(19)
inline double COMKERNALLib::IComBalcony::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(20)
inline void COMKERNALLib::IComBalcony::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(21)
inline _bstr_t COMKERNALLib::IComBalcony::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(22)
inline void COMKERNALLib::IComBalcony::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStair wrapper method implementations
//

#pragma implementation_key(23)
inline double COMKERNALLib::IComStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(24)
inline void COMKERNALLib::IComStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(25)
inline double COMKERNALLib::IComStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(26)
inline void COMKERNALLib::IComStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(27)
inline _bstr_t COMKERNALLib::IComStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(28)
inline void COMKERNALLib::IComStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComArcStair wrapper method implementations
//

#pragma implementation_key(29)
inline double COMKERNALLib::IComArcStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(30)
inline void COMKERNALLib::IComArcStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(31)
inline double COMKERNALLib::IComArcStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(32)
inline void COMKERNALLib::IComArcStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(33)
inline _bstr_t COMKERNALLib::IComArcStair::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(34)
inline void COMKERNALLib::IComArcStair::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(35)
inline double COMKERNALLib::IComArcStair::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(36)
inline void COMKERNALLib::IComArcStair::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(37)
inline double COMKERNALLib::IComArcStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(38)
inline void COMKERNALLib::IComArcStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(39)
inline double COMKERNALLib::IComArcStair::GetRadiusIn ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusIn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(40)
inline void COMKERNALLib::IComArcStair::PutRadiusIn ( double pVal ) {
    HRESULT _hr = put_RadiusIn(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(41)
inline double COMKERNALLib::IComArcStair::GetRadiusOut ( ) {
    double _result = 0;
    HRESULT _hr = get_RadiusOut(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(42)
inline void COMKERNALLib::IComArcStair::PutRadiusOut ( double pVal ) {
    HRESULT _hr = put_RadiusOut(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(43)
inline double COMKERNALLib::IComArcStair::GetStartAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_StartAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(44)
inline void COMKERNALLib::IComArcStair::PutStartAngle ( double pVal ) {
    HRESULT _hr = put_StartAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(45)
inline double COMKERNALLib::IComArcStair::GetSweepAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SweepAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(46)
inline void COMKERNALLib::IComArcStair::PutSweepAngle ( double pVal ) {
    HRESULT _hr = put_SweepAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(47)
inline long COMKERNALLib::IComArcStair::GetStepNum ( ) {
    long _result = 0;
    HRESULT _hr = get_StepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(48)
inline void COMKERNALLib::IComArcStair::PutStepNum ( long pVal ) {
    HRESULT _hr = put_StepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(49)
inline double COMKERNALLib::IComArcStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(50)
inline void COMKERNALLib::IComArcStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(51)
inline _bstr_t COMKERNALLib::IComArcStair::GetHasLBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasLBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(52)
inline void COMKERNALLib::IComArcStair::PutHasLBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasLBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(53)
inline _bstr_t COMKERNALLib::IComArcStair::GetHasRBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(54)
inline void COMKERNALLib::IComArcStair::PutHasRBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(55)
inline double COMKERNALLib::IComArcStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(56)
inline void COMKERNALLib::IComArcStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(57)
inline double COMKERNALLib::IComArcStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(58)
inline void COMKERNALLib::IComArcStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(59)
inline ACAD_LAYER COMKERNALLib::IComArcStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(60)
inline void COMKERNALLib::IComArcStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(61)
inline ACAD_LAYER COMKERNALLib::IComArcStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(62)
inline void COMKERNALLib::IComArcStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(63)
inline _bstr_t COMKERNALLib::IComArcStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(64)
inline void COMKERNALLib::IComArcStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(65)
inline _bstr_t COMKERNALLib::IComArcStair::GetAsAscent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AsAscent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(66)
inline void COMKERNALLib::IComArcStair::PutAsAscent ( _bstr_t pVal ) {
    HRESULT _hr = put_AsAscent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(67)
inline _bstr_t COMKERNALLib::IComArcStair::GetHasAscentSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasAscentSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(68)
inline void COMKERNALLib::IComArcStair::PutHasAscentSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasAscentSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(69)
inline _bstr_t COMKERNALLib::IComArcStair::GetOnGround ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(70)
inline void COMKERNALLib::IComArcStair::PutOnGround ( _bstr_t pVal ) {
    HRESULT _hr = put_OnGround(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(71)
inline _bstr_t COMKERNALLib::IComArcStair::GetPaoType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PaoType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(72)
inline void COMKERNALLib::IComArcStair::PutPaoType ( _bstr_t pVal ) {
    HRESULT _hr = put_PaoType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(73)
inline _bstr_t COMKERNALLib::IComArcStair::GetAlongWall ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlongWall(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(74)
inline void COMKERNALLib::IComArcStair::PutAlongWall ( _bstr_t pVal ) {
    HRESULT _hr = put_AlongWall(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(75)
inline _bstr_t COMKERNALLib::IComArcStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(76)
inline void COMKERNALLib::IComArcStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComAscent wrapper method implementations
//

#pragma implementation_key(77)
inline double COMKERNALLib::IComAscent::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(78)
inline void COMKERNALLib::IComAscent::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(79)
inline _bstr_t COMKERNALLib::IComAscent::GetHasSlant ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlant(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(80)
inline void COMKERNALLib::IComAscent::PutHasSlant ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlant(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(81)
inline _bstr_t COMKERNALLib::IComAscent::GetAlignment_Right ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment_Right(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(82)
inline void COMKERNALLib::IComAscent::PutAlignment_Right ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment_Right(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(83)
inline _bstr_t COMKERNALLib::IComAscent::GetAlignment_Left ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment_Left(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(84)
inline void COMKERNALLib::IComAscent::PutAlignment_Left ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment_Left(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(85)
inline double COMKERNALLib::IComAscent::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(86)
inline void COMKERNALLib::IComAscent::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(87)
inline double COMKERNALLib::IComAscent::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(88)
inline void COMKERNALLib::IComAscent::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(89)
inline double COMKERNALLib::IComAscent::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(90)
inline void COMKERNALLib::IComAscent::PutLength ( double pVal ) {
    HRESULT _hr = put_Length(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(91)
inline double COMKERNALLib::IComAscent::GetIndent ( ) {
    double _result = 0;
    HRESULT _hr = get_Indent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(92)
inline void COMKERNALLib::IComAscent::PutIndent ( double pVal ) {
    HRESULT _hr = put_Indent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(93)
inline double COMKERNALLib::IComAscent::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(94)
inline void COMKERNALLib::IComAscent::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(95)
inline double COMKERNALLib::IComAscent::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(96)
inline void COMKERNALLib::IComAscent::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(97)
inline _bstr_t COMKERNALLib::IComAscent::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(98)
inline void COMKERNALLib::IComAscent::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCamera wrapper method implementations
//

#pragma implementation_key(99)
inline double COMKERNALLib::IComCamera::GetCameraElev ( ) {
    double _result = 0;
    HRESULT _hr = get_CameraElev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(100)
inline void COMKERNALLib::IComCamera::PutCameraElev ( double pVal ) {
    HRESULT _hr = put_CameraElev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(101)
inline double COMKERNALLib::IComCamera::GetTargetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_TargetElev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(102)
inline void COMKERNALLib::IComCamera::PutTargetElev ( double pVal ) {
    HRESULT _hr = put_TargetElev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(103)
inline double COMKERNALLib::IComCamera::GetLens ( ) {
    double _result = 0;
    HRESULT _hr = get_Lens(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(104)
inline void COMKERNALLib::IComCamera::PutLens ( double pVal ) {
    HRESULT _hr = put_Lens(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(105)
inline _bstr_t COMKERNALLib::IComCamera::GetPerspective ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Perspective(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(106)
inline void COMKERNALLib::IComCamera::PutPerspective ( _bstr_t pVal ) {
    HRESULT _hr = put_Perspective(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(107)
inline _bstr_t COMKERNALLib::IComCamera::GetActive ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Active(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(108)
inline void COMKERNALLib::IComCamera::PutActive ( _bstr_t pVal ) {
    HRESULT _hr = put_Active(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(109)
inline double COMKERNALLib::IComCamera::GetLongitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Longitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(110)
inline void COMKERNALLib::IComCamera::PutLongitude ( double pVal ) {
    HRESULT _hr = put_Longitude(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(111)
inline double COMKERNALLib::IComCamera::GetLatitude ( ) {
    double _result = 0;
    HRESULT _hr = get_Latitude(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(112)
inline void COMKERNALLib::IComCamera::PutLatitude ( double pVal ) {
    HRESULT _hr = put_Latitude(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(113)
inline _bstr_t COMKERNALLib::IComCamera::GetFrontClipOn ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FrontClipOn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(114)
inline void COMKERNALLib::IComCamera::PutFrontClipOn ( _bstr_t pVal ) {
    HRESULT _hr = put_FrontClipOn(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(115)
inline _bstr_t COMKERNALLib::IComCamera::GetBackClipOn ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BackClipOn(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(116)
inline void COMKERNALLib::IComCamera::PutBackClipOn ( _bstr_t pVal ) {
    HRESULT _hr = put_BackClipOn(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(117)
inline _bstr_t COMKERNALLib::IComCamera::GetFrontClipAtEye ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FrontClipAtEye(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(118)
inline void COMKERNALLib::IComCamera::PutFrontClipAtEye ( _bstr_t pVal ) {
    HRESULT _hr = put_FrontClipAtEye(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(119)
inline double COMKERNALLib::IComCamera::GetFrontClipDist ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontClipDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(120)
inline void COMKERNALLib::IComCamera::PutFrontClipDist ( double pVal ) {
    HRESULT _hr = put_FrontClipDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(121)
inline double COMKERNALLib::IComCamera::GetBackClipDist ( ) {
    double _result = 0;
    HRESULT _hr = get_BackClipDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(122)
inline void COMKERNALLib::IComCamera::PutBackClipDist ( double pVal ) {
    HRESULT _hr = put_BackClipDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(123)
inline double COMKERNALLib::IComCamera::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(124)
inline void COMKERNALLib::IComCamera::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(125)
inline _bstr_t COMKERNALLib::IComCamera::GetCameraType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CameraType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(126)
inline double COMKERNALLib::IComCamera::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(127)
inline void COMKERNALLib::IComCamera::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComColumn wrapper method implementations
//

#pragma implementation_key(128)
inline double COMKERNALLib::IComColumn::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(129)
inline void COMKERNALLib::IComColumn::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(130)
inline double COMKERNALLib::IComColumn::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(131)
inline void COMKERNALLib::IComColumn::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(132)
inline double COMKERNALLib::IComColumn::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(133)
inline void COMKERNALLib::IComColumn::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(134)
inline double COMKERNALLib::IComColumn::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(135)
inline void COMKERNALLib::IComColumn::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(136)
inline double COMKERNALLib::IComColumn::GetDeep ( ) {
    double _result = 0;
    HRESULT _hr = get_Deep(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(137)
inline void COMKERNALLib::IComColumn::PutDeep ( double pVal ) {
    HRESULT _hr = put_Deep(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(138)
inline double COMKERNALLib::IComColumn::GetDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(139)
inline void COMKERNALLib::IComColumn::PutDiameter ( double pVal ) {
    HRESULT _hr = put_Diameter(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(140)
inline double COMKERNALLib::IComColumn::GetSideLength ( ) {
    double _result = 0;
    HRESULT _hr = get_SideLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(141)
inline void COMKERNALLib::IComColumn::PutSideLength ( double pVal ) {
    HRESULT _hr = put_SideLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(142)
inline _bstr_t COMKERNALLib::IComColumn::GetSectionArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SectionArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(143)
inline _bstr_t COMKERNALLib::IComColumn::GetSectionPerimeter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SectionPerimeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(144)
inline _bstr_t COMKERNALLib::IComColumn::GetSideArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(145)
inline _bstr_t COMKERNALLib::IComColumn::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(146)
inline _bstr_t COMKERNALLib::IComColumn::GetSectionShapeText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SectionShapeText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(147)
inline void COMKERNALLib::IComColumn::PutSectionShapeText ( _bstr_t pVal ) {
    HRESULT _hr = put_SectionShapeText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(148)
inline _bstr_t COMKERNALLib::IComColumn::GetStruSectionShapeText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StruSectionShapeText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(149)
inline void COMKERNALLib::IComColumn::PutStruSectionShapeText ( _bstr_t pVal ) {
    HRESULT _hr = put_StruSectionShapeText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(150)
inline double COMKERNALLib::IComColumn::GetStruDiameter ( ) {
    double _result = 0;
    HRESULT _hr = get_StruDiameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(151)
inline void COMKERNALLib::IComColumn::PutStruDiameter ( double pVal ) {
    HRESULT _hr = put_StruDiameter(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(152)
inline _bstr_t COMKERNALLib::IComColumn::GetTopFace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(153)
inline void COMKERNALLib::IComColumn::PutTopFace ( _bstr_t pVal ) {
    HRESULT _hr = put_TopFace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(154)
inline _bstr_t COMKERNALLib::IComColumn::GetBottomFace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(155)
inline void COMKERNALLib::IComColumn::PutBottomFace ( _bstr_t pVal ) {
    HRESULT _hr = put_BottomFace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(156)
inline _bstr_t COMKERNALLib::IComColumn::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(157)
inline void COMKERNALLib::IComColumn::PutLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_Label(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(158)
inline _bstr_t COMKERNALLib::IComColumn::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(159)
inline void COMKERNALLib::IComColumn::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(160)
inline _bstr_t COMKERNALLib::IComColumn::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(161)
inline void COMKERNALLib::IComColumn::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(162)
inline _bstr_t COMKERNALLib::IComColumn::GetHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(163)
inline void COMKERNALLib::IComColumn::PutHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_HideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(164)
inline ACAD_LAYER COMKERNALLib::IComColumn::GetHatchLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HatchLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(165)
inline void COMKERNALLib::IComColumn::PutHatchLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HatchLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(166)
inline double COMKERNALLib::IComColumn::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(167)
inline void COMKERNALLib::IComColumn::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(168)
inline double COMKERNALLib::IComColumn::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(169)
inline void COMKERNALLib::IComColumn::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(170)
inline _bstr_t COMKERNALLib::IComColumn::GetType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Type(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(171)
inline void COMKERNALLib::IComColumn::PutType ( _bstr_t pVal ) {
    HRESULT _hr = put_Type(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(172)
inline _bstr_t COMKERNALLib::IComColumn::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(173)
inline void COMKERNALLib::IComColumn::PutStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_Style(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(174)
inline _bstr_t COMKERNALLib::IComColumn::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(175)
inline void COMKERNALLib::IComColumn::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(176)
inline _bstr_t COMKERNALLib::IComColumn::GetInsulate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Insulate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(177)
inline void COMKERNALLib::IComColumn::PutInsulate ( _bstr_t pVal ) {
    HRESULT _hr = put_Insulate(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(178)
inline double COMKERNALLib::IComColumn::GetInsulateThick ( ) {
    double _result = 0;
    HRESULT _hr = get_InsulateThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(179)
inline void COMKERNALLib::IComColumn::PutInsulateThick ( double pVal ) {
    HRESULT _hr = put_InsulateThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(180)
inline ACAD_LAYER COMKERNALLib::IComColumn::GetInsulateLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_InsulateLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(181)
inline void COMKERNALLib::IComColumn::PutInsulateLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_InsulateLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(182)
inline _bstr_t COMKERNALLib::IComColumn::GetColumnNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColumnNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(183)
inline void COMKERNALLib::IComColumn::PutColumnNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_ColumnNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(184)
inline _bstr_t COMKERNALLib::IComColumn::GetColumnIsHatch ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColumnIsHatch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(185)
inline void COMKERNALLib::IComColumn::PutColumnIsHatch ( _bstr_t pVal ) {
    HRESULT _hr = put_ColumnIsHatch(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(186)
inline _bstr_t COMKERNALLib::IComColumn::GetColumnIsOverThick ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColumnIsOverThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(187)
inline void COMKERNALLib::IComColumn::PutColumnIsOverThick ( _bstr_t pVal ) {
    HRESULT _hr = put_ColumnIsOverThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(188)
inline double COMKERNALLib::IComColumn::GetColumnWidthB ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnWidthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(189)
inline void COMKERNALLib::IComColumn::PutColumnWidthB ( double pVal ) {
    HRESULT _hr = put_ColumnWidthB(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(190)
inline double COMKERNALLib::IComColumn::GetColumnHeightH ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnHeightH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(191)
inline void COMKERNALLib::IComColumn::PutColumnHeightH ( double pVal ) {
    HRESULT _hr = put_ColumnHeightH(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(192)
inline double COMKERNALLib::IComColumn::GetColumnThicknessB ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnThicknessB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(193)
inline void COMKERNALLib::IComColumn::PutColumnThicknessB ( double pVal ) {
    HRESULT _hr = put_ColumnThicknessB(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(194)
inline double COMKERNALLib::IComColumn::GetColumnSumH ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnSumH(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(195)
inline void COMKERNALLib::IComColumn::PutColumnSumH ( double pVal ) {
    HRESULT _hr = put_ColumnSumH(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(196)
inline double COMKERNALLib::IComColumn::GetColumnWidthU ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnWidthU(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(197)
inline void COMKERNALLib::IComColumn::PutColumnWidthU ( double pVal ) {
    HRESULT _hr = put_ColumnWidthU(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(198)
inline double COMKERNALLib::IComColumn::GetColumnThicknessT ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnThicknessT(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(199)
inline void COMKERNALLib::IComColumn::PutColumnThicknessT ( double pVal ) {
    HRESULT _hr = put_ColumnThicknessT(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(200)
inline double COMKERNALLib::IComColumn::GetColumnWidthD ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnWidthD(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(201)
inline void COMKERNALLib::IComColumn::PutColumnWidthD ( double pVal ) {
    HRESULT _hr = put_ColumnWidthD(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(202)
inline double COMKERNALLib::IComColumn::GetColumnThicknessF ( ) {
    double _result = 0;
    HRESULT _hr = get_ColumnThicknessF(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(203)
inline void COMKERNALLib::IComColumn::PutColumnThicknessF ( double pVal ) {
    HRESULT _hr = put_ColumnThicknessF(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(204)
inline double COMKERNALLib::IComColumn::GetStruElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_StruElevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(205)
inline void COMKERNALLib::IComColumn::PutStruElevation ( double pVal ) {
    HRESULT _hr = put_StruElevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(206)
inline double COMKERNALLib::IComColumn::GetStruHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StruHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(207)
inline void COMKERNALLib::IComColumn::PutStruHeight ( double pVal ) {
    HRESULT _hr = put_StruHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(208)
inline _bstr_t COMKERNALLib::IComColumn::GetStruStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StruStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(209)
inline void COMKERNALLib::IComColumn::PutStruStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_StruStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(210)
inline ACAD_LAYER COMKERNALLib::IComColumn::GetStruHatchLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StruHatchLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(211)
inline void COMKERNALLib::IComColumn::PutStruHatchLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StruHatchLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCurveMesh wrapper method implementations
//

#pragma implementation_key(212)
inline double COMKERNALLib::IComCurveMesh::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(213)
inline void COMKERNALLib::IComCurveMesh::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(214)
inline double COMKERNALLib::IComCurveMesh::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(215)
inline void COMKERNALLib::IComCurveMesh::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(216)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(217)
inline void COMKERNALLib::IComCurveMesh::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(218)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetPathLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(219)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetSideArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(220)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetShapePerimeter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShapePerimeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(221)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(222)
inline _variant_t COMKERNALLib::IComCurveMesh::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(223)
inline void COMKERNALLib::IComCurveMesh::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(224)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetShapeVisibility ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShapeVisibility(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(225)
inline void COMKERNALLib::IComCurveMesh::PutShapeVisibility ( _bstr_t pVal ) {
    HRESULT _hr = put_ShapeVisibility(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(226)
inline _bstr_t COMKERNALLib::IComCurveMesh::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(227)
inline void COMKERNALLib::IComCurveMesh::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCurveStair wrapper method implementations
//

#pragma implementation_key(228)
inline double COMKERNALLib::IComCurveStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(229)
inline void COMKERNALLib::IComCurveStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(230)
inline double COMKERNALLib::IComCurveStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(231)
inline void COMKERNALLib::IComCurveStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(232)
inline _bstr_t COMKERNALLib::IComCurveStair::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(233)
inline void COMKERNALLib::IComCurveStair::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(234)
inline double COMKERNALLib::IComCurveStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(235)
inline void COMKERNALLib::IComCurveStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(236)
inline double COMKERNALLib::IComCurveStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(237)
inline void COMKERNALLib::IComCurveStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(238)
inline long COMKERNALLib::IComCurveStair::GetStepNum ( ) {
    long _result = 0;
    HRESULT _hr = get_StepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(239)
inline void COMKERNALLib::IComCurveStair::PutStepNum ( long pVal ) {
    HRESULT _hr = put_StepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(240)
inline double COMKERNALLib::IComCurveStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(241)
inline void COMKERNALLib::IComCurveStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(242)
inline _bstr_t COMKERNALLib::IComCurveStair::GetHasLBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasLBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(243)
inline void COMKERNALLib::IComCurveStair::PutHasLBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasLBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(244)
inline _bstr_t COMKERNALLib::IComCurveStair::GetHasRBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(245)
inline void COMKERNALLib::IComCurveStair::PutHasRBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(246)
inline double COMKERNALLib::IComCurveStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(247)
inline void COMKERNALLib::IComCurveStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(248)
inline double COMKERNALLib::IComCurveStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(249)
inline void COMKERNALLib::IComCurveStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(250)
inline ACAD_LAYER COMKERNALLib::IComCurveStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(251)
inline void COMKERNALLib::IComCurveStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(252)
inline ACAD_LAYER COMKERNALLib::IComCurveStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(253)
inline void COMKERNALLib::IComCurveStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(254)
inline _bstr_t COMKERNALLib::IComCurveStair::GetPaoType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PaoType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(255)
inline void COMKERNALLib::IComCurveStair::PutPaoType ( _bstr_t pVal ) {
    HRESULT _hr = put_PaoType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(256)
inline _bstr_t COMKERNALLib::IComCurveStair::GetAsAscent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AsAscent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(257)
inline void COMKERNALLib::IComCurveStair::PutAsAscent ( _bstr_t pVal ) {
    HRESULT _hr = put_AsAscent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(258)
inline _bstr_t COMKERNALLib::IComCurveStair::GetHasAscentSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasAscentSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(259)
inline void COMKERNALLib::IComCurveStair::PutHasAscentSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasAscentSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(260)
inline _bstr_t COMKERNALLib::IComCurveStair::GetOnGround ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(261)
inline void COMKERNALLib::IComCurveStair::PutOnGround ( _bstr_t pVal ) {
    HRESULT _hr = put_OnGround(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(262)
inline _bstr_t COMKERNALLib::IComCurveStair::GetAlongWall ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlongWall(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(263)
inline void COMKERNALLib::IComCurveStair::PutAlongWall ( _bstr_t pVal ) {
    HRESULT _hr = put_AlongWall(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(264)
inline _bstr_t COMKERNALLib::IComCurveStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(265)
inline void COMKERNALLib::IComCurveStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComHandRail wrapper method implementations
//

#pragma implementation_key(266)
inline double COMKERNALLib::IComHandRail::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(267)
inline void COMKERNALLib::IComHandRail::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(268)
inline double COMKERNALLib::IComHandRail::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(269)
inline void COMKERNALLib::IComHandRail::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(270)
inline _bstr_t COMKERNALLib::IComHandRail::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(271)
inline void COMKERNALLib::IComHandRail::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(272)
inline double COMKERNALLib::IComHandRail::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(273)
inline void COMKERNALLib::IComHandRail::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(274)
inline _bstr_t COMKERNALLib::IComHandRail::GetThickness ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(275)
inline void COMKERNALLib::IComHandRail::PutThickness ( _bstr_t pVal ) {
    HRESULT _hr = put_Thickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(276)
inline double COMKERNALLib::IComHandRail::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(277)
inline void COMKERNALLib::IComHandRail::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(278)
inline _variant_t COMKERNALLib::IComHandRail::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(279)
inline void COMKERNALLib::IComHandRail::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(280)
inline _bstr_t COMKERNALLib::IComHandRail::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(281)
inline void COMKERNALLib::IComHandRail::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(282)
inline _bstr_t COMKERNALLib::IComHandRail::GetShape ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(283)
inline void COMKERNALLib::IComHandRail::PutShape ( _bstr_t pVal ) {
    HRESULT _hr = put_Shape(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(284)
inline _bstr_t COMKERNALLib::IComHandRail::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(285)
inline void COMKERNALLib::IComHandRail::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComLineStair wrapper method implementations
//

#pragma implementation_key(286)
inline double COMKERNALLib::IComLineStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(287)
inline void COMKERNALLib::IComLineStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(288)
inline double COMKERNALLib::IComLineStair::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(289)
inline void COMKERNALLib::IComLineStair::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(290)
inline double COMKERNALLib::IComLineStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(291)
inline void COMKERNALLib::IComLineStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(292)
inline double COMKERNALLib::IComLineStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(293)
inline void COMKERNALLib::IComLineStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(294)
inline long COMKERNALLib::IComLineStair::GetStepNum ( ) {
    long _result = 0;
    HRESULT _hr = get_StepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(295)
inline void COMKERNALLib::IComLineStair::PutStepNum ( long pVal ) {
    HRESULT _hr = put_StepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(296)
inline double COMKERNALLib::IComLineStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(297)
inline void COMKERNALLib::IComLineStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(298)
inline double COMKERNALLib::IComLineStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(299)
inline void COMKERNALLib::IComLineStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(300)
inline _bstr_t COMKERNALLib::IComLineStair::GetHasLBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasLBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(301)
inline void COMKERNALLib::IComLineStair::PutHasLBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasLBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(302)
inline _bstr_t COMKERNALLib::IComLineStair::GetHasRBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(303)
inline void COMKERNALLib::IComLineStair::PutHasRBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(304)
inline double COMKERNALLib::IComLineStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(305)
inline void COMKERNALLib::IComLineStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(306)
inline double COMKERNALLib::IComLineStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(307)
inline void COMKERNALLib::IComLineStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(308)
inline ACAD_LAYER COMKERNALLib::IComLineStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(309)
inline void COMKERNALLib::IComLineStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(310)
inline ACAD_LAYER COMKERNALLib::IComLineStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(311)
inline void COMKERNALLib::IComLineStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(312)
inline double COMKERNALLib::IComLineStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(313)
inline void COMKERNALLib::IComLineStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(314)
inline double COMKERNALLib::IComLineStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(315)
inline void COMKERNALLib::IComLineStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(316)
inline short COMKERNALLib::IComLineStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(317)
inline void COMKERNALLib::IComLineStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(318)
inline _bstr_t COMKERNALLib::IComLineStair::GetAsAscent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AsAscent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(319)
inline void COMKERNALLib::IComLineStair::PutAsAscent ( _bstr_t pVal ) {
    HRESULT _hr = put_AsAscent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(320)
inline _bstr_t COMKERNALLib::IComLineStair::GetHasAscentSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasAscentSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(321)
inline void COMKERNALLib::IComLineStair::PutHasAscentSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasAscentSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(322)
inline _bstr_t COMKERNALLib::IComLineStair::GetOnGround ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(323)
inline void COMKERNALLib::IComLineStair::PutOnGround ( _bstr_t pVal ) {
    HRESULT _hr = put_OnGround(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(324)
inline _bstr_t COMKERNALLib::IComLineStair::GetAlongWall ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlongWall(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(325)
inline void COMKERNALLib::IComLineStair::PutAlongWall ( _bstr_t pVal ) {
    HRESULT _hr = put_AlongWall(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(326)
inline _bstr_t COMKERNALLib::IComLineStair::GetPaoType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PaoType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(327)
inline void COMKERNALLib::IComLineStair::PutPaoType ( _bstr_t pVal ) {
    HRESULT _hr = put_PaoType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComOpening wrapper method implementations
//

#pragma implementation_key(328)
inline double COMKERNALLib::IComOpening::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(329)
inline void COMKERNALLib::IComOpening::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(330)
inline double COMKERNALLib::IComOpening::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(331)
inline void COMKERNALLib::IComOpening::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(332)
inline _bstr_t COMKERNALLib::IComOpening::GetHoleType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(333)
inline void COMKERNALLib::IComOpening::PutHoleType ( _bstr_t pVal ) {
    HRESULT _hr = put_HoleType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(334)
inline double COMKERNALLib::IComOpening::GetWinSill ( ) {
    double _result = 0;
    HRESULT _hr = get_WinSill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(335)
inline void COMKERNALLib::IComOpening::PutWinSill ( double pVal ) {
    HRESULT _hr = put_WinSill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(336)
inline double COMKERNALLib::IComOpening::GetDoorSill ( ) {
    double _result = 0;
    HRESULT _hr = get_DoorSill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(337)
inline void COMKERNALLib::IComOpening::PutDoorSill ( double pVal ) {
    HRESULT _hr = put_DoorSill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(338)
inline double COMKERNALLib::IComOpening::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(339)
inline void COMKERNALLib::IComOpening::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(340)
inline double COMKERNALLib::IComOpening::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(341)
inline void COMKERNALLib::IComOpening::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(342)
inline double COMKERNALLib::IComOpening::GetStruWinSill ( ) {
    double _result = 0;
    HRESULT _hr = get_StruWinSill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(343)
inline void COMKERNALLib::IComOpening::PutStruWinSill ( double pVal ) {
    HRESULT _hr = put_StruWinSill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(344)
inline double COMKERNALLib::IComOpening::GetBayThick ( ) {
    double _result = 0;
    HRESULT _hr = get_BayThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(345)
inline void COMKERNALLib::IComOpening::PutBayThick ( double pVal ) {
    HRESULT _hr = put_BayThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(346)
inline double COMKERNALLib::IComOpening::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(347)
inline void COMKERNALLib::IComOpening::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(348)
inline double COMKERNALLib::IComOpening::GetUFrame ( ) {
    double _result = 0;
    HRESULT _hr = get_UFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(349)
inline void COMKERNALLib::IComOpening::PutUFrame ( double pVal ) {
    HRESULT _hr = put_UFrame(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(350)
inline double COMKERNALLib::IComOpening::GetVFrame ( ) {
    double _result = 0;
    HRESULT _hr = get_VFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(351)
inline void COMKERNALLib::IComOpening::PutVFrame ( double pVal ) {
    HRESULT _hr = put_VFrame(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(352)
inline _bstr_t COMKERNALLib::IComOpening::GetOutlineArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutlineArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(353)
inline double COMKERNALLib::IComOpening::GetOutlineLength ( ) {
    double _result = 0;
    HRESULT _hr = get_OutlineLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(354)
inline _bstr_t COMKERNALLib::IComOpening::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(355)
inline void COMKERNALLib::IComOpening::PutLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_Label(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(356)
inline double COMKERNALLib::IComOpening::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(357)
inline void COMKERNALLib::IComOpening::PutTextHeight ( double pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(358)
inline _bstr_t COMKERNALLib::IComOpening::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(359)
inline void COMKERNALLib::IComOpening::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(360)
inline _bstr_t COMKERNALLib::IComOpening::GetHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(361)
inline void COMKERNALLib::IComOpening::PutHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_HideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(362)
inline ACAD_LAYER COMKERNALLib::IComOpening::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(363)
inline void COMKERNALLib::IComOpening::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(364)
inline ACAD_LAYER COMKERNALLib::IComOpening::GetGlassLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_GlassLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(365)
inline void COMKERNALLib::IComOpening::PutGlassLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_GlassLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(366)
inline ACAD_LAYER COMKERNALLib::IComOpening::GetFrameLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_FrameLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(367)
inline void COMKERNALLib::IComOpening::PutFrameLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_FrameLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(368)
inline ACAD_LAYER COMKERNALLib::IComOpening::GetSlabLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_SlabLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(369)
inline void COMKERNALLib::IComOpening::PutSlabLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_SlabLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(370)
inline _bstr_t COMKERNALLib::IComOpening::GetProStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(371)
inline void COMKERNALLib::IComOpening::PutProStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_ProStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(372)
inline _bstr_t COMKERNALLib::IComOpening::GetLeftSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(373)
inline void COMKERNALLib::IComOpening::PutLeftSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(374)
inline _bstr_t COMKERNALLib::IComOpening::GetRightSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(375)
inline void COMKERNALLib::IComOpening::PutRightSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_RightSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(376)
inline double COMKERNALLib::IComOpening::GetProWinSlabWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ProWinSlabWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(377)
inline void COMKERNALLib::IComOpening::PutProWinSlabWidth ( double pVal ) {
    HRESULT _hr = put_ProWinSlabWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(378)
inline double COMKERNALLib::IComOpening::GetProWinSlabInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_ProWinSlabInsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(379)
inline void COMKERNALLib::IComOpening::PutProWinSlabInsuThick ( double pVal ) {
    HRESULT _hr = put_ProWinSlabInsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(380)
inline _bstr_t COMKERNALLib::IComOpening::GetSlot ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Slot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(381)
inline void COMKERNALLib::IComOpening::PutSlot ( _bstr_t pVal ) {
    HRESULT _hr = put_Slot(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(382)
inline _bstr_t COMKERNALLib::IComOpening::GetSlotMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlotMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(383)
inline void COMKERNALLib::IComOpening::PutSlotMaterial ( _bstr_t pVal ) {
    HRESULT _hr = put_SlotMaterial(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(384)
inline double COMKERNALLib::IComOpening::GetSlotExt ( ) {
    double _result = 0;
    HRESULT _hr = get_SlotExt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(385)
inline void COMKERNALLib::IComOpening::PutSlotExt ( double pVal ) {
    HRESULT _hr = put_SlotExt(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(386)
inline double COMKERNALLib::IComOpening::GetSlotWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SlotWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(387)
inline void COMKERNALLib::IComOpening::PutSlotWidth ( double pVal ) {
    HRESULT _hr = put_SlotWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(388)
inline double COMKERNALLib::IComOpening::GetSlotInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_SlotInsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(389)
inline void COMKERNALLib::IComOpening::PutSlotInsuThick ( double pVal ) {
    HRESULT _hr = put_SlotInsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(390)
inline _bstr_t COMKERNALLib::IComOpening::GetSlotInsuCap ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlotInsuCap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(391)
inline void COMKERNALLib::IComOpening::PutSlotInsuCap ( _bstr_t pVal ) {
    HRESULT _hr = put_SlotInsuCap(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(392)
inline _bstr_t COMKERNALLib::IComOpening::GetGetKind ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GetKind(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(393)
inline _bstr_t COMKERNALLib::IComOpening::GetGetSubKind ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_GetSubKind(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(394)
inline void COMKERNALLib::IComOpening::PutGetSubKind ( _bstr_t pVal ) {
    HRESULT _hr = put_GetSubKind(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(395)
inline _bstr_t COMKERNALLib::IComOpening::GetHoleStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(396)
inline void COMKERNALLib::IComOpening::PutHoleStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_HoleStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(397)
inline _bstr_t COMKERNALLib::IComOpening::GetEvacuationType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EvacuationType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(398)
inline void COMKERNALLib::IComOpening::PutEvacuationType ( _bstr_t pVal ) {
    HRESULT _hr = put_EvacuationType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(399)
inline _bstr_t COMKERNALLib::IComOpening::GetUpLevel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpLevel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(400)
inline void COMKERNALLib::IComOpening::PutUpLevel ( _bstr_t pVal ) {
    HRESULT _hr = put_UpLevel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(401)
inline short COMKERNALLib::IComOpening::GetDoorLine ( ) {
    short _result = 0;
    HRESULT _hr = get_DoorLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(402)
inline void COMKERNALLib::IComOpening::PutDoorLine ( short pVal ) {
    HRESULT _hr = put_DoorLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(403)
inline double COMKERNALLib::IComOpening::GetLineOffsetDist ( ) {
    double _result = 0;
    HRESULT _hr = get_LineOffsetDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(404)
inline void COMKERNALLib::IComOpening::PutLineOffsetDist ( double pVal ) {
    HRESULT _hr = put_LineOffsetDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(405)
inline _bstr_t COMKERNALLib::IComOpening::GetStructure ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(406)
inline void COMKERNALLib::IComOpening::PutStructure ( _bstr_t pVal ) {
    HRESULT _hr = put_Structure(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(407)
inline _bstr_t COMKERNALLib::IComOpening::GetExtShading ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtShading(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(408)
inline void COMKERNALLib::IComOpening::PutExtShading ( _bstr_t pVal ) {
    HRESULT _hr = put_ExtShading(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(409)
inline double COMKERNALLib::IComOpening::GetAreaRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_AreaRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(410)
inline double COMKERNALLib::IComOpening::GetConductivity ( ) {
    double _result = 0;
    HRESULT _hr = get_Conductivity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(411)
inline _bstr_t COMKERNALLib::IComOpening::GetUsage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Usage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(412)
inline void COMKERNALLib::IComOpening::PutUsage ( _bstr_t pVal ) {
    HRESULT _hr = put_Usage(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(413)
inline _bstr_t COMKERNALLib::IComOpening::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(414)
inline void COMKERNALLib::IComOpening::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(415)
inline _bstr_t COMKERNALLib::IComOpening::GetIsHigh ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsHigh(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(416)
inline void COMKERNALLib::IComOpening::PutIsHigh ( _bstr_t pVal ) {
    HRESULT _hr = put_IsHigh(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComRail wrapper method implementations
//

#pragma implementation_key(417)
inline double COMKERNALLib::IComRail::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(418)
inline void COMKERNALLib::IComRail::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(419)
inline double COMKERNALLib::IComRail::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(420)
inline void COMKERNALLib::IComRail::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(421)
inline _bstr_t COMKERNALLib::IComRail::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(422)
inline void COMKERNALLib::IComRail::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(423)
inline double COMKERNALLib::IComRail::GetUnitWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_UnitWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(424)
inline void COMKERNALLib::IComRail::PutUnitWidth ( double pVal ) {
    HRESULT _hr = put_UnitWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(425)
inline double COMKERNALLib::IComRail::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(426)
inline void COMKERNALLib::IComRail::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(427)
inline _bstr_t COMKERNALLib::IComRail::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(428)
inline void COMKERNALLib::IComRail::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(429)
inline _bstr_t COMKERNALLib::IComRail::GetAutoExpand ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AutoExpand(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(430)
inline void COMKERNALLib::IComRail::PutAutoExpand ( _bstr_t pVal ) {
    HRESULT _hr = put_AutoExpand(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(431)
inline _bstr_t COMKERNALLib::IComRail::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(432)
inline void COMKERNALLib::IComRail::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComRectStair wrapper method implementations
//

#pragma implementation_key(433)
inline double COMKERNALLib::IComRectStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(434)
inline void COMKERNALLib::IComRectStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(435)
inline double COMKERNALLib::IComRectStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(436)
inline void COMKERNALLib::IComRectStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(437)
inline short COMKERNALLib::IComRectStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(438)
inline void COMKERNALLib::IComRectStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(439)
inline double COMKERNALLib::IComRectStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(440)
inline void COMKERNALLib::IComRectStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(441)
inline double COMKERNALLib::IComRectStair::GetSpaceWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SpaceWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(442)
inline void COMKERNALLib::IComRectStair::PutSpaceWidth ( double pVal ) {
    HRESULT _hr = put_SpaceWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(443)
inline double COMKERNALLib::IComRectStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(444)
inline void COMKERNALLib::IComRectStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(445)
inline double COMKERNALLib::IComRectStair::GetSlabThick ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(446)
inline void COMKERNALLib::IComRectStair::PutSlabThick ( double pVal ) {
    HRESULT _hr = put_SlabThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(447)
inline double COMKERNALLib::IComRectStair::GetStairThick ( ) {
    double _result = 0;
    HRESULT _hr = get_StairThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(448)
inline void COMKERNALLib::IComRectStair::PutStairThick ( double pVal ) {
    HRESULT _hr = put_StairThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(449)
inline double COMKERNALLib::IComRectStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(450)
inline void COMKERNALLib::IComRectStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(451)
inline double COMKERNALLib::IComRectStair::GetUpSlabWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_UpSlabWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(452)
inline void COMKERNALLib::IComRectStair::PutUpSlabWidth ( double pVal ) {
    HRESULT _hr = put_UpSlabWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(453)
inline double COMKERNALLib::IComRectStair::GetDownSlabWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_DownSlabWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(454)
inline void COMKERNALLib::IComRectStair::PutDownSlabWidth ( double pVal ) {
    HRESULT _hr = put_DownSlabWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(455)
inline short COMKERNALLib::IComRectStair::GetStepTotalNum ( ) {
    short _result = 0;
    HRESULT _hr = get_StepTotalNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(456)
inline void COMKERNALLib::IComRectStair::PutStepTotalNum ( short pVal ) {
    HRESULT _hr = put_StepTotalNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(457)
inline _bstr_t COMKERNALLib::IComRectStair::GetStruTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StruTextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(458)
inline void COMKERNALLib::IComRectStair::PutStruTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_StruTextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(459)
inline _bstr_t COMKERNALLib::IComRectStair::GetStruFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StruFontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(460)
inline void COMKERNALLib::IComRectStair::PutStruFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_StruFontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(461)
inline short COMKERNALLib::IComRectStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(462)
inline void COMKERNALLib::IComRectStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(463)
inline short COMKERNALLib::IComRectStair::GetStepNum2 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(464)
inline void COMKERNALLib::IComRectStair::PutStepNum2 ( short pVal ) {
    HRESULT _hr = put_StepNum2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(465)
inline double COMKERNALLib::IComRectStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(466)
inline void COMKERNALLib::IComRectStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(467)
inline double COMKERNALLib::IComRectStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(468)
inline void COMKERNALLib::IComRectStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(469)
inline double COMKERNALLib::IComRectStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(470)
inline void COMKERNALLib::IComRectStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(471)
inline double COMKERNALLib::IComRectStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(472)
inline void COMKERNALLib::IComRectStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(473)
inline _bstr_t COMKERNALLib::IComRectStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(474)
inline void COMKERNALLib::IComRectStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(475)
inline _bstr_t COMKERNALLib::IComRectStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(476)
inline void COMKERNALLib::IComRectStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(477)
inline _bstr_t COMKERNALLib::IComRectStair::GetHasOutHandRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutHandRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(478)
inline void COMKERNALLib::IComRectStair::PutHasOutHandRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutHandRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(479)
inline _bstr_t COMKERNALLib::IComRectStair::GetRailConnection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailConnection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(480)
inline void COMKERNALLib::IComRectStair::PutRailConnection ( _bstr_t pVal ) {
    HRESULT _hr = put_RailConnection(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(481)
inline _bstr_t COMKERNALLib::IComRectStair::GetPlatType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlatType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(482)
inline void COMKERNALLib::IComRectStair::PutPlatType ( _bstr_t pVal ) {
    HRESULT _hr = put_PlatType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(483)
inline _bstr_t COMKERNALLib::IComRectStair::GetHasSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(484)
inline void COMKERNALLib::IComRectStair::PutHasSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(485)
inline double COMKERNALLib::IComRectStair::GetSlabSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(486)
inline void COMKERNALLib::IComRectStair::PutSlabSize ( double pVal ) {
    HRESULT _hr = put_SlabSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(487)
inline double COMKERNALLib::IComRectStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(488)
inline void COMKERNALLib::IComRectStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(489)
inline _bstr_t COMKERNALLib::IComRectStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(490)
inline void COMKERNALLib::IComRectStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(491)
inline _bstr_t COMKERNALLib::IComRectStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(492)
inline void COMKERNALLib::IComRectStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(493)
inline double COMKERNALLib::IComRectStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(494)
inline void COMKERNALLib::IComRectStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(495)
inline double COMKERNALLib::IComRectStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(496)
inline void COMKERNALLib::IComRectStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(497)
inline ACAD_LAYER COMKERNALLib::IComRectStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(498)
inline void COMKERNALLib::IComRectStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(499)
inline ACAD_LAYER COMKERNALLib::IComRectStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(500)
inline void COMKERNALLib::IComRectStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(501)
inline ACAD_LAYER COMKERNALLib::IComRectStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(502)
inline void COMKERNALLib::IComRectStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(503)
inline ACAD_LAYER COMKERNALLib::IComRectStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(504)
inline void COMKERNALLib::IComRectStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(505)
inline ACAD_LAYER COMKERNALLib::IComRectStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(506)
inline void COMKERNALLib::IComRectStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(507)
inline ACAD_LAYER COMKERNALLib::IComRectStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(508)
inline void COMKERNALLib::IComRectStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(509)
inline _bstr_t COMKERNALLib::IComRectStair::GetAsAcsent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AsAcsent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(510)
inline void COMKERNALLib::IComRectStair::PutAsAcsent ( _bstr_t pVal ) {
    HRESULT _hr = put_AsAcsent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(511)
inline _bstr_t COMKERNALLib::IComRectStair::GetHasAcsentSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasAcsentSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(512)
inline void COMKERNALLib::IComRectStair::PutHasAcsentSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasAcsentSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(513)
inline _bstr_t COMKERNALLib::IComRectStair::GetOnGround ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(514)
inline void COMKERNALLib::IComRectStair::PutOnGround ( _bstr_t pVal ) {
    HRESULT _hr = put_OnGround(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(515)
inline _bstr_t COMKERNALLib::IComRectStair::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(516)
inline void COMKERNALLib::IComRectStair::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(517)
inline _bstr_t COMKERNALLib::IComRectStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(518)
inline void COMKERNALLib::IComRectStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(519)
inline _bstr_t COMKERNALLib::IComRectStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(520)
inline void COMKERNALLib::IComRectStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(521)
inline _bstr_t COMKERNALLib::IComRectStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(522)
inline void COMKERNALLib::IComRectStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(523)
inline _bstr_t COMKERNALLib::IComRectStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(524)
inline void COMKERNALLib::IComRectStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(525)
inline double COMKERNALLib::IComRectStair::GetFirstRailDist ( ) {
    double _result = 0;
    HRESULT _hr = get_FirstRailDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(526)
inline void COMKERNALLib::IComRectStair::PutFirstRailDist ( double pVal ) {
    HRESULT _hr = put_FirstRailDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(527)
inline double COMKERNALLib::IComRectStair::GetEndRailDist ( ) {
    double _result = 0;
    HRESULT _hr = get_EndRailDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(528)
inline void COMKERNALLib::IComRectStair::PutEndRailDist ( double pVal ) {
    HRESULT _hr = put_EndRailDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(529)
inline _bstr_t COMKERNALLib::IComRectStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(530)
inline void COMKERNALLib::IComRectStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(531)
inline _bstr_t COMKERNALLib::IComRectStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(532)
inline void COMKERNALLib::IComRectStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(533)
inline _bstr_t COMKERNALLib::IComRectStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(534)
inline void COMKERNALLib::IComRectStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(535)
inline _bstr_t COMKERNALLib::IComRectStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(536)
inline void COMKERNALLib::IComRectStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(537)
inline double COMKERNALLib::IComRectStair::GetSectHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_SectHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(538)
inline void COMKERNALLib::IComRectStair::PutSectHeight ( double pVal ) {
    HRESULT _hr = put_SectHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(539)
inline short COMKERNALLib::IComRectStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(540)
inline void COMKERNALLib::IComRectStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(541)
inline _bstr_t COMKERNALLib::IComRectStair::GetEvacuateDia ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EvacuateDia(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(542)
inline void COMKERNALLib::IComRectStair::PutEvacuateDia ( _bstr_t pVal ) {
    HRESULT _hr = put_EvacuateDia(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(543)
inline _bstr_t COMKERNALLib::IComRectStair::GetEvacuateDiaPos ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EvacuateDiaPos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(544)
inline void COMKERNALLib::IComRectStair::PutEvacuateDiaPos ( _bstr_t pVal ) {
    HRESULT _hr = put_EvacuateDiaPos(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(545)
inline _variant_t COMKERNALLib::IComRectStair::GetEvacuateDiaColor ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_EvacuateDiaColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(546)
inline void COMKERNALLib::IComRectStair::PutEvacuateDiaColor ( const _variant_t & pVal ) {
    HRESULT _hr = put_EvacuateDiaColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSlab wrapper method implementations
//

#pragma implementation_key(547)
inline double COMKERNALLib::IComSlab::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(548)
inline void COMKERNALLib::IComSlab::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(549)
inline double COMKERNALLib::IComSlab::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(550)
inline void COMKERNALLib::IComSlab::PutThickness ( double pVal ) {
    HRESULT _hr = put_Thickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(551)
inline double COMKERNALLib::IComSlab::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(552)
inline void COMKERNALLib::IComSlab::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(553)
inline double COMKERNALLib::IComSlab::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(554)
inline void COMKERNALLib::IComSlab::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(555)
inline _bstr_t COMKERNALLib::IComSlab::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(556)
inline void COMKERNALLib::IComSlab::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSlopeRoof wrapper method implementations
//

#pragma implementation_key(557)
inline double COMKERNALLib::IComSlopeRoof::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(558)
inline void COMKERNALLib::IComSlopeRoof::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(559)
inline _variant_t COMKERNALLib::IComSlopeRoof::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(560)
inline void COMKERNALLib::IComSlopeRoof::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(561)
inline double COMKERNALLib::IComSlopeRoof::GetSlopeAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SlopeAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(562)
inline void COMKERNALLib::IComSlopeRoof::PutSlopeAngle ( double pVal ) {
    HRESULT _hr = put_SlopeAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(563)
inline double COMKERNALLib::IComSlopeRoof::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(564)
inline void COMKERNALLib::IComSlopeRoof::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(565)
inline double COMKERNALLib::IComSlopeRoof::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(566)
inline void COMKERNALLib::IComSlopeRoof::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(567)
inline _bstr_t COMKERNALLib::IComSlopeRoof::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(568)
inline void COMKERNALLib::IComSlopeRoof::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSpace wrapper method implementations
//

#pragma implementation_key(569)
inline double COMKERNALLib::IComSpace::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(570)
inline void COMKERNALLib::IComSpace::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(571)
inline double COMKERNALLib::IComSpace::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(572)
inline void COMKERNALLib::IComSpace::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(573)
inline _bstr_t COMKERNALLib::IComSpace::GetDispMode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DispMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(574)
inline void COMKERNALLib::IComSpace::PutDispMode ( _bstr_t pVal ) {
    HRESULT _hr = put_DispMode(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(575)
inline _bstr_t COMKERNALLib::IComSpace::GetCode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Code(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(576)
inline void COMKERNALLib::IComSpace::PutCode ( _bstr_t pVal ) {
    HRESULT _hr = put_Code(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(577)
inline _bstr_t COMKERNALLib::IComSpace::GetShowCode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowCode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(578)
inline void COMKERNALLib::IComSpace::PutShowCode ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowCode(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(579)
inline double COMKERNALLib::IComSpace::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(580)
inline void COMKERNALLib::IComSpace::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(581)
inline double COMKERNALLib::IComSpace::GetFloorThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_FloorThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(582)
inline void COMKERNALLib::IComSpace::PutFloorThickness ( double pVal ) {
    HRESULT _hr = put_FloorThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(583)
inline double COMKERNALLib::IComSpace::GetStuccoThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_StuccoThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(584)
inline void COMKERNALLib::IComSpace::PutStuccoThickness ( double pVal ) {
    HRESULT _hr = put_StuccoThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(585)
inline double COMKERNALLib::IComSpace::GetKickboard ( ) {
    double _result = 0;
    HRESULT _hr = get_Kickboard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(586)
inline double COMKERNALLib::IComSpace::GetPerimeter ( ) {
    double _result = 0;
    HRESULT _hr = get_Perimeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(587)
inline _bstr_t COMKERNALLib::IComSpace::GetUseVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UseVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(588)
inline _bstr_t COMKERNALLib::IComSpace::GetUseArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UseArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(589)
inline _bstr_t COMKERNALLib::IComSpace::GetOccuArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OccuArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(590)
inline _bstr_t COMKERNALLib::IComSpace::GetWallSurfArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_WallSurfArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(591)
inline _bstr_t COMKERNALLib::IComSpace::GetExtWallArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtWallArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(592)
inline _bstr_t COMKERNALLib::IComSpace::GetExtWinArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtWinArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(593)
inline _bstr_t COMKERNALLib::IComSpace::GetExtDoorArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtDoorArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(594)
inline _bstr_t COMKERNALLib::IComSpace::GetAreaComputeType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AreaComputeType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(595)
inline void COMKERNALLib::IComSpace::PutAreaComputeType ( _bstr_t pVal ) {
    HRESULT _hr = put_AreaComputeType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(596)
inline ACAD_LAYER COMKERNALLib::IComSpace::GetHatchLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HatchLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(597)
inline void COMKERNALLib::IComSpace::PutHatchLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HatchLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(598)
inline _bstr_t COMKERNALLib::IComSpace::GetMaskFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MaskFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(599)
inline void COMKERNALLib::IComSpace::PutMaskFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_MaskFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(600)
inline _bstr_t COMKERNALLib::IComSpace::GetFloor3D ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Floor3D(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(601)
inline void COMKERNALLib::IComSpace::PutFloor3D ( _bstr_t pVal ) {
    HRESULT _hr = put_Floor3D(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(602)
inline _bstr_t COMKERNALLib::IComSpace::GetNameType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(603)
inline void COMKERNALLib::IComSpace::PutNameType ( _bstr_t pVal ) {
    HRESULT _hr = put_NameType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(604)
inline _bstr_t COMKERNALLib::IComSpace::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(605)
inline void COMKERNALLib::IComSpace::PutName ( _bstr_t pVal ) {
    HRESULT _hr = put_Name(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(606)
inline _bstr_t COMKERNALLib::IComSpace::GetName2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(607)
inline void COMKERNALLib::IComSpace::PutName2 ( _bstr_t pVal ) {
    HRESULT _hr = put_Name2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(608)
inline _bstr_t COMKERNALLib::IComSpace::GetShowName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(609)
inline void COMKERNALLib::IComSpace::PutShowName ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowName(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(610)
inline _bstr_t COMKERNALLib::IComSpace::GetShowArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(611)
inline void COMKERNALLib::IComSpace::PutShowArea ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowArea(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(612)
inline _bstr_t COMKERNALLib::IComSpace::GetAreaUnit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AreaUnit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(613)
inline void COMKERNALLib::IComSpace::PutAreaUnit ( _bstr_t pVal ) {
    HRESULT _hr = put_AreaUnit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(614)
inline double COMKERNALLib::IComSpace::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(615)
inline void COMKERNALLib::IComSpace::PutTextHeight ( double pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(616)
inline double COMKERNALLib::IComSpace::GetTextRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_TextRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(617)
inline void COMKERNALLib::IComSpace::PutTextRotation ( double pVal ) {
    HRESULT _hr = put_TextRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(618)
inline _bstr_t COMKERNALLib::IComSpace::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(619)
inline void COMKERNALLib::IComSpace::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(620)
inline _bstr_t COMKERNALLib::IComSpace::GetFloorType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(621)
inline void COMKERNALLib::IComSpace::PutFloorType ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(622)
inline _bstr_t COMKERNALLib::IComSpace::GetStructure ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(623)
inline void COMKERNALLib::IComSpace::PutStructure ( _bstr_t pVal ) {
    HRESULT _hr = put_Structure(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(624)
inline double COMKERNALLib::IComSpace::GetConductivity ( ) {
    double _result = 0;
    HRESULT _hr = get_Conductivity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(625)
inline _bstr_t COMKERNALLib::IComSpace::GetHasRoof ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRoof(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(626)
inline void COMKERNALLib::IComSpace::PutHasRoof ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRoof(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(627)
inline _bstr_t COMKERNALLib::IComSpace::GetStructure2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Structure2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(628)
inline void COMKERNALLib::IComSpace::PutStructure2 ( _bstr_t pVal ) {
    HRESULT _hr = put_Structure2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(629)
inline double COMKERNALLib::IComSpace::GetConductivity2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Conductivity2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(630)
inline double COMKERNALLib::IComSpace::GetInertiaIndex2 ( ) {
    double _result = 0;
    HRESULT _hr = get_InertiaIndex2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(631)
inline _bstr_t COMKERNALLib::IComSpace::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(632)
inline void COMKERNALLib::IComSpace::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(633)
inline _bstr_t COMKERNALLib::IComSpace::GetShowOutLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowOutLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(634)
inline void COMKERNALLib::IComSpace::PutShowOutLine ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowOutLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(635)
inline _bstr_t COMKERNALLib::IComSpace::GetShowHatch ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowHatch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(636)
inline void COMKERNALLib::IComSpace::PutShowHatch ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowHatch(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(637)
inline _bstr_t COMKERNALLib::IComSpace::GetHatchStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HatchStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(638)
inline void COMKERNALLib::IComSpace::PutHatchStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_HatchStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(639)
inline _variant_t COMKERNALLib::IComSpace::GetHatchColor ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_HatchColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(640)
inline void COMKERNALLib::IComSpace::PutHatchColor ( const _variant_t & pVal ) {
    HRESULT _hr = put_HatchColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(641)
inline _bstr_t COMKERNALLib::IComSpace::GetHatchScale ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HatchScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(642)
inline void COMKERNALLib::IComSpace::PutHatchScale ( _bstr_t pVal ) {
    HRESULT _hr = put_HatchScale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(643)
inline _bstr_t COMKERNALLib::IComSpace::GetHatchAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HatchAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(644)
inline void COMKERNALLib::IComSpace::PutHatchAngle ( _bstr_t pVal ) {
    HRESULT _hr = put_HatchAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComFireZone wrapper method implementations
//

#pragma implementation_key(645)
inline double COMKERNALLib::IComFireZone::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(646)
inline void COMKERNALLib::IComFireZone::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(647)
inline double COMKERNALLib::IComFireZone::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(648)
inline void COMKERNALLib::IComFireZone::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(649)
inline double COMKERNALLib::IComFireZone::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(650)
inline void COMKERNALLib::IComFireZone::PutTextHeight ( double pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(651)
inline _bstr_t COMKERNALLib::IComFireZone::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(652)
inline void COMKERNALLib::IComFireZone::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(653)
inline ACAD_COLOR COMKERNALLib::IComFireZone::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(654)
inline void COMKERNALLib::IComFireZone::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(655)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimFireZoneName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimFireZoneName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(656)
inline void COMKERNALLib::IComFireZone::PutIsDimFireZoneName ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimFireZoneName(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(657)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimSumArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimSumArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(658)
inline void COMKERNALLib::IComFireZone::PutIsDimSumArea ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimSumArea(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(659)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimSubNameAndArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimSubNameAndArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(660)
inline void COMKERNALLib::IComFireZone::PutIsDimSubNameAndArea ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimSubNameAndArea(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(661)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimFunction ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(662)
inline void COMKERNALLib::IComFireZone::PutIsDimFunction ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimFunction(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(663)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimAutoExtinguishingSys ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimAutoExtinguishingSys(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(664)
inline void COMKERNALLib::IComFireZone::PutIsDimAutoExtinguishingSys ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimAutoExtinguishingSys(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(665)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimFireZoneUint ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimFireZoneUint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(666)
inline void COMKERNALLib::IComFireZone::PutIsDimFireZoneUint ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimFireZoneUint(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(667)
inline _bstr_t COMKERNALLib::IComFireZone::GetAreaAccuracy ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AreaAccuracy(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(668)
inline void COMKERNALLib::IComFireZone::PutAreaAccuracy ( _bstr_t pVal ) {
    HRESULT _hr = put_AreaAccuracy(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(669)
inline _bstr_t COMKERNALLib::IComFireZone::GetFireZoneName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FireZoneName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(670)
inline void COMKERNALLib::IComFireZone::PutFireZoneName ( _bstr_t pVal ) {
    HRESULT _hr = put_FireZoneName(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(671)
inline double COMKERNALLib::IComFireZone::GetFireZoneSumArea ( ) {
    double _result = 0;
    HRESULT _hr = get_FireZoneSumArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(672)
inline void COMKERNALLib::IComFireZone::PutFireZoneSumArea ( double pVal ) {
    HRESULT _hr = put_FireZoneSumArea(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(673)
inline _bstr_t COMKERNALLib::IComFireZone::GetHaveSubFireZone ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HaveSubFireZone(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(674)
inline void COMKERNALLib::IComFireZone::PutHaveSubFireZone ( _bstr_t pVal ) {
    HRESULT _hr = put_HaveSubFireZone(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(675)
inline _bstr_t COMKERNALLib::IComFireZone::GetSubFireZoneName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SubFireZoneName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(676)
inline void COMKERNALLib::IComFireZone::PutSubFireZoneName ( _bstr_t pVal ) {
    HRESULT _hr = put_SubFireZoneName(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(677)
inline double COMKERNALLib::IComFireZone::GetSubFireZoneArea ( ) {
    double _result = 0;
    HRESULT _hr = get_SubFireZoneArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(678)
inline void COMKERNALLib::IComFireZone::PutSubFireZoneArea ( double pVal ) {
    HRESULT _hr = put_SubFireZoneArea(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(679)
inline _bstr_t COMKERNALLib::IComFireZone::GetFireZoneFunction ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FireZoneFunction(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(680)
inline void COMKERNALLib::IComFireZone::PutFireZoneFunction ( _bstr_t pVal ) {
    HRESULT _hr = put_FireZoneFunction(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(681)
inline _bstr_t COMKERNALLib::IComFireZone::GetAutoExtinguishingSys ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AutoExtinguishingSys(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(682)
inline void COMKERNALLib::IComFireZone::PutAutoExtinguishingSys ( _bstr_t pVal ) {
    HRESULT _hr = put_AutoExtinguishingSys(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(683)
inline double COMKERNALLib::IComFireZone::GetLocalSprayArea ( ) {
    double _result = 0;
    HRESULT _hr = get_LocalSprayArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(684)
inline void COMKERNALLib::IComFireZone::PutLocalSprayArea ( double pVal ) {
    HRESULT _hr = put_LocalSprayArea(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(685)
inline _bstr_t COMKERNALLib::IComFireZone::GetStandardRange ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StandardRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(686)
inline void COMKERNALLib::IComFireZone::PutStandardRange ( _bstr_t pVal ) {
    HRESULT _hr = put_StandardRange(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(687)
inline ACAD_LAYER COMKERNALLib::IComFireZone::GetHatchLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HatchLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(688)
inline void COMKERNALLib::IComFireZone::PutHatchLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HatchLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(689)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimTextFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimTextFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(690)
inline void COMKERNALLib::IComFireZone::PutIsDimTextFrame ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimTextFrame(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(691)
inline _bstr_t COMKERNALLib::IComFireZone::GetIsDimFireZoneMask ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsDimFireZoneMask(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(692)
inline void COMKERNALLib::IComFireZone::PutIsDimFireZoneMask ( _bstr_t pVal ) {
    HRESULT _hr = put_IsDimFireZoneMask(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(693)
inline double COMKERNALLib::IComFireZone::GetOutLineWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_OutLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(694)
inline void COMKERNALLib::IComFireZone::PutOutLineWidth ( double pVal ) {
    HRESULT _hr = put_OutLineWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(695)
inline _bstr_t COMKERNALLib::IComFireZone::GetHasHatch ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasHatch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(696)
inline void COMKERNALLib::IComFireZone::PutHasHatch ( _bstr_t pVal ) {
    HRESULT _hr = put_HasHatch(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(697)
inline _bstr_t COMKERNALLib::IComFireZone::GetHatchStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HatchStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(698)
inline void COMKERNALLib::IComFireZone::PutHatchStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_HatchStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(699)
inline _variant_t COMKERNALLib::IComFireZone::GetHatchColor ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_HatchColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(700)
inline void COMKERNALLib::IComFireZone::PutHatchColor ( const _variant_t & pVal ) {
    HRESULT _hr = put_HatchColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(701)
inline _bstr_t COMKERNALLib::IComFireZone::GetHatchScale ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HatchScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(702)
inline void COMKERNALLib::IComFireZone::PutHatchScale ( _bstr_t pVal ) {
    HRESULT _hr = put_HatchScale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(703)
inline _bstr_t COMKERNALLib::IComFireZone::GetHatchAngle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HatchAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(704)
inline void COMKERNALLib::IComFireZone::PutHatchAngle ( _bstr_t pVal ) {
    HRESULT _hr = put_HatchAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(705)
inline _bstr_t COMKERNALLib::IComFireZone::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(706)
inline void COMKERNALLib::IComFireZone::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStep wrapper method implementations
//

#pragma implementation_key(707)
inline double COMKERNALLib::IComStep::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(708)
inline void COMKERNALLib::IComStep::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(709)
inline double COMKERNALLib::IComStep::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(710)
inline void COMKERNALLib::IComStep::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(711)
inline double COMKERNALLib::IComStep::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(712)
inline void COMKERNALLib::IComStep::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(713)
inline long COMKERNALLib::IComStep::GetStepNum ( ) {
    long _result = 0;
    HRESULT _hr = get_StepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(714)
inline void COMKERNALLib::IComStep::PutStepNum ( long pVal ) {
    HRESULT _hr = put_StepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(715)
inline double COMKERNALLib::IComStep::GetAllStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_AllStepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(716)
inline _bstr_t COMKERNALLib::IComStep::GetBaseFace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BaseFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(717)
inline void COMKERNALLib::IComStep::PutBaseFace ( _bstr_t pVal ) {
    HRESULT _hr = put_BaseFace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(718)
inline double COMKERNALLib::IComStep::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(719)
inline void COMKERNALLib::IComStep::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(720)
inline double COMKERNALLib::IComStep::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(721)
inline void COMKERNALLib::IComStep::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(722)
inline _bstr_t COMKERNALLib::IComStep::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(723)
inline void COMKERNALLib::IComStep::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(724)
inline _bstr_t COMKERNALLib::IComStep::GetDownStep ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownStep(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(725)
inline void COMKERNALLib::IComStep::PutDownStep ( _bstr_t pVal ) {
    HRESULT _hr = put_DownStep(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComVertSlab wrapper method implementations
//

#pragma implementation_key(726)
inline double COMKERNALLib::IComVertSlab::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(727)
inline void COMKERNALLib::IComVertSlab::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(728)
inline double COMKERNALLib::IComVertSlab::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(729)
inline void COMKERNALLib::IComVertSlab::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(730)
inline _bstr_t COMKERNALLib::IComVertSlab::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(731)
inline void COMKERNALLib::IComVertSlab::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(732)
inline double COMKERNALLib::IComVertSlab::GetStartPoint ( ) {
    double _result = 0;
    HRESULT _hr = get_StartPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(733)
inline void COMKERNALLib::IComVertSlab::PutStartPoint ( double pVal ) {
    HRESULT _hr = put_StartPoint(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(734)
inline double COMKERNALLib::IComVertSlab::GetEndPoint ( ) {
    double _result = 0;
    HRESULT _hr = get_EndPoint(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(735)
inline void COMKERNALLib::IComVertSlab::PutEndPoint ( double pVal ) {
    HRESULT _hr = put_EndPoint(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(736)
inline double COMKERNALLib::IComVertSlab::GetHeightS ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(737)
inline void COMKERNALLib::IComVertSlab::PutHeightS ( double pVal ) {
    HRESULT _hr = put_HeightS(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(738)
inline double COMKERNALLib::IComVertSlab::GetHeightE ( ) {
    double _result = 0;
    HRESULT _hr = get_HeightE(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(739)
inline void COMKERNALLib::IComVertSlab::PutHeightE ( double pVal ) {
    HRESULT _hr = put_HeightE(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(740)
inline double COMKERNALLib::IComVertSlab::GetThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_Thickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(741)
inline void COMKERNALLib::IComVertSlab::PutThickness ( double pVal ) {
    HRESULT _hr = put_Thickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(742)
inline _bstr_t COMKERNALLib::IComVertSlab::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(743)
inline _bstr_t COMKERNALLib::IComVertSlab::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(744)
inline void COMKERNALLib::IComVertSlab::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComWall wrapper method implementations
//

#pragma implementation_key(745)
inline double COMKERNALLib::IComWall::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(746)
inline void COMKERNALLib::IComWall::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(747)
inline double COMKERNALLib::IComWall::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(748)
inline void COMKERNALLib::IComWall::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(749)
inline double COMKERNALLib::IComWall::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(750)
inline void COMKERNALLib::IComWall::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(751)
inline double COMKERNALLib::IComWall::GetLeftWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(752)
inline void COMKERNALLib::IComWall::PutLeftWidth ( double pVal ) {
    HRESULT _hr = put_LeftWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(753)
inline double COMKERNALLib::IComWall::GetRightWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RightWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(754)
inline void COMKERNALLib::IComWall::PutRightWidth ( double pVal ) {
    HRESULT _hr = put_RightWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(755)
inline _bstr_t COMKERNALLib::IComWall::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(756)
inline void COMKERNALLib::IComWall::PutLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_Label(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(757)
inline _bstr_t COMKERNALLib::IComWall::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(758)
inline void COMKERNALLib::IComWall::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(759)
inline _bstr_t COMKERNALLib::IComWall::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(760)
inline void COMKERNALLib::IComWall::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(761)
inline _bstr_t COMKERNALLib::IComWall::GetHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(762)
inline void COMKERNALLib::IComWall::PutHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_HideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(763)
inline double COMKERNALLib::IComWall::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(764)
inline void COMKERNALLib::IComWall::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(765)
inline _bstr_t COMKERNALLib::IComWall::GetIsArc ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsArc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(766)
inline _bstr_t COMKERNALLib::IComWall::GetStruIsArc ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StruIsArc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(767)
inline _bstr_t COMKERNALLib::IComWall::GetLSurfaceArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LSurfaceArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(768)
inline _bstr_t COMKERNALLib::IComWall::GetRSurfaceArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RSurfaceArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(769)
inline _bstr_t COMKERNALLib::IComWall::GetHoleArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(770)
inline _bstr_t COMKERNALLib::IComWall::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(771)
inline _bstr_t COMKERNALLib::IComWall::GetHoleVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HoleVolume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(772)
inline ACAD_LAYER COMKERNALLib::IComWall::GetLeftLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_LeftLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(773)
inline void COMKERNALLib::IComWall::PutLeftLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_LeftLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(774)
inline double COMKERNALLib::IComWall::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(775)
inline void COMKERNALLib::IComWall::PutRadius ( double pVal ) {
    HRESULT _hr = put_Radius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(776)
inline _bstr_t COMKERNALLib::IComWall::GetIsExternal ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsExternal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(777)
inline _bstr_t COMKERNALLib::IComWall::GetTopFace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(778)
inline void COMKERNALLib::IComWall::PutTopFace ( _bstr_t pVal ) {
    HRESULT _hr = put_TopFace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(779)
inline _bstr_t COMKERNALLib::IComWall::GetBottomFace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BottomFace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(780)
inline void COMKERNALLib::IComWall::PutBottomFace ( _bstr_t pVal ) {
    HRESULT _hr = put_BottomFace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(781)
inline _bstr_t COMKERNALLib::IComWall::GetEndClose ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EndClose(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(782)
inline void COMKERNALLib::IComWall::PutEndClose ( _bstr_t pVal ) {
    HRESULT _hr = put_EndClose(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(783)
inline _bstr_t COMKERNALLib::IComWall::GetUsage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Usage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(784)
inline void COMKERNALLib::IComWall::PutUsage ( _bstr_t pVal ) {
    HRESULT _hr = put_Usage(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(785)
inline _bstr_t COMKERNALLib::IComWall::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(786)
inline void COMKERNALLib::IComWall::PutStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_Style(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(787)
inline ACAD_LAYER COMKERNALLib::IComWall::GetRightLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RightLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(788)
inline void COMKERNALLib::IComWall::PutRightLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RightLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(789)
inline ACAD_LAYER COMKERNALLib::IComWall::GetHatchLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HatchLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(790)
inline void COMKERNALLib::IComWall::PutHatchLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HatchLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(791)
inline ACAD_LAYER COMKERNALLib::IComWall::GetSurfLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_SurfLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(792)
inline void COMKERNALLib::IComWall::PutSurfLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_SurfLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(793)
inline _bstr_t COMKERNALLib::IComWall::GetLeftSpace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(794)
inline _bstr_t COMKERNALLib::IComWall::GetRightSpace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(795)
inline _bstr_t COMKERNALLib::IComWall::GetEnUsage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EnUsage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(796)
inline void COMKERNALLib::IComWall::PutEnUsage ( _bstr_t pVal ) {
    HRESULT _hr = put_EnUsage(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(797)
inline _bstr_t COMKERNALLib::IComWall::GetIOFeature ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IOFeature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(798)
inline void COMKERNALLib::IComWall::PutIOFeature ( _bstr_t pVal ) {
    HRESULT _hr = put_IOFeature(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(799)
inline _bstr_t COMKERNALLib::IComWall::GetStructure ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(800)
inline void COMKERNALLib::IComWall::PutStructure ( _bstr_t pVal ) {
    HRESULT _hr = put_Structure(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(801)
inline double COMKERNALLib::IComWall::GetAreaRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_AreaRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(802)
inline double COMKERNALLib::IComWall::GetConductivity ( ) {
    double _result = 0;
    HRESULT _hr = get_Conductivity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(803)
inline double COMKERNALLib::IComWall::GetInertiaIndex ( ) {
    double _result = 0;
    HRESULT _hr = get_InertiaIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(804)
inline _bstr_t COMKERNALLib::IComWall::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(805)
inline void COMKERNALLib::IComWall::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(806)
inline double COMKERNALLib::IComWall::GetTotalWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_TotalWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(807)
inline _bstr_t COMKERNALLib::IComWall::GetInsulate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Insulate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(808)
inline void COMKERNALLib::IComWall::PutInsulate ( _bstr_t pVal ) {
    HRESULT _hr = put_Insulate(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(809)
inline double COMKERNALLib::IComWall::GetInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_InsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(810)
inline void COMKERNALLib::IComWall::PutInsuThick ( double pVal ) {
    HRESULT _hr = put_InsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(811)
inline double COMKERNALLib::IComWall::GetStruHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StruHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(812)
inline void COMKERNALLib::IComWall::PutStruHeight ( double pVal ) {
    HRESULT _hr = put_StruHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(813)
inline double COMKERNALLib::IComWall::GetLeftInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftInsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(814)
inline void COMKERNALLib::IComWall::PutLeftInsuThick ( double pVal ) {
    HRESULT _hr = put_LeftInsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(815)
inline double COMKERNALLib::IComWall::GetRightInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_RightInsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(816)
inline void COMKERNALLib::IComWall::PutRightInsuThick ( double pVal ) {
    HRESULT _hr = put_RightInsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(817)
inline _bstr_t COMKERNALLib::IComWall::GetStemInsulate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StemInsulate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(818)
inline void COMKERNALLib::IComWall::PutStemInsulate ( _bstr_t pVal ) {
    HRESULT _hr = put_StemInsulate(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(819)
inline double COMKERNALLib::IComWall::GetStemInsulateThick ( ) {
    double _result = 0;
    HRESULT _hr = get_StemInsulateThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(820)
inline void COMKERNALLib::IComWall::PutStemInsulateThick ( double pVal ) {
    HRESULT _hr = put_StemInsulateThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(821)
inline _bstr_t COMKERNALLib::IComWall::GetInsulateClose ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InsulateClose(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(822)
inline void COMKERNALLib::IComWall::PutInsulateClose ( _bstr_t pVal ) {
    HRESULT _hr = put_InsulateClose(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComWallPatch wrapper method implementations
//

#pragma implementation_key(823)
inline double COMKERNALLib::IComWallPatch::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(824)
inline void COMKERNALLib::IComWallPatch::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(825)
inline double COMKERNALLib::IComWallPatch::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(826)
inline void COMKERNALLib::IComWallPatch::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(827)
inline _bstr_t COMKERNALLib::IComWallPatch::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(828)
inline _bstr_t COMKERNALLib::IComWallPatch::GetArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Area(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(829)
inline ACAD_LAYER COMKERNALLib::IComWallPatch::GetLayerHatch ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_LayerHatch(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(830)
inline void COMKERNALLib::IComWallPatch::PutLayerHatch ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_LayerHatch(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(831)
inline double COMKERNALLib::IComWallPatch::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(832)
inline void COMKERNALLib::IComWallPatch::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(833)
inline double COMKERNALLib::IComWallPatch::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(834)
inline void COMKERNALLib::IComWallPatch::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(835)
inline _bstr_t COMKERNALLib::IComWallPatch::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(836)
inline void COMKERNALLib::IComWallPatch::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(837)
inline ACAD_LAYER COMKERNALLib::IComWallPatch::GetSurfLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_SurfLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(838)
inline void COMKERNALLib::IComWallPatch::PutSurfLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_SurfLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(839)
inline _bstr_t COMKERNALLib::IComWallPatch::GetInsulate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Insulate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(840)
inline void COMKERNALLib::IComWallPatch::PutInsulate ( _bstr_t pVal ) {
    HRESULT _hr = put_Insulate(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(841)
inline double COMKERNALLib::IComWallPatch::GetInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_InsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(842)
inline void COMKERNALLib::IComWallPatch::PutInsuThick ( double pVal ) {
    HRESULT _hr = put_InsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComLineText wrapper method implementations
//

#pragma implementation_key(843)
inline _bstr_t COMKERNALLib::IComLineText::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(844)
inline void COMKERNALLib::IComLineText::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(845)
inline _bstr_t COMKERNALLib::IComLineText::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(846)
inline void COMKERNALLib::IComLineText::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(847)
inline double COMKERNALLib::IComLineText::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(848)
inline void COMKERNALLib::IComLineText::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(849)
inline _bstr_t COMKERNALLib::IComLineText::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(850)
inline void COMKERNALLib::IComLineText::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(851)
inline _bstr_t COMKERNALLib::IComLineText::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(852)
inline void COMKERNALLib::IComLineText::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(853)
inline double COMKERNALLib::IComLineText::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(854)
inline void COMKERNALLib::IComLineText::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(855)
inline double COMKERNALLib::IComLineText::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(856)
inline void COMKERNALLib::IComLineText::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComMutiText wrapper method implementations
//

#pragma implementation_key(857)
inline _bstr_t COMKERNALLib::IComMutiText::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(858)
inline void COMKERNALLib::IComMutiText::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(859)
inline _bstr_t COMKERNALLib::IComMutiText::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(860)
inline void COMKERNALLib::IComMutiText::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(861)
inline double COMKERNALLib::IComMutiText::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(862)
inline void COMKERNALLib::IComMutiText::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(863)
inline _bstr_t COMKERNALLib::IComMutiText::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(864)
inline void COMKERNALLib::IComMutiText::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(865)
inline _bstr_t COMKERNALLib::IComMutiText::GetPageWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PageWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(866)
inline void COMKERNALLib::IComMutiText::PutPageWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_PageWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(867)
inline _bstr_t COMKERNALLib::IComMutiText::GetLineSpace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(868)
inline void COMKERNALLib::IComMutiText::PutLineSpace ( _bstr_t pVal ) {
    HRESULT _hr = put_LineSpace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(869)
inline double COMKERNALLib::IComMutiText::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(870)
inline void COMKERNALLib::IComMutiText::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(871)
inline double COMKERNALLib::IComMutiText::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(872)
inline void COMKERNALLib::IComMutiText::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbComposing wrapper method implementations
//

#pragma implementation_key(873)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(874)
inline void COMKERNALLib::IComSymbComposing::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(875)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(876)
inline void COMKERNALLib::IComSymbComposing::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(877)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(878)
inline void COMKERNALLib::IComSymbComposing::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(879)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(880)
inline void COMKERNALLib::IComSymbComposing::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(881)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetTextSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(882)
inline void COMKERNALLib::IComSymbComposing::PutTextSide ( _bstr_t pVal ) {
    HRESULT _hr = put_TextSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(883)
inline double COMKERNALLib::IComSymbComposing::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(884)
inline void COMKERNALLib::IComSymbComposing::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(885)
inline double COMKERNALLib::IComSymbComposing::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(886)
inline void COMKERNALLib::IComSymbComposing::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(887)
inline ACAD_LAYER COMKERNALLib::IComSymbComposing::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(888)
inline void COMKERNALLib::IComSymbComposing::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(889)
inline ACAD_COLOR COMKERNALLib::IComSymbComposing::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(890)
inline void COMKERNALLib::IComSymbComposing::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(891)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetParagraphSpace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ParagraphSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(892)
inline void COMKERNALLib::IComSymbComposing::PutParagraphSpace ( _bstr_t pVal ) {
    HRESULT _hr = put_ParagraphSpace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(893)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetLineSpace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineSpace(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(894)
inline void COMKERNALLib::IComSymbComposing::PutLineSpace ( _bstr_t pVal ) {
    HRESULT _hr = put_LineSpace(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(895)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetText2BaseRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2BaseRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(896)
inline void COMKERNALLib::IComSymbComposing::PutText2BaseRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2BaseRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(897)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetTextType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(898)
inline void COMKERNALLib::IComSymbComposing::PutTextType ( _bstr_t pVal ) {
    HRESULT _hr = put_TextType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(899)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetTextBaseLen ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextBaseLen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(900)
inline void COMKERNALLib::IComSymbComposing::PutTextBaseLen ( _bstr_t pVal ) {
    HRESULT _hr = put_TextBaseLen(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(901)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetDist2Line ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Dist2Line(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(902)
inline void COMKERNALLib::IComSymbComposing::PutDist2Line ( _bstr_t pVal ) {
    HRESULT _hr = put_Dist2Line(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(903)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetPageWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PageWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(904)
inline void COMKERNALLib::IComSymbComposing::PutPageWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_PageWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(905)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetSpace ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Space(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(906)
inline void COMKERNALLib::IComSymbComposing::PutSpace ( _bstr_t pVal ) {
    HRESULT _hr = put_Space(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(907)
inline _bstr_t COMKERNALLib::IComSymbComposing::GetCirPointSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CirPointSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(908)
inline void COMKERNALLib::IComSymbComposing::PutCirPointSize ( _bstr_t pVal ) {
    HRESULT _hr = put_CirPointSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbArrow wrapper method implementations
//

#pragma implementation_key(909)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(910)
inline void COMKERNALLib::IComSymbArrow::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(911)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(912)
inline void COMKERNALLib::IComSymbArrow::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(913)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(914)
inline void COMKERNALLib::IComSymbArrow::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(915)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(916)
inline void COMKERNALLib::IComSymbArrow::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(917)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetText2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(918)
inline void COMKERNALLib::IComSymbArrow::PutText2 ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(919)
inline double COMKERNALLib::IComSymbArrow::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(920)
inline void COMKERNALLib::IComSymbArrow::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(921)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetArrowSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ArrowSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(922)
inline void COMKERNALLib::IComSymbArrow::PutArrowSize ( _bstr_t pVal ) {
    HRESULT _hr = put_ArrowSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(923)
inline double COMKERNALLib::IComSymbArrow::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(924)
inline void COMKERNALLib::IComSymbArrow::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(925)
inline ACAD_LAYER COMKERNALLib::IComSymbArrow::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(926)
inline void COMKERNALLib::IComSymbArrow::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(927)
inline ACAD_COLOR COMKERNALLib::IComSymbArrow::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(928)
inline void COMKERNALLib::IComSymbArrow::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(929)
inline _bstr_t COMKERNALLib::IComSymbArrow::GetText2BaseRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2BaseRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(930)
inline void COMKERNALLib::IComSymbArrow::PutText2BaseRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2BaseRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbDrawingIndex wrapper method implementations
//

#pragma implementation_key(931)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(932)
inline void COMKERNALLib::IComSymbDrawingIndex::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(933)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetDrawingLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawingLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(934)
inline void COMKERNALLib::IComSymbDrawingIndex::PutDrawingLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawingLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(935)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetIndexLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IndexLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(936)
inline void COMKERNALLib::IComSymbDrawingIndex::PutIndexLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_IndexLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(937)
inline double COMKERNALLib::IComSymbDrawingIndex::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(938)
inline void COMKERNALLib::IComSymbDrawingIndex::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(939)
inline double COMKERNALLib::IComSymbDrawingIndex::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(940)
inline void COMKERNALLib::IComSymbDrawingIndex::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(941)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetDiameter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(942)
inline void COMKERNALLib::IComSymbDrawingIndex::PutDiameter ( _bstr_t pVal ) {
    HRESULT _hr = put_Diameter(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(943)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetLineWeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineWeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(944)
inline void COMKERNALLib::IComSymbDrawingIndex::PutLineWeight ( _bstr_t pVal ) {
    HRESULT _hr = put_LineWeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(945)
inline ACAD_LAYER COMKERNALLib::IComSymbDrawingIndex::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(946)
inline void COMKERNALLib::IComSymbDrawingIndex::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(947)
inline ACAD_COLOR COMKERNALLib::IComSymbDrawingIndex::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(948)
inline void COMKERNALLib::IComSymbDrawingIndex::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(949)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetShowScale ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(950)
inline void COMKERNALLib::IComSymbDrawingIndex::PutShowScale ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowScale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(951)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetScaleText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(952)
inline void COMKERNALLib::IComSymbDrawingIndex::PutScaleText ( _bstr_t pVal ) {
    HRESULT _hr = put_ScaleText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(953)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetScaleStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(954)
inline void COMKERNALLib::IComSymbDrawingIndex::PutScaleStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_ScaleStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(955)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetScaleHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(956)
inline void COMKERNALLib::IComSymbDrawingIndex::PutScaleHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_ScaleHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(957)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetOldStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OldStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(958)
inline void COMKERNALLib::IComSymbDrawingIndex::PutOldStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_OldStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(959)
inline _bstr_t COMKERNALLib::IComSymbDrawingIndex::GetTextRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(960)
inline void COMKERNALLib::IComSymbDrawingIndex::PutTextRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_TextRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbInSight wrapper method implementations
//

#pragma implementation_key(961)
inline double COMKERNALLib::IComSymbInSight::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(962)
inline void COMKERNALLib::IComSymbInSight::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(963)
inline double COMKERNALLib::IComSymbInSight::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(964)
inline void COMKERNALLib::IComSymbInSight::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(965)
inline _bstr_t COMKERNALLib::IComSymbInSight::GetIndexLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IndexLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(966)
inline void COMKERNALLib::IComSymbInSight::PutIndexLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_IndexLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(967)
inline _bstr_t COMKERNALLib::IComSymbInSight::GetDrawingLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawingLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(968)
inline void COMKERNALLib::IComSymbInSight::PutDrawingLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawingLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(969)
inline _bstr_t COMKERNALLib::IComSymbInSight::GetDiameter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(970)
inline void COMKERNALLib::IComSymbInSight::PutDiameter ( _bstr_t pVal ) {
    HRESULT _hr = put_Diameter(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(971)
inline _bstr_t COMKERNALLib::IComSymbInSight::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(972)
inline void COMKERNALLib::IComSymbInSight::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(973)
inline ACAD_LAYER COMKERNALLib::IComSymbInSight::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(974)
inline void COMKERNALLib::IComSymbInSight::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(975)
inline ACAD_COLOR COMKERNALLib::IComSymbInSight::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(976)
inline void COMKERNALLib::IComSymbInSight::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(977)
inline _bstr_t COMKERNALLib::IComSymbInSight::GetTextRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(978)
inline void COMKERNALLib::IComSymbInSight::PutTextRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_TextRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbMultiLeader wrapper method implementations
//

#pragma implementation_key(979)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(980)
inline void COMKERNALLib::IComSymbMultiLeader::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(981)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(982)
inline void COMKERNALLib::IComSymbMultiLeader::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(983)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetArrowStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ArrowStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(984)
inline void COMKERNALLib::IComSymbMultiLeader::PutArrowStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_ArrowStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(985)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetUpText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(986)
inline void COMKERNALLib::IComSymbMultiLeader::PutUpText ( _bstr_t pVal ) {
    HRESULT _hr = put_UpText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(987)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetDownText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(988)
inline void COMKERNALLib::IComSymbMultiLeader::PutDownText ( _bstr_t pVal ) {
    HRESULT _hr = put_DownText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(989)
inline double COMKERNALLib::IComSymbMultiLeader::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(990)
inline void COMKERNALLib::IComSymbMultiLeader::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(991)
inline double COMKERNALLib::IComSymbMultiLeader::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(992)
inline void COMKERNALLib::IComSymbMultiLeader::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(993)
inline ACAD_LAYER COMKERNALLib::IComSymbMultiLeader::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(994)
inline void COMKERNALLib::IComSymbMultiLeader::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(995)
inline ACAD_COLOR COMKERNALLib::IComSymbMultiLeader::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(996)
inline void COMKERNALLib::IComSymbMultiLeader::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(997)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetText2BaseRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2BaseRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(998)
inline void COMKERNALLib::IComSymbMultiLeader::PutText2BaseRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2BaseRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(999)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetAlignType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlignType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1000)
inline void COMKERNALLib::IComSymbMultiLeader::PutAlignType ( _bstr_t pVal ) {
    HRESULT _hr = put_AlignType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1001)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetUpTextType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpTextType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1002)
inline void COMKERNALLib::IComSymbMultiLeader::PutUpTextType ( _bstr_t pVal ) {
    HRESULT _hr = put_UpTextType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1003)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetUpPageWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpPageWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1004)
inline void COMKERNALLib::IComSymbMultiLeader::PutUpPageWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_UpPageWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1005)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetDownTextType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownTextType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1006)
inline void COMKERNALLib::IComSymbMultiLeader::PutDownTextType ( _bstr_t pVal ) {
    HRESULT _hr = put_DownTextType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1007)
inline _bstr_t COMKERNALLib::IComSymbMultiLeader::GetDownPageWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownPageWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1008)
inline void COMKERNALLib::IComSymbMultiLeader::PutDownPageWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_DownPageWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbElev wrapper method implementations
//

#pragma implementation_key(1009)
inline _bstr_t COMKERNALLib::IComSymbElev::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1010)
inline void COMKERNALLib::IComSymbElev::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1011)
inline _bstr_t COMKERNALLib::IComSymbElev::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1012)
inline void COMKERNALLib::IComSymbElev::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1013)
inline _bstr_t COMKERNALLib::IComSymbElev::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1014)
inline void COMKERNALLib::IComSymbElev::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1015)
inline _bstr_t COMKERNALLib::IComSymbElev::GetText2BaseRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2BaseRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1016)
inline void COMKERNALLib::IComSymbElev::PutText2BaseRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2BaseRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1017)
inline _bstr_t COMKERNALLib::IComSymbElev::GetFloorsOnLeftSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorsOnLeftSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1018)
inline void COMKERNALLib::IComSymbElev::PutFloorsOnLeftSide ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorsOnLeftSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1019)
inline _bstr_t COMKERNALLib::IComSymbElev::GetHasBaseLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasBaseLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1020)
inline void COMKERNALLib::IComSymbElev::PutHasBaseLine ( _bstr_t pVal ) {
    HRESULT _hr = put_HasBaseLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1021)
inline _bstr_t COMKERNALLib::IComSymbElev::GetHasLeader ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasLeader(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1022)
inline void COMKERNALLib::IComSymbElev::PutHasLeader ( _bstr_t pVal ) {
    HRESULT _hr = put_HasLeader(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1023)
inline double COMKERNALLib::IComSymbElev::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1024)
inline void COMKERNALLib::IComSymbElev::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1025)
inline _bstr_t COMKERNALLib::IComSymbElev::GetPrecision ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Precision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1026)
inline void COMKERNALLib::IComSymbElev::PutPrecision ( _bstr_t pVal ) {
    HRESULT _hr = put_Precision(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1027)
inline double COMKERNALLib::IComSymbElev::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1028)
inline void COMKERNALLib::IComSymbElev::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1029)
inline _bstr_t COMKERNALLib::IComSymbElev::GetFillMode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FillMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1030)
inline void COMKERNALLib::IComSymbElev::PutFillMode ( _bstr_t pVal ) {
    HRESULT _hr = put_FillMode(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1031)
inline _bstr_t COMKERNALLib::IComSymbElev::GetSitePlanElevMode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SitePlanElevMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1032)
inline void COMKERNALLib::IComSymbElev::PutSitePlanElevMode ( _bstr_t pVal ) {
    HRESULT _hr = put_SitePlanElevMode(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1033)
inline ACAD_LAYER COMKERNALLib::IComSymbElev::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1034)
inline void COMKERNALLib::IComSymbElev::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1035)
inline ACAD_COLOR COMKERNALLib::IComSymbElev::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1036)
inline void COMKERNALLib::IComSymbElev::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbIndex wrapper method implementations
//

#pragma implementation_key(1037)
inline double COMKERNALLib::IComSymbIndex::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1038)
inline void COMKERNALLib::IComSymbIndex::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1039)
inline double COMKERNALLib::IComSymbIndex::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1040)
inline void COMKERNALLib::IComSymbIndex::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1041)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1042)
inline void COMKERNALLib::IComSymbIndex::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1043)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetDimStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DimStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1044)
inline void COMKERNALLib::IComSymbIndex::PutDimStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_DimStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1045)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetUpText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1046)
inline void COMKERNALLib::IComSymbIndex::PutUpText ( _bstr_t pVal ) {
    HRESULT _hr = put_UpText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1047)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetDownText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1048)
inline void COMKERNALLib::IComSymbIndex::PutDownText ( _bstr_t pVal ) {
    HRESULT _hr = put_DownText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1049)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetUpTextType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpTextType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1050)
inline void COMKERNALLib::IComSymbIndex::PutUpTextType ( _bstr_t pVal ) {
    HRESULT _hr = put_UpTextType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1051)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetUpPageWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpPageWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1052)
inline void COMKERNALLib::IComSymbIndex::PutUpPageWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_UpPageWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1053)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetDownTextType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownTextType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1054)
inline void COMKERNALLib::IComSymbIndex::PutDownTextType ( _bstr_t pVal ) {
    HRESULT _hr = put_DownTextType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1055)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetDownPageWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownPageWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1056)
inline void COMKERNALLib::IComSymbIndex::PutDownPageWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_DownPageWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1057)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1058)
inline void COMKERNALLib::IComSymbIndex::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1059)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetDrawingLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawingLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1060)
inline void COMKERNALLib::IComSymbIndex::PutDrawingLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawingLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1061)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetIndexLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IndexLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1062)
inline void COMKERNALLib::IComSymbIndex::PutIndexLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_IndexLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1063)
inline ACAD_COLOR COMKERNALLib::IComSymbIndex::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1064)
inline void COMKERNALLib::IComSymbIndex::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1065)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetOldStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OldStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1066)
inline void COMKERNALLib::IComSymbIndex::PutOldStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_OldStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1067)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetDiameter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Diameter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1068)
inline void COMKERNALLib::IComSymbIndex::PutDiameter ( _bstr_t pVal ) {
    HRESULT _hr = put_Diameter(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1069)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetTextRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1070)
inline void COMKERNALLib::IComSymbIndex::PutTextRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_TextRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1071)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetText2BaseRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2BaseRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1072)
inline void COMKERNALLib::IComSymbIndex::PutText2BaseRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2BaseRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1073)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetAlignType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlignType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1074)
inline void COMKERNALLib::IComSymbIndex::PutAlignType ( _bstr_t pVal ) {
    HRESULT _hr = put_AlignType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1075)
inline _bstr_t COMKERNALLib::IComSymbIndex::GetExtendLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtendLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1076)
inline void COMKERNALLib::IComSymbIndex::PutExtendLine ( _bstr_t pVal ) {
    HRESULT _hr = put_ExtendLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1077)
inline ACAD_LAYER COMKERNALLib::IComSymbIndex::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1078)
inline void COMKERNALLib::IComSymbIndex::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbSection wrapper method implementations
//

#pragma implementation_key(1079)
inline _bstr_t COMKERNALLib::IComSymbSection::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1080)
inline void COMKERNALLib::IComSymbSection::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1081)
inline _bstr_t COMKERNALLib::IComSymbSection::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1082)
inline void COMKERNALLib::IComSymbSection::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1083)
inline _bstr_t COMKERNALLib::IComSymbSection::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1084)
inline void COMKERNALLib::IComSymbSection::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1085)
inline _bstr_t COMKERNALLib::IComSymbSection::GetIsShowIndex ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsShowIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1086)
inline void COMKERNALLib::IComSymbSection::PutIsShowIndex ( _bstr_t pVal ) {
    HRESULT _hr = put_IsShowIndex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1087)
inline _bstr_t COMKERNALLib::IComSymbSection::GetDrawHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1088)
inline void COMKERNALLib::IComSymbSection::PutDrawHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1089)
inline _bstr_t COMKERNALLib::IComSymbSection::GetDrawText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1090)
inline void COMKERNALLib::IComSymbSection::PutDrawText ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1091)
inline _bstr_t COMKERNALLib::IComSymbSection::GetDrawStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1092)
inline void COMKERNALLib::IComSymbSection::PutDrawStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1093)
inline _bstr_t COMKERNALLib::IComSymbSection::GetDrawLocal ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawLocal(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1094)
inline void COMKERNALLib::IComSymbSection::PutDrawLocal ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawLocal(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1095)
inline _bstr_t COMKERNALLib::IComSymbSection::GetDrawDirect ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawDirect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1096)
inline void COMKERNALLib::IComSymbSection::PutDrawDirect ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawDirect(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1097)
inline _bstr_t COMKERNALLib::IComSymbSection::GetDrawModulus ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DrawModulus(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1098)
inline void COMKERNALLib::IComSymbSection::PutDrawModulus ( _bstr_t pVal ) {
    HRESULT _hr = put_DrawModulus(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1099)
inline double COMKERNALLib::IComSymbSection::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1100)
inline void COMKERNALLib::IComSymbSection::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1101)
inline double COMKERNALLib::IComSymbSection::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1102)
inline void COMKERNALLib::IComSymbSection::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1103)
inline ACAD_LAYER COMKERNALLib::IComSymbSection::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1104)
inline void COMKERNALLib::IComSymbSection::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1105)
inline ACAD_COLOR COMKERNALLib::IComSymbSection::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1106)
inline void COMKERNALLib::IComSymbSection::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1107)
inline short COMKERNALLib::IComSymbSection::GetSectionType ( ) {
    short _result = 0;
    HRESULT _hr = get_SectionType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1108)
inline void COMKERNALLib::IComSymbSection::PutSectionType ( short pVal ) {
    HRESULT _hr = put_SectionType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbNorthThumb wrapper method implementations
//

#pragma implementation_key(1109)
inline _bstr_t COMKERNALLib::IComSymbNorthThumb::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1110)
inline void COMKERNALLib::IComSymbNorthThumb::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1111)
inline _bstr_t COMKERNALLib::IComSymbNorthThumb::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1112)
inline void COMKERNALLib::IComSymbNorthThumb::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1113)
inline ACAD_COLOR COMKERNALLib::IComSymbNorthThumb::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1114)
inline void COMKERNALLib::IComSymbNorthThumb::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1115)
inline _bstr_t COMKERNALLib::IComSymbNorthThumb::GetHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1116)
inline void COMKERNALLib::IComSymbNorthThumb::PutHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1117)
inline _bstr_t COMKERNALLib::IComSymbNorthThumb::GetRotation ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1118)
inline void COMKERNALLib::IComSymbNorthThumb::PutRotation ( _bstr_t pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1119)
inline double COMKERNALLib::IComSymbNorthThumb::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1120)
inline void COMKERNALLib::IComSymbNorthThumb::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1121)
inline _bstr_t COMKERNALLib::IComSymbNorthThumb::GetRadius ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1122)
inline void COMKERNALLib::IComSymbNorthThumb::PutRadius ( _bstr_t pVal ) {
    HRESULT _hr = put_Radius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1123)
inline double COMKERNALLib::IComSymbNorthThumb::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1124)
inline void COMKERNALLib::IComSymbNorthThumb::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComDimension wrapper method implementations
//

#pragma implementation_key(1125)
inline _bstr_t COMKERNALLib::IComDimension::GetDimStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DimStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1126)
inline void COMKERNALLib::IComDimension::PutDimStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_DimStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1127)
inline double COMKERNALLib::IComDimension::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1128)
inline void COMKERNALLib::IComDimension::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1129)
inline double COMKERNALLib::IComDimension::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1130)
inline void COMKERNALLib::IComDimension::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1131)
inline _bstr_t COMKERNALLib::IComDimension::GetAssociate ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Associate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1132)
inline void COMKERNALLib::IComDimension::PutAssociate ( _bstr_t pVal ) {
    HRESULT _hr = put_Associate(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComRadiusDim wrapper method implementations
//

#pragma implementation_key(1133)
inline _bstr_t COMKERNALLib::IComRadiusDim::GetDimStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DimStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1134)
inline void COMKERNALLib::IComRadiusDim::PutDimStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_DimStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1135)
inline double COMKERNALLib::IComRadiusDim::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1136)
inline void COMKERNALLib::IComRadiusDim::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1137)
inline _bstr_t COMKERNALLib::IComRadiusDim::GetDesText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DesText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1138)
inline void COMKERNALLib::IComRadiusDim::PutDesText ( _bstr_t pVal ) {
    HRESULT _hr = put_DesText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1139)
inline _bstr_t COMKERNALLib::IComRadiusDim::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1140)
inline _bstr_t COMKERNALLib::IComRadiusDim::GetRadiusType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RadiusType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1141)
inline void COMKERNALLib::IComRadiusDim::PutRadiusType ( _bstr_t pVal ) {
    HRESULT _hr = put_RadiusType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1142)
inline double COMKERNALLib::IComRadiusDim::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1143)
inline void COMKERNALLib::IComRadiusDim::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComAxisLabel wrapper method implementations
//

#pragma implementation_key(1144)
inline _bstr_t COMKERNALLib::IComAxisLabel::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1145)
inline void COMKERNALLib::IComAxisLabel::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1146)
inline _bstr_t COMKERNALLib::IComAxisLabel::GetRadius ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1147)
inline void COMKERNALLib::IComAxisLabel::PutRadius ( _bstr_t pVal ) {
    HRESULT _hr = put_Radius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1148)
inline double COMKERNALLib::IComAxisLabel::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1149)
inline void COMKERNALLib::IComAxisLabel::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1150)
inline ACAD_LAYER COMKERNALLib::IComAxisLabel::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1151)
inline void COMKERNALLib::IComAxisLabel::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1152)
inline double COMKERNALLib::IComAxisLabel::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1153)
inline void COMKERNALLib::IComAxisLabel::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1154)
inline double COMKERNALLib::IComAxisLabel::GetLeaderLen1 ( ) {
    double _result = 0;
    HRESULT _hr = get_LeaderLen1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1155)
inline void COMKERNALLib::IComAxisLabel::PutLeaderLen1 ( double pVal ) {
    HRESULT _hr = put_LeaderLen1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1156)
inline double COMKERNALLib::IComAxisLabel::GetLeaderLen2 ( ) {
    double _result = 0;
    HRESULT _hr = get_LeaderLen2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1157)
inline void COMKERNALLib::IComAxisLabel::PutLeaderLen2 ( double pVal ) {
    HRESULT _hr = put_LeaderLen2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1158)
inline _bstr_t COMKERNALLib::IComAxisLabel::GetCircleTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CircleTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1159)
inline void COMKERNALLib::IComAxisLabel::PutCircleTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_CircleTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1160)
inline _bstr_t COMKERNALLib::IComAxisLabel::GetTextRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1161)
inline void COMKERNALLib::IComAxisLabel::PutTextRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_TextRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1162)
inline _bstr_t COMKERNALLib::IComAxisLabel::GetHideAxisText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideAxisText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1163)
inline void COMKERNALLib::IComAxisLabel::PutHideAxisText ( _bstr_t pVal ) {
    HRESULT _hr = put_HideAxisText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbRupture wrapper method implementations
//

#pragma implementation_key(1164)
inline short COMKERNALLib::IComSymbRupture::GetRuptureNum ( ) {
    short _result = 0;
    HRESULT _hr = get_RuptureNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1165)
inline void COMKERNALLib::IComSymbRupture::PutRuptureNum ( short pVal ) {
    HRESULT _hr = put_RuptureNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1166)
inline double COMKERNALLib::IComSymbRupture::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1167)
inline void COMKERNALLib::IComSymbRupture::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1168)
inline double COMKERNALLib::IComSymbRupture::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1169)
inline void COMKERNALLib::IComSymbRupture::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbCoord wrapper method implementations
//

#pragma implementation_key(1170)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1171)
inline void COMKERNALLib::IComSymbCoord::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1172)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1173)
inline void COMKERNALLib::IComSymbCoord::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1174)
inline ACAD_COLOR COMKERNALLib::IComSymbCoord::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1175)
inline void COMKERNALLib::IComSymbCoord::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1176)
inline double COMKERNALLib::IComSymbCoord::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1177)
inline void COMKERNALLib::IComSymbCoord::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1178)
inline double COMKERNALLib::IComSymbCoord::GetXValue ( ) {
    double _result = 0;
    HRESULT _hr = get_XValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1179)
inline void COMKERNALLib::IComSymbCoord::PutXValue ( double pVal ) {
    HRESULT _hr = put_XValue(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1180)
inline double COMKERNALLib::IComSymbCoord::GetYValue ( ) {
    double _result = 0;
    HRESULT _hr = get_YValue(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1181)
inline void COMKERNALLib::IComSymbCoord::PutYValue ( double pVal ) {
    HRESULT _hr = put_YValue(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1182)
inline _variant_t COMKERNALLib::IComSymbCoord::GetLocation ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Location(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1183)
inline void COMKERNALLib::IComSymbCoord::PutLocation ( const _variant_t & pVal ) {
    HRESULT _hr = put_Location(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1184)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1185)
inline void COMKERNALLib::IComSymbCoord::PutStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_Style(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1186)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetPrecision ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Precision(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1187)
inline void COMKERNALLib::IComSymbCoord::PutPrecision ( _bstr_t pVal ) {
    HRESULT _hr = put_Precision(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1188)
inline double COMKERNALLib::IComSymbCoord::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1189)
inline void COMKERNALLib::IComSymbCoord::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1190)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetText2BaseRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text2BaseRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1191)
inline void COMKERNALLib::IComSymbCoord::PutText2BaseRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_Text2BaseRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1192)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetCoordShowMode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CoordShowMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1193)
inline void COMKERNALLib::IComSymbCoord::PutCoordShowMode ( _bstr_t pVal ) {
    HRESULT _hr = put_CoordShowMode(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1194)
inline _bstr_t COMKERNALLib::IComSymbCoord::GetLabelNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LabelNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1195)
inline void COMKERNALLib::IComSymbCoord::PutLabelNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_LabelNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSheet wrapper method implementations
//

#pragma implementation_key(1196)
inline double COMKERNALLib::IComSheet::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1197)
inline void COMKERNALLib::IComSheet::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1198)
inline double COMKERNALLib::IComSheet::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1199)
inline void COMKERNALLib::IComSheet::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1200)
inline _bstr_t COMKERNALLib::IComSheet::GetAllTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1201)
inline void COMKERNALLib::IComSheet::PutAllTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_AllTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1202)
inline _bstr_t COMKERNALLib::IComSheet::GetAllTextSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1203)
inline void COMKERNALLib::IComSheet::PutAllTextSize ( _bstr_t pVal ) {
    HRESULT _hr = put_AllTextSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1204)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetAllTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_AllTextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1205)
inline void COMKERNALLib::IComSheet::PutAllTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_AllTextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1206)
inline _bstr_t COMKERNALLib::IComSheet::GetAllSpaceFactor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllSpaceFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1207)
inline void COMKERNALLib::IComSheet::PutAllSpaceFactor ( _bstr_t pVal ) {
    HRESULT _hr = put_AllSpaceFactor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1208)
inline _bstr_t COMKERNALLib::IComSheet::GetAllHAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllHAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1209)
inline void COMKERNALLib::IComSheet::PutAllHAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_AllHAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1210)
inline _bstr_t COMKERNALLib::IComSheet::GetAllVAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllVAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1211)
inline void COMKERNALLib::IComSheet::PutAllVAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_AllVAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1212)
inline _bstr_t COMKERNALLib::IComSheet::GetAllAutoLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllAutoLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1213)
inline void COMKERNALLib::IComSheet::PutAllAutoLine ( _bstr_t pVal ) {
    HRESULT _hr = put_AllAutoLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1214)
inline _bstr_t COMKERNALLib::IComSheet::GetAllInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1215)
inline void COMKERNALLib::IComSheet::PutAllInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_AllInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1216)
inline _bstr_t COMKERNALLib::IComSheet::GetHasHLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasHLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1217)
inline void COMKERNALLib::IComSheet::PutHasHLine ( _bstr_t pVal ) {
    HRESULT _hr = put_HasHLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1218)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetHLineColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_HLineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1219)
inline void COMKERNALLib::IComSheet::PutHLineColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_HLineColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1220)
inline _bstr_t COMKERNALLib::IComSheet::GetHLineStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HLineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1221)
inline void COMKERNALLib::IComSheet::PutHLineStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_HLineStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1222)
inline _bstr_t COMKERNALLib::IComSheet::GetHLineWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1223)
inline void COMKERNALLib::IComSheet::PutHLineWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_HLineWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1224)
inline _bstr_t COMKERNALLib::IComSheet::GetAllRowHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllRowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1225)
inline void COMKERNALLib::IComSheet::PutAllRowHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_AllRowHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1226)
inline _bstr_t COMKERNALLib::IComSheet::GetAllRowHeightProperty ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllRowHeightProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1227)
inline void COMKERNALLib::IComSheet::PutAllRowHeightProperty ( _bstr_t pVal ) {
    HRESULT _hr = put_AllRowHeightProperty(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1228)
inline _bstr_t COMKERNALLib::IComSheet::GetAllHLineInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllHLineInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1229)
inline void COMKERNALLib::IComSheet::PutAllHLineInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_AllHLineInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1230)
inline _bstr_t COMKERNALLib::IComSheet::GetHasVLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasVLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1231)
inline void COMKERNALLib::IComSheet::PutHasVLine ( _bstr_t pVal ) {
    HRESULT _hr = put_HasVLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1232)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetVLineColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_VLineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1233)
inline void COMKERNALLib::IComSheet::PutVLineColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_VLineColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1234)
inline _bstr_t COMKERNALLib::IComSheet::GetVLineStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_VLineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1235)
inline void COMKERNALLib::IComSheet::PutVLineStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_VLineStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1236)
inline _bstr_t COMKERNALLib::IComSheet::GetVLineWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_VLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1237)
inline void COMKERNALLib::IComSheet::PutVLineWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_VLineWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1238)
inline _bstr_t COMKERNALLib::IComSheet::GetAllVLineInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllVLineInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1239)
inline void COMKERNALLib::IComSheet::PutAllVLineInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_AllVLineInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1240)
inline _bstr_t COMKERNALLib::IComSheet::GetHasBorder ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasBorder(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1241)
inline void COMKERNALLib::IComSheet::PutHasBorder ( _bstr_t pVal ) {
    HRESULT _hr = put_HasBorder(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1242)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetBorderColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_BorderColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1243)
inline void COMKERNALLib::IComSheet::PutBorderColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_BorderColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1244)
inline _bstr_t COMKERNALLib::IComSheet::GetBorderStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1245)
inline void COMKERNALLib::IComSheet::PutBorderStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_BorderStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1246)
inline _bstr_t COMKERNALLib::IComSheet::GetBorderWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BorderWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1247)
inline void COMKERNALLib::IComSheet::PutBorderWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_BorderWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1248)
inline _bstr_t COMKERNALLib::IComSheet::GetTitle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Title(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1249)
inline void COMKERNALLib::IComSheet::PutTitle ( _bstr_t pVal ) {
    HRESULT _hr = put_Title(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1250)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1251)
inline void COMKERNALLib::IComSheet::PutTitleTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1252)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleTextSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1253)
inline void COMKERNALLib::IComSheet::PutTitleTextSize ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleTextSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1254)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetTitleTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TitleTextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1255)
inline void COMKERNALLib::IComSheet::PutTitleTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TitleTextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1256)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleSpaceFactor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleSpaceFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1257)
inline void COMKERNALLib::IComSheet::PutTitleSpaceFactor ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleSpaceFactor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1258)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleHAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleHAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1259)
inline void COMKERNALLib::IComSheet::PutTitleHAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleHAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1260)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleVAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleVAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1261)
inline void COMKERNALLib::IComSheet::PutTitleVAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleVAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1262)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetTitleBaseLineColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TitleBaseLineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1263)
inline void COMKERNALLib::IComSheet::PutTitleBaseLineColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TitleBaseLineColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1264)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleBaseLineStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleBaseLineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1265)
inline void COMKERNALLib::IComSheet::PutTitleBaseLineStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleBaseLineStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1266)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleBaseLineWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleBaseLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1267)
inline void COMKERNALLib::IComSheet::PutTitleBaseLineWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleBaseLineWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1268)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1269)
inline void COMKERNALLib::IComSheet::PutTitleHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1270)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleOutside ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleOutside(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1271)
inline void COMKERNALLib::IComSheet::PutTitleOutside ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleOutside(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1272)
inline _bstr_t COMKERNALLib::IComSheet::GetTitleHide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TitleHide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1273)
inline void COMKERNALLib::IComSheet::PutTitleHide ( _bstr_t pVal ) {
    HRESULT _hr = put_TitleHide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1274)
inline long COMKERNALLib::IComSheet::GetCellRowIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CellRowIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1275)
inline void COMKERNALLib::IComSheet::PutCellRowIndex ( long pVal ) {
    HRESULT _hr = put_CellRowIndex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1276)
inline long COMKERNALLib::IComSheet::GetCellColIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_CellColIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1277)
inline void COMKERNALLib::IComSheet::PutCellColIndex ( long pVal ) {
    HRESULT _hr = put_CellColIndex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1278)
inline _bstr_t COMKERNALLib::IComSheet::GetCellText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1279)
inline void COMKERNALLib::IComSheet::PutCellText ( _bstr_t pVal ) {
    HRESULT _hr = put_CellText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1280)
inline _bstr_t COMKERNALLib::IComSheet::GetCellTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1281)
inline void COMKERNALLib::IComSheet::PutCellTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_CellTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1282)
inline _bstr_t COMKERNALLib::IComSheet::GetCellTextSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1283)
inline void COMKERNALLib::IComSheet::PutCellTextSize ( _bstr_t pVal ) {
    HRESULT _hr = put_CellTextSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1284)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetCellTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_CellTextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1285)
inline void COMKERNALLib::IComSheet::PutCellTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_CellTextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1286)
inline _bstr_t COMKERNALLib::IComSheet::GetCellSpaceFactor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellSpaceFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1287)
inline void COMKERNALLib::IComSheet::PutCellSpaceFactor ( _bstr_t pVal ) {
    HRESULT _hr = put_CellSpaceFactor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1288)
inline _bstr_t COMKERNALLib::IComSheet::GetCellHAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellHAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1289)
inline void COMKERNALLib::IComSheet::PutCellHAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_CellHAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1290)
inline _bstr_t COMKERNALLib::IComSheet::GetCellVAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellVAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1291)
inline void COMKERNALLib::IComSheet::PutCellVAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_CellVAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1292)
inline _bstr_t COMKERNALLib::IComSheet::GetCellLinePropertyInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellLinePropertyInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1293)
inline void COMKERNALLib::IComSheet::PutCellLinePropertyInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_CellLinePropertyInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1294)
inline _bstr_t COMKERNALLib::IComSheet::GetCellLineWrap ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellLineWrap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1295)
inline void COMKERNALLib::IComSheet::PutCellLineWrap ( _bstr_t pVal ) {
    HRESULT _hr = put_CellLineWrap(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1296)
inline short COMKERNALLib::IComSheet::GetRowNum ( ) {
    short _result = 0;
    HRESULT _hr = get_RowNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1297)
inline long COMKERNALLib::IComSheet::GetRowIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_RowIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1298)
inline void COMKERNALLib::IComSheet::PutRowIndex ( long pVal ) {
    HRESULT _hr = put_RowIndex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1299)
inline _bstr_t COMKERNALLib::IComSheet::GetRowHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1300)
inline void COMKERNALLib::IComSheet::PutRowHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_RowHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1301)
inline _bstr_t COMKERNALLib::IComSheet::GetRowHeightProperty ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowHeightProperty(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1302)
inline void COMKERNALLib::IComSheet::PutRowHeightProperty ( _bstr_t pVal ) {
    HRESULT _hr = put_RowHeightProperty(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1303)
inline _bstr_t COMKERNALLib::IComSheet::GetRowInheritSheet ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowInheritSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1304)
inline void COMKERNALLib::IComSheet::PutRowInheritSheet ( _bstr_t pVal ) {
    HRESULT _hr = put_RowInheritSheet(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1305)
inline _bstr_t COMKERNALLib::IComSheet::GetRowHasBaseLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowHasBaseLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1306)
inline void COMKERNALLib::IComSheet::PutRowHasBaseLine ( _bstr_t pVal ) {
    HRESULT _hr = put_RowHasBaseLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1307)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetRowHLineColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_RowHLineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1308)
inline void COMKERNALLib::IComSheet::PutRowHLineColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_RowHLineColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1309)
inline _bstr_t COMKERNALLib::IComSheet::GetRowHLineStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowHLineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1310)
inline void COMKERNALLib::IComSheet::PutRowHLineStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_RowHLineStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1311)
inline _bstr_t COMKERNALLib::IComSheet::GetRowHLineWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowHLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1312)
inline void COMKERNALLib::IComSheet::PutRowHLineWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_RowHLineWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1313)
inline _bstr_t COMKERNALLib::IComSheet::GetAllRowCellInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllRowCellInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1314)
inline void COMKERNALLib::IComSheet::PutAllRowCellInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_AllRowCellInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1315)
inline long COMKERNALLib::IComSheet::GetColNum ( ) {
    long _result = 0;
    HRESULT _hr = get_ColNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1316)
inline long COMKERNALLib::IComSheet::GetColIndex ( ) {
    long _result = 0;
    HRESULT _hr = get_ColIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1317)
inline void COMKERNALLib::IComSheet::PutColIndex ( long pVal ) {
    HRESULT _hr = put_ColIndex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1318)
inline _bstr_t COMKERNALLib::IComSheet::GetColWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1319)
inline void COMKERNALLib::IComSheet::PutColWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_ColWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1320)
inline _bstr_t COMKERNALLib::IComSheet::GetColTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1321)
inline void COMKERNALLib::IComSheet::PutColTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_ColTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1322)
inline _bstr_t COMKERNALLib::IComSheet::GetColTextSize ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColTextSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1323)
inline void COMKERNALLib::IComSheet::PutColTextSize ( _bstr_t pVal ) {
    HRESULT _hr = put_ColTextSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1324)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetColTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_ColTextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1325)
inline void COMKERNALLib::IComSheet::PutColTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_ColTextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1326)
inline _bstr_t COMKERNALLib::IComSheet::GetColSpaceFactor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColSpaceFactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1327)
inline void COMKERNALLib::IComSheet::PutColSpaceFactor ( _bstr_t pVal ) {
    HRESULT _hr = put_ColSpaceFactor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1328)
inline _bstr_t COMKERNALLib::IComSheet::GetColHAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColHAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1329)
inline void COMKERNALLib::IComSheet::PutColHAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_ColHAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1330)
inline _bstr_t COMKERNALLib::IComSheet::GetColLinePropertyInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColLinePropertyInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1331)
inline void COMKERNALLib::IComSheet::PutColLinePropertyInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_ColLinePropertyInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1332)
inline _bstr_t COMKERNALLib::IComSheet::GetColLineWrap ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColLineWrap(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1333)
inline void COMKERNALLib::IComSheet::PutColLineWrap ( _bstr_t pVal ) {
    HRESULT _hr = put_ColLineWrap(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1334)
inline _bstr_t COMKERNALLib::IComSheet::GetColAllowDrag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColAllowDrag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1335)
inline void COMKERNALLib::IComSheet::PutColAllowDrag ( _bstr_t pVal ) {
    HRESULT _hr = put_ColAllowDrag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1336)
inline _bstr_t COMKERNALLib::IComSheet::GetColInheritSheet ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColInheritSheet(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1337)
inline void COMKERNALLib::IComSheet::PutColInheritSheet ( _bstr_t pVal ) {
    HRESULT _hr = put_ColInheritSheet(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1338)
inline _bstr_t COMKERNALLib::IComSheet::GetColHasRightLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColHasRightLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1339)
inline void COMKERNALLib::IComSheet::PutColHasRightLine ( _bstr_t pVal ) {
    HRESULT _hr = put_ColHasRightLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1340)
inline ACAD_COLOR COMKERNALLib::IComSheet::GetColRLineColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_ColRLineColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1341)
inline void COMKERNALLib::IComSheet::PutColRLineColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_ColRLineColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1342)
inline _bstr_t COMKERNALLib::IComSheet::GetColRLineStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColRLineStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1343)
inline void COMKERNALLib::IComSheet::PutColRLineStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_ColRLineStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1344)
inline _bstr_t COMKERNALLib::IComSheet::GetColRLineWidth ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColRLineWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1345)
inline void COMKERNALLib::IComSheet::PutColRLineWidth ( _bstr_t pVal ) {
    HRESULT _hr = put_ColRLineWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1346)
inline _bstr_t COMKERNALLib::IComSheet::GetAllColCellInherit ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AllColCellInherit(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1347)
inline void COMKERNALLib::IComSheet::PutAllColCellInherit ( _bstr_t pVal ) {
    HRESULT _hr = put_AllColCellInherit(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1348)
inline HRESULT COMKERNALLib::IComSheet::Create ( short nRowNum, short nColNum ) {
    HRESULT _hr = raw_Create(nRowNum, nColNum);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1349)
inline HRESULT COMKERNALLib::IComSheet::SetCellText ( short Row, short Col, _bstr_t Text ) {
    HRESULT _hr = raw_SetCellText(Row, Col, Text);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1350)
inline HRESULT COMKERNALLib::IComSheet::Merge ( short StartRow, short StartColumn, short NumRow, short NumColumn ) {
    HRESULT _hr = raw_Merge(StartRow, StartColumn, NumRow, NumColumn);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1351)
inline HRESULT COMKERNALLib::IComSheet::ExplodeCell ( short Row, short Col ) {
    HRESULT _hr = raw_ExplodeCell(Row, Col);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

#pragma implementation_key(1352)
inline short COMKERNALLib::IComSheet::GetRangeRowMax ( short Row, short Column ) {
    short _result = 0;
    HRESULT _hr = get_RangeRowMax(Row, Column, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1353)
inline short COMKERNALLib::IComSheet::GetRangeColumnMax ( short Row, short Column ) {
    short _result = 0;
    HRESULT _hr = get_RangeColumnMax(Row, Column, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1354)
inline short COMKERNALLib::IComSheet::GetRangeRow ( short Row, short Column ) {
    short _result = 0;
    HRESULT _hr = get_RangeRow(Row, Column, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1355)
inline short COMKERNALLib::IComSheet::GetRangeColumn ( short Row, short Column ) {
    short _result = 0;
    HRESULT _hr = get_RangeColumn(Row, Column, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1356)
inline long COMKERNALLib::IComSheet::GetIsRange ( short Row, short Column ) {
    long _result = 0;
    HRESULT _hr = get_IsRange(Row, Column, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1357)
inline _bstr_t COMKERNALLib::IComSheet::GetText ( short Row, short Column ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(Row, Column, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1358)
inline short COMKERNALLib::IComSheet::GetColumnNum ( ) {
    short _result = 0;
    HRESULT _hr = get_ColumnNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1359)
inline long COMKERNALLib::IComSheet::GetTextColor ( short Row, short Col ) {
    long _result = 0;
    HRESULT _hr = get_TextColor(Row, Col, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1360)
inline void COMKERNALLib::IComSheet::PutTextColor ( short Row, short Col, long pVal ) {
    HRESULT _hr = put_TextColor(Row, Col, pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCurtainWall wrapper method implementations
//

#pragma implementation_key(1361)
inline double COMKERNALLib::IComCurtainWall::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1362)
inline void COMKERNALLib::IComCurtainWall::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1363)
inline double COMKERNALLib::IComCurtainWall::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1364)
inline void COMKERNALLib::IComCurtainWall::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1365)
inline double COMKERNALLib::IComCurtainWall::GetLeftWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1366)
inline void COMKERNALLib::IComCurtainWall::PutLeftWidth ( double pVal ) {
    HRESULT _hr = put_LeftWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1367)
inline double COMKERNALLib::IComCurtainWall::GetRightWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RightWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1368)
inline void COMKERNALLib::IComCurtainWall::PutRightWidth ( double pVal ) {
    HRESULT _hr = put_RightWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1369)
inline double COMKERNALLib::IComCurtainWall::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1370)
inline void COMKERNALLib::IComCurtainWall::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1371)
inline double COMKERNALLib::IComCurtainWall::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1372)
inline double COMKERNALLib::IComCurtainWall::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1373)
inline void COMKERNALLib::IComCurtainWall::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1374)
inline double COMKERNALLib::IComCurtainWall::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1375)
inline void COMKERNALLib::IComCurtainWall::PutRadius ( double pVal ) {
    HRESULT _hr = put_Radius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1376)
inline long COMKERNALLib::IComCurtainWall::GetRowNum ( ) {
    long _result = 0;
    HRESULT _hr = get_RowNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1377)
inline long COMKERNALLib::IComCurtainWall::GetColNum ( ) {
    long _result = 0;
    HRESULT _hr = get_ColNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1378)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetRowAverage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowAverage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1379)
inline void COMKERNALLib::IComCurtainWall::PutRowAverage ( _bstr_t pVal ) {
    HRESULT _hr = put_RowAverage(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1380)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetColAverage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColAverage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1381)
inline void COMKERNALLib::IComCurtainWall::PutColAverage ( _bstr_t pVal ) {
    HRESULT _hr = put_ColAverage(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1382)
inline _variant_t COMKERNALLib::IComCurtainWall::GetRowHeight ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_RowHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1383)
inline void COMKERNALLib::IComCurtainWall::PutRowHeight ( const _variant_t & pVal ) {
    HRESULT _hr = put_RowHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1384)
inline _variant_t COMKERNALLib::IComCurtainWall::GetColWidth ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_ColWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1385)
inline void COMKERNALLib::IComCurtainWall::PutColWidth ( const _variant_t & pVal ) {
    HRESULT _hr = put_ColWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1386)
inline double COMKERNALLib::IComCurtainWall::GetURow ( ) {
    double _result = 0;
    HRESULT _hr = get_URow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1387)
inline void COMKERNALLib::IComCurtainWall::PutURow ( double pVal ) {
    HRESULT _hr = put_URow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1388)
inline double COMKERNALLib::IComCurtainWall::GetVRow ( ) {
    double _result = 0;
    HRESULT _hr = get_VRow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1389)
inline void COMKERNALLib::IComCurtainWall::PutVRow ( double pVal ) {
    HRESULT _hr = put_VRow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1390)
inline double COMKERNALLib::IComCurtainWall::GetUCol ( ) {
    double _result = 0;
    HRESULT _hr = get_UCol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1391)
inline void COMKERNALLib::IComCurtainWall::PutUCol ( double pVal ) {
    HRESULT _hr = put_UCol(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1392)
inline double COMKERNALLib::IComCurtainWall::GetVCol ( ) {
    double _result = 0;
    HRESULT _hr = get_VCol(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1393)
inline void COMKERNALLib::IComCurtainWall::PutVCol ( double pVal ) {
    HRESULT _hr = put_VCol(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1394)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetRowHide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RowHide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1395)
inline void COMKERNALLib::IComCurtainWall::PutRowHide ( _bstr_t pVal ) {
    HRESULT _hr = put_RowHide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1396)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetColHide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ColHide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1397)
inline void COMKERNALLib::IComCurtainWall::PutColHide ( _bstr_t pVal ) {
    HRESULT _hr = put_ColHide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1398)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetBasePos ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BasePos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1399)
inline void COMKERNALLib::IComCurtainWall::PutBasePos ( _bstr_t pVal ) {
    HRESULT _hr = put_BasePos(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1400)
inline double COMKERNALLib::IComCurtainWall::GetGlassDist ( ) {
    double _result = 0;
    HRESULT _hr = get_GlassDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1401)
inline void COMKERNALLib::IComCurtainWall::PutGlassDist ( double pVal ) {
    HRESULT _hr = put_GlassDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1402)
inline double COMKERNALLib::IComCurtainWall::GetFrameDist ( ) {
    double _result = 0;
    HRESULT _hr = get_FrameDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1403)
inline void COMKERNALLib::IComCurtainWall::PutFrameDist ( double pVal ) {
    HRESULT _hr = put_FrameDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1404)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetPlaneDisplay ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlaneDisplay(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1405)
inline void COMKERNALLib::IComCurtainWall::PutPlaneDisplay ( _bstr_t pVal ) {
    HRESULT _hr = put_PlaneDisplay(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1406)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetIsArc ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsArc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1407)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetTopFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TopFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1408)
inline void COMKERNALLib::IComCurtainWall::PutTopFrame ( _bstr_t pVal ) {
    HRESULT _hr = put_TopFrame(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1409)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetBotFrame ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BotFrame(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1410)
inline void COMKERNALLib::IComCurtainWall::PutBotFrame ( _bstr_t pVal ) {
    HRESULT _hr = put_BotFrame(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1411)
inline ACAD_LAYER COMKERNALLib::IComCurtainWall::GetGlassLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_GlassLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1412)
inline void COMKERNALLib::IComCurtainWall::PutGlassLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_GlassLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1413)
inline ACAD_LAYER COMKERNALLib::IComCurtainWall::GetRowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1414)
inline void COMKERNALLib::IComCurtainWall::PutRowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1415)
inline ACAD_LAYER COMKERNALLib::IComCurtainWall::GetColLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ColLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1416)
inline void COMKERNALLib::IComCurtainWall::PutColLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ColLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1417)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetEnUsage ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EnUsage(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1418)
inline void COMKERNALLib::IComCurtainWall::PutEnUsage ( _bstr_t pVal ) {
    HRESULT _hr = put_EnUsage(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1419)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetIOFeature ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IOFeature(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1420)
inline void COMKERNALLib::IComCurtainWall::PutIOFeature ( _bstr_t pVal ) {
    HRESULT _hr = put_IOFeature(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1421)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetStructure ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1422)
inline void COMKERNALLib::IComCurtainWall::PutStructure ( _bstr_t pVal ) {
    HRESULT _hr = put_Structure(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1423)
inline double COMKERNALLib::IComCurtainWall::GetAreaRatio ( ) {
    double _result = 0;
    HRESULT _hr = get_AreaRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1424)
inline double COMKERNALLib::IComCurtainWall::GetConductivity ( ) {
    double _result = 0;
    HRESULT _hr = get_Conductivity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1425)
inline double COMKERNALLib::IComCurtainWall::GetInertiaIndex ( ) {
    double _result = 0;
    HRESULT _hr = get_InertiaIndex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1426)
inline _bstr_t COMKERNALLib::IComCurtainWall::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1427)
inline void COMKERNALLib::IComCurtainWall::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComMultiStair wrapper method implementations
//

#pragma implementation_key(1428)
inline double COMKERNALLib::IComMultiStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1429)
inline void COMKERNALLib::IComMultiStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1430)
inline double COMKERNALLib::IComMultiStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1431)
inline void COMKERNALLib::IComMultiStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1432)
inline short COMKERNALLib::IComMultiStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1433)
inline void COMKERNALLib::IComMultiStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1434)
inline double COMKERNALLib::IComMultiStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1435)
inline void COMKERNALLib::IComMultiStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1436)
inline double COMKERNALLib::IComMultiStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1437)
inline void COMKERNALLib::IComMultiStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1438)
inline double COMKERNALLib::IComMultiStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1439)
inline void COMKERNALLib::IComMultiStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1440)
inline double COMKERNALLib::IComMultiStair::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1441)
inline void COMKERNALLib::IComMultiStair::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1442)
inline long COMKERNALLib::IComMultiStair::GetStepNum ( ) {
    long _result = 0;
    HRESULT _hr = get_StepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1443)
inline void COMKERNALLib::IComMultiStair::PutStepNum ( long pVal ) {
    HRESULT _hr = put_StepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1444)
inline double COMKERNALLib::IComMultiStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1445)
inline void COMKERNALLib::IComMultiStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1446)
inline double COMKERNALLib::IComMultiStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1447)
inline void COMKERNALLib::IComMultiStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1448)
inline ACAD_LAYER COMKERNALLib::IComMultiStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1449)
inline void COMKERNALLib::IComMultiStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1450)
inline ACAD_LAYER COMKERNALLib::IComMultiStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1451)
inline void COMKERNALLib::IComMultiStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1452)
inline ACAD_LAYER COMKERNALLib::IComMultiStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1453)
inline void COMKERNALLib::IComMultiStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1454)
inline ACAD_LAYER COMKERNALLib::IComMultiStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1455)
inline void COMKERNALLib::IComMultiStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1456)
inline ACAD_LAYER COMKERNALLib::IComMultiStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1457)
inline void COMKERNALLib::IComMultiStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1458)
inline ACAD_LAYER COMKERNALLib::IComMultiStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1459)
inline void COMKERNALLib::IComMultiStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1460)
inline _bstr_t COMKERNALLib::IComMultiStair::GetHasLeftHandRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasLeftHandRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1461)
inline void COMKERNALLib::IComMultiStair::PutHasLeftHandRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasLeftHandRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1462)
inline _bstr_t COMKERNALLib::IComMultiStair::GetHasRightHandRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRightHandRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1463)
inline void COMKERNALLib::IComMultiStair::PutHasRightHandRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRightHandRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1464)
inline double COMKERNALLib::IComMultiStair::GetRailDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1465)
inline void COMKERNALLib::IComMultiStair::PutRailDist ( double pVal ) {
    HRESULT _hr = put_RailDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1466)
inline double COMKERNALLib::IComMultiStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1467)
inline void COMKERNALLib::IComMultiStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1468)
inline double COMKERNALLib::IComMultiStair::GetRailHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RailHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1469)
inline void COMKERNALLib::IComMultiStair::PutRailHeight ( double pVal ) {
    HRESULT _hr = put_RailHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1470)
inline _bstr_t COMKERNALLib::IComMultiStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1471)
inline void COMKERNALLib::IComMultiStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1472)
inline _bstr_t COMKERNALLib::IComMultiStair::GetHasLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasLeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1473)
inline void COMKERNALLib::IComMultiStair::PutHasLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasLeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1474)
inline _bstr_t COMKERNALLib::IComMultiStair::GetHasRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1475)
inline void COMKERNALLib::IComMultiStair::PutHasRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1476)
inline double COMKERNALLib::IComMultiStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1477)
inline void COMKERNALLib::IComMultiStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1478)
inline double COMKERNALLib::IComMultiStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1479)
inline void COMKERNALLib::IComMultiStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1480)
inline _bstr_t COMKERNALLib::IComMultiStair::GetAsAscent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AsAscent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1481)
inline void COMKERNALLib::IComMultiStair::PutAsAscent ( _bstr_t pVal ) {
    HRESULT _hr = put_AsAscent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1482)
inline _bstr_t COMKERNALLib::IComMultiStair::GetHasSlant ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlant(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1483)
inline void COMKERNALLib::IComMultiStair::PutHasSlant ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlant(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1484)
inline _bstr_t COMKERNALLib::IComMultiStair::GetOnGround ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1485)
inline void COMKERNALLib::IComMultiStair::PutOnGround ( _bstr_t pVal ) {
    HRESULT _hr = put_OnGround(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1486)
inline _bstr_t COMKERNALLib::IComMultiStair::GetBasePos ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BasePos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1487)
inline void COMKERNALLib::IComMultiStair::PutBasePos ( _bstr_t pVal ) {
    HRESULT _hr = put_BasePos(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1488)
inline _bstr_t COMKERNALLib::IComMultiStair::GetAlongWall ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_AlongWall(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1489)
inline void COMKERNALLib::IComMultiStair::PutAlongWall ( _bstr_t pVal ) {
    HRESULT _hr = put_AlongWall(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1490)
inline _bstr_t COMKERNALLib::IComMultiStair::GetLayerType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LayerType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1491)
inline void COMKERNALLib::IComMultiStair::PutLayerType ( _bstr_t pVal ) {
    HRESULT _hr = put_LayerType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1492)
inline _bstr_t COMKERNALLib::IComMultiStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1493)
inline void COMKERNALLib::IComMultiStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1494)
inline _bstr_t COMKERNALLib::IComMultiStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1495)
inline void COMKERNALLib::IComMultiStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1496)
inline double COMKERNALLib::IComMultiStair::GetFirstRailDist ( ) {
    double _result = 0;
    HRESULT _hr = get_FirstRailDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1497)
inline void COMKERNALLib::IComMultiStair::PutFirstRailDist ( double pVal ) {
    HRESULT _hr = put_FirstRailDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1498)
inline double COMKERNALLib::IComMultiStair::GetEndRailDist ( ) {
    double _result = 0;
    HRESULT _hr = get_EndRailDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1499)
inline void COMKERNALLib::IComMultiStair::PutEndRailDist ( double pVal ) {
    HRESULT _hr = put_EndRailDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1500)
inline _bstr_t COMKERNALLib::IComMultiStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1501)
inline void COMKERNALLib::IComMultiStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1502)
inline _bstr_t COMKERNALLib::IComMultiStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1503)
inline void COMKERNALLib::IComMultiStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1504)
inline _bstr_t COMKERNALLib::IComMultiStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1505)
inline void COMKERNALLib::IComMultiStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1506)
inline _bstr_t COMKERNALLib::IComMultiStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1507)
inline void COMKERNALLib::IComMultiStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1508)
inline double COMKERNALLib::IComMultiStair::GetSectHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_SectHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1509)
inline void COMKERNALLib::IComMultiStair::PutSectHeight ( double pVal ) {
    HRESULT _hr = put_SectHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1510)
inline short COMKERNALLib::IComMultiStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1511)
inline void COMKERNALLib::IComMultiStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCornerWin wrapper method implementations
//

#pragma implementation_key(1512)
inline double COMKERNALLib::IComCornerWin::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1513)
inline void COMKERNALLib::IComCornerWin::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1514)
inline double COMKERNALLib::IComCornerWin::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1515)
inline void COMKERNALLib::IComCornerWin::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1516)
inline double COMKERNALLib::IComCornerWin::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1517)
inline void COMKERNALLib::IComCornerWin::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1518)
inline double COMKERNALLib::IComCornerWin::GetSillHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_SillHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1519)
inline void COMKERNALLib::IComCornerWin::PutSillHeight ( double pVal ) {
    HRESULT _hr = put_SillHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1520)
inline double COMKERNALLib::IComCornerWin::GetWidth1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Width1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1521)
inline void COMKERNALLib::IComCornerWin::PutWidth1 ( double pVal ) {
    HRESULT _hr = put_Width1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1522)
inline double COMKERNALLib::IComCornerWin::GetWidth2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Width2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1523)
inline void COMKERNALLib::IComCornerWin::PutWidth2 ( double pVal ) {
    HRESULT _hr = put_Width2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1524)
inline double COMKERNALLib::IComCornerWin::GetFrameHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_FrameHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1525)
inline void COMKERNALLib::IComCornerWin::PutFrameHeight ( double pVal ) {
    HRESULT _hr = put_FrameHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1526)
inline double COMKERNALLib::IComCornerWin::GetFrameThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_FrameThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1527)
inline void COMKERNALLib::IComCornerWin::PutFrameThickness ( double pVal ) {
    HRESULT _hr = put_FrameThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1528)
inline _bstr_t COMKERNALLib::IComCornerWin::GetIsProtrudeWin ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsProtrudeWin(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1529)
inline void COMKERNALLib::IComCornerWin::PutIsProtrudeWin ( _bstr_t pVal ) {
    HRESULT _hr = put_IsProtrudeWin(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1530)
inline double COMKERNALLib::IComCornerWin::GetFrontDist ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1531)
inline void COMKERNALLib::IComCornerWin::PutFrontDist ( double pVal ) {
    HRESULT _hr = put_FrontDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1532)
inline double COMKERNALLib::IComCornerWin::GetFrontDist2 ( ) {
    double _result = 0;
    HRESULT _hr = get_FrontDist2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1533)
inline void COMKERNALLib::IComCornerWin::PutFrontDist2 ( double pVal ) {
    HRESULT _hr = put_FrontDist2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1534)
inline _bstr_t COMKERNALLib::IComCornerWin::GetOnGround ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OnGround(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1535)
inline void COMKERNALLib::IComCornerWin::PutOnGround ( _bstr_t pVal ) {
    HRESULT _hr = put_OnGround(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1536)
inline double COMKERNALLib::IComCornerWin::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1537)
inline void COMKERNALLib::IComCornerWin::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1538)
inline double COMKERNALLib::IComCornerWin::GetDist1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Dist1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1539)
inline void COMKERNALLib::IComCornerWin::PutDist1 ( double pVal ) {
    HRESULT _hr = put_Dist1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1540)
inline double COMKERNALLib::IComCornerWin::GetDist2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Dist2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1541)
inline void COMKERNALLib::IComCornerWin::PutDist2 ( double pVal ) {
    HRESULT _hr = put_Dist2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1542)
inline double COMKERNALLib::IComCornerWin::GetGlassDist ( ) {
    double _result = 0;
    HRESULT _hr = get_GlassDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1543)
inline void COMKERNALLib::IComCornerWin::PutGlassDist ( double pVal ) {
    HRESULT _hr = put_GlassDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1544)
inline _bstr_t COMKERNALLib::IComCornerWin::GetHasSlab1 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1545)
inline void COMKERNALLib::IComCornerWin::PutHasSlab1 ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1546)
inline _bstr_t COMKERNALLib::IComCornerWin::GetHasSlab2 ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1547)
inline void COMKERNALLib::IComCornerWin::PutHasSlab2 ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1548)
inline double COMKERNALLib::IComCornerWin::GetProWinSlabWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_ProWinSlabWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1549)
inline void COMKERNALLib::IComCornerWin::PutProWinSlabWidth ( double pVal ) {
    HRESULT _hr = put_ProWinSlabWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1550)
inline double COMKERNALLib::IComCornerWin::GetProWinSlabInsuThick ( ) {
    double _result = 0;
    HRESULT _hr = get_ProWinSlabInsuThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1551)
inline void COMKERNALLib::IComCornerWin::PutProWinSlabInsuThick ( double pVal ) {
    HRESULT _hr = put_ProWinSlabInsuThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1552)
inline _bstr_t COMKERNALLib::IComCornerWin::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1553)
inline void COMKERNALLib::IComCornerWin::PutLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_Label(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1554)
inline double COMKERNALLib::IComCornerWin::GetTextAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_TextAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1555)
inline void COMKERNALLib::IComCornerWin::PutTextAngle ( double pVal ) {
    HRESULT _hr = put_TextAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1556)
inline double COMKERNALLib::IComCornerWin::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1557)
inline void COMKERNALLib::IComCornerWin::PutTextHeight ( double pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1558)
inline _bstr_t COMKERNALLib::IComCornerWin::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1559)
inline void COMKERNALLib::IComCornerWin::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1560)
inline _bstr_t COMKERNALLib::IComCornerWin::GetHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1561)
inline void COMKERNALLib::IComCornerWin::PutHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_HideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1562)
inline ACAD_LAYER COMKERNALLib::IComCornerWin::GetGlassLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_GlassLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1563)
inline void COMKERNALLib::IComCornerWin::PutGlassLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_GlassLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1564)
inline ACAD_LAYER COMKERNALLib::IComCornerWin::GetFrameLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_FrameLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1565)
inline void COMKERNALLib::IComCornerWin::PutFrameLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_FrameLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1566)
inline ACAD_LAYER COMKERNALLib::IComCornerWin::GetSlabLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_SlabLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1567)
inline void COMKERNALLib::IComCornerWin::PutSlabLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_SlabLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1568)
inline ACAD_LAYER COMKERNALLib::IComCornerWin::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1569)
inline void COMKERNALLib::IComCornerWin::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1570)
inline _bstr_t COMKERNALLib::IComCornerWin::GetIsHole ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsHole(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1571)
inline void COMKERNALLib::IComCornerWin::PutIsHole ( _bstr_t pVal ) {
    HRESULT _hr = put_IsHole(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1572)
inline _bstr_t COMKERNALLib::IComCornerWin::GetKind ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Kind(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1573)
inline _bstr_t COMKERNALLib::IComCornerWin::GetStructure ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Structure(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1574)
inline void COMKERNALLib::IComCornerWin::PutStructure ( _bstr_t pVal ) {
    HRESULT _hr = put_Structure(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1575)
inline _bstr_t COMKERNALLib::IComCornerWin::GetExtShading ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ExtShading(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1576)
inline void COMKERNALLib::IComCornerWin::PutExtShading ( _bstr_t pVal ) {
    HRESULT _hr = put_ExtShading(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1577)
inline double COMKERNALLib::IComCornerWin::GetConductivity ( ) {
    double _result = 0;
    HRESULT _hr = get_Conductivity(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1578)
inline _bstr_t COMKERNALLib::IComCornerWin::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1579)
inline void COMKERNALLib::IComCornerWin::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComRect wrapper method implementations
//

#pragma implementation_key(1580)
inline double COMKERNALLib::IComRect::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1581)
inline void COMKERNALLib::IComRect::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1582)
inline _bstr_t COMKERNALLib::IComRect::GetDiaLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DiaLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1583)
inline void COMKERNALLib::IComRect::PutDiaLine ( _bstr_t pVal ) {
    HRESULT _hr = put_DiaLine(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1584)
inline double COMKERNALLib::IComRect::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1585)
inline void COMKERNALLib::IComRect::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1586)
inline double COMKERNALLib::IComRect::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1587)
inline void COMKERNALLib::IComRect::PutLength ( double pVal ) {
    HRESULT _hr = put_Length(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1588)
inline double COMKERNALLib::IComRect::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1589)
inline void COMKERNALLib::IComRect::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1590)
inline _bstr_t COMKERNALLib::IComRect::GetBaseType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BaseType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1591)
inline void COMKERNALLib::IComRect::PutBaseType ( _bstr_t pVal ) {
    HRESULT _hr = put_BaseType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1592)
inline double COMKERNALLib::IComRect::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1593)
inline void COMKERNALLib::IComRect::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1594)
inline double COMKERNALLib::IComRect::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1595)
inline void COMKERNALLib::IComRect::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1596)
inline double COMKERNALLib::IComRect::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1597)
inline void COMKERNALLib::IComRect::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1598)
inline _bstr_t COMKERNALLib::IComRect::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1599)
inline void COMKERNALLib::IComRect::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSlope wrapper method implementations
//

#pragma implementation_key(1600)
inline double COMKERNALLib::IComSlope::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1601)
inline void COMKERNALLib::IComSlope::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1602)
inline double COMKERNALLib::IComSlope::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1603)
inline void COMKERNALLib::IComSlope::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1604)
inline _bstr_t COMKERNALLib::IComSlope::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1605)
inline void COMKERNALLib::IComSlope::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1606)
inline long COMKERNALLib::IComSlope::GetVertexNum ( ) {
    long _result = 0;
    HRESULT _hr = get_VertexNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1607)
inline void COMKERNALLib::IComSlope::PutVertexNum ( long pVal ) {
    HRESULT _hr = put_VertexNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1608)
inline _bstr_t COMKERNALLib::IComSlope::GetShowMode ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowMode(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1609)
inline void COMKERNALLib::IComSlope::PutShowMode ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowMode(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1610)
inline _bstr_t COMKERNALLib::IComSlope::GetReactor ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Reactor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1611)
inline void COMKERNALLib::IComSlope::PutReactor ( _bstr_t pVal ) {
    HRESULT _hr = put_Reactor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1612)
inline _bstr_t COMKERNALLib::IComSlope::GetTransform ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Transform(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1613)
inline void COMKERNALLib::IComSlope::PutTransform ( _bstr_t pVal ) {
    HRESULT _hr = put_Transform(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1614)
inline _bstr_t COMKERNALLib::IComSlope::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1615)
inline void COMKERNALLib::IComSlope::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComPolyMesh wrapper method implementations
//

#pragma implementation_key(1616)
inline double COMKERNALLib::IComPolyMesh::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1617)
inline void COMKERNALLib::IComPolyMesh::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1618)
inline double COMKERNALLib::IComPolyMesh::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1619)
inline void COMKERNALLib::IComPolyMesh::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1620)
inline _bstr_t COMKERNALLib::IComPolyMesh::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1621)
inline void COMKERNALLib::IComPolyMesh::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1622)
inline _bstr_t COMKERNALLib::IComPolyMesh::GetPathLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1623)
inline _bstr_t COMKERNALLib::IComPolyMesh::GetSideArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1624)
inline int COMKERNALLib::IComPolyMesh::GetSectionNum ( ) {
    int _result = 0;
    HRESULT _hr = get_SectionNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1625)
inline _bstr_t COMKERNALLib::IComPolyMesh::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1626)
inline _variant_t COMKERNALLib::IComPolyMesh::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1627)
inline void COMKERNALLib::IComPolyMesh::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1628)
inline _variant_t COMKERNALLib::IComPolyMesh::GetSection ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1629)
inline void COMKERNALLib::IComPolyMesh::PutSection ( const _variant_t & pVal ) {
    HRESULT _hr = put_Section(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1630)
inline _bstr_t COMKERNALLib::IComPolyMesh::GetShapeVisibility ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShapeVisibility(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1631)
inline void COMKERNALLib::IComPolyMesh::PutShapeVisibility ( _bstr_t pVal ) {
    HRESULT _hr = put_ShapeVisibility(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1632)
inline _bstr_t COMKERNALLib::IComPolyMesh::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1633)
inline void COMKERNALLib::IComPolyMesh::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComOpeningSlot wrapper method implementations
//

#pragma implementation_key(1634)
inline double COMKERNALLib::IComOpeningSlot::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1635)
inline void COMKERNALLib::IComOpeningSlot::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1636)
inline double COMKERNALLib::IComOpeningSlot::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1637)
inline void COMKERNALLib::IComOpeningSlot::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1638)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1639)
inline void COMKERNALLib::IComOpeningSlot::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1640)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetShowShape ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1641)
inline void COMKERNALLib::IComOpeningSlot::PutShowShape ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowShape(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1642)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetOutsideSlot ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutsideSlot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1643)
inline void COMKERNALLib::IComOpeningSlot::PutOutsideSlot ( _bstr_t pVal ) {
    HRESULT _hr = put_OutsideSlot(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1644)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetInsideSlot ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InsideSlot(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1645)
inline void COMKERNALLib::IComOpeningSlot::PutInsideSlot ( _bstr_t pVal ) {
    HRESULT _hr = put_InsideSlot(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1646)
inline double COMKERNALLib::IComOpeningSlot::GetWidth1 ( ) {
    double _result = 0;
    HRESULT _hr = get_Width1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1647)
inline void COMKERNALLib::IComOpeningSlot::PutWidth1 ( double pVal ) {
    HRESULT _hr = put_Width1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1648)
inline double COMKERNALLib::IComOpeningSlot::GetWidth2 ( ) {
    double _result = 0;
    HRESULT _hr = get_Width2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1649)
inline void COMKERNALLib::IComOpeningSlot::PutWidth2 ( double pVal ) {
    HRESULT _hr = put_Width2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1650)
inline double COMKERNALLib::IComOpeningSlot::GetA ( ) {
    double _result = 0;
    HRESULT _hr = get_A(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1651)
inline void COMKERNALLib::IComOpeningSlot::PutA ( double pVal ) {
    HRESULT _hr = put_A(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1652)
inline double COMKERNALLib::IComOpeningSlot::GetT ( ) {
    double _result = 0;
    HRESULT _hr = get_T(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1653)
inline void COMKERNALLib::IComOpeningSlot::PutT ( double pVal ) {
    HRESULT _hr = put_T(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1654)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Style(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1655)
inline void COMKERNALLib::IComOpeningSlot::PutStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_Style(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1656)
inline double COMKERNALLib::IComOpeningSlot::GetBoardWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BoardWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1657)
inline void COMKERNALLib::IComOpeningSlot::PutBoardWidth ( double pVal ) {
    HRESULT _hr = put_BoardWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1658)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetInsideBoard ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InsideBoard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1659)
inline void COMKERNALLib::IComOpeningSlot::PutInsideBoard ( _bstr_t pVal ) {
    HRESULT _hr = put_InsideBoard(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1660)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetOutsideBoard ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutsideBoard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1661)
inline void COMKERNALLib::IComOpeningSlot::PutOutsideBoard ( _bstr_t pVal ) {
    HRESULT _hr = put_OutsideBoard(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1662)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetInsideSill ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InsideSill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1663)
inline void COMKERNALLib::IComOpeningSlot::PutInsideSill ( _bstr_t pVal ) {
    HRESULT _hr = put_InsideSill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1664)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetOutsideSill ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_OutsideSill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1665)
inline void COMKERNALLib::IComOpeningSlot::PutOutsideSill ( _bstr_t pVal ) {
    HRESULT _hr = put_OutsideSill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1666)
inline double COMKERNALLib::IComOpeningSlot::GetA1 ( ) {
    double _result = 0;
    HRESULT _hr = get_A1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1667)
inline void COMKERNALLib::IComOpeningSlot::PutA1 ( double pVal ) {
    HRESULT _hr = put_A1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1668)
inline double COMKERNALLib::IComOpeningSlot::GetA2 ( ) {
    double _result = 0;
    HRESULT _hr = get_A2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1669)
inline void COMKERNALLib::IComOpeningSlot::PutA2 ( double pVal ) {
    HRESULT _hr = put_A2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1670)
inline double COMKERNALLib::IComOpeningSlot::GetH1 ( ) {
    double _result = 0;
    HRESULT _hr = get_H1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1671)
inline void COMKERNALLib::IComOpeningSlot::PutH1 ( double pVal ) {
    HRESULT _hr = put_H1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1672)
inline double COMKERNALLib::IComOpeningSlot::GetH2 ( ) {
    double _result = 0;
    HRESULT _hr = get_H2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1673)
inline void COMKERNALLib::IComOpeningSlot::PutH2 ( double pVal ) {
    HRESULT _hr = put_H2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1674)
inline double COMKERNALLib::IComOpeningSlot::GetW1 ( ) {
    double _result = 0;
    HRESULT _hr = get_W1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1675)
inline void COMKERNALLib::IComOpeningSlot::PutW1 ( double pVal ) {
    HRESULT _hr = put_W1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1676)
inline double COMKERNALLib::IComOpeningSlot::GetW2 ( ) {
    double _result = 0;
    HRESULT _hr = get_W2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1677)
inline void COMKERNALLib::IComOpeningSlot::PutW2 ( double pVal ) {
    HRESULT _hr = put_W2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1678)
inline ACAD_LAYER COMKERNALLib::IComOpeningSlot::GetLayerBoard ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_LayerBoard(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1679)
inline void COMKERNALLib::IComOpeningSlot::PutLayerBoard ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_LayerBoard(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1680)
inline ACAD_LAYER COMKERNALLib::IComOpeningSlot::GetLayerSill ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_LayerSill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1681)
inline void COMKERNALLib::IComOpeningSlot::PutLayerSill ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_LayerSill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1682)
inline _bstr_t COMKERNALLib::IComOpeningSlot::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1683)
inline void COMKERNALLib::IComOpeningSlot::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComDormer wrapper method implementations
//

#pragma implementation_key(1684)
inline double COMKERNALLib::IComDormer::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1685)
inline void COMKERNALLib::IComDormer::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1686)
inline double COMKERNALLib::IComDormer::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1687)
inline void COMKERNALLib::IComDormer::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1688)
inline double COMKERNALLib::IComDormer::GetWallWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_WallWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1689)
inline void COMKERNALLib::IComDormer::PutWallWidth ( double pVal ) {
    HRESULT _hr = put_WallWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1690)
inline double COMKERNALLib::IComDormer::GetWallHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_WallHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1691)
inline void COMKERNALLib::IComDormer::PutWallHeight ( double pVal ) {
    HRESULT _hr = put_WallHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1692)
inline double COMKERNALLib::IComDormer::GetWallThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_WallThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1693)
inline void COMKERNALLib::IComDormer::PutWallThickness ( double pVal ) {
    HRESULT _hr = put_WallThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1694)
inline double COMKERNALLib::IComDormer::GetWinWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_WinWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1695)
inline void COMKERNALLib::IComDormer::PutWinWidth ( double pVal ) {
    HRESULT _hr = put_WinWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1696)
inline double COMKERNALLib::IComDormer::GetWinHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_WinHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1697)
inline void COMKERNALLib::IComDormer::PutWinHeight ( double pVal ) {
    HRESULT _hr = put_WinHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1698)
inline double COMKERNALLib::IComDormer::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1699)
inline void COMKERNALLib::IComDormer::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1700)
inline double COMKERNALLib::IComDormer::GetExtendEaves ( ) {
    double _result = 0;
    HRESULT _hr = get_ExtendEaves(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1701)
inline void COMKERNALLib::IComDormer::PutExtendEaves ( double pVal ) {
    HRESULT _hr = put_ExtendEaves(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1702)
inline double COMKERNALLib::IComDormer::GetExtendHill ( ) {
    double _result = 0;
    HRESULT _hr = get_ExtendHill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1703)
inline void COMKERNALLib::IComDormer::PutExtendHill ( double pVal ) {
    HRESULT _hr = put_ExtendHill(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1704)
inline double COMKERNALLib::IComDormer::GetSlopeGrade ( ) {
    double _result = 0;
    HRESULT _hr = get_SlopeGrade(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1705)
inline void COMKERNALLib::IComDormer::PutSlopeGrade ( double pVal ) {
    HRESULT _hr = put_SlopeGrade(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1706)
inline double COMKERNALLib::IComDormer::GetSlopeHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_SlopeHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1707)
inline void COMKERNALLib::IComDormer::PutSlopeHeight ( double pVal ) {
    HRESULT _hr = put_SlopeHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1708)
inline _bstr_t COMKERNALLib::IComDormer::GetDormerType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DormerType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1709)
inline void COMKERNALLib::IComDormer::PutDormerType ( _bstr_t pVal ) {
    HRESULT _hr = put_DormerType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1710)
inline _bstr_t COMKERNALLib::IComDormer::GetShowWindow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowWindow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1711)
inline void COMKERNALLib::IComDormer::PutShowWindow ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowWindow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1712)
inline _bstr_t COMKERNALLib::IComDormer::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1713)
inline void COMKERNALLib::IComDormer::PutLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_Label(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1714)
inline double COMKERNALLib::IComDormer::GetTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1715)
inline void COMKERNALLib::IComDormer::PutTextHeight ( double pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1716)
inline _bstr_t COMKERNALLib::IComDormer::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1717)
inline void COMKERNALLib::IComDormer::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1718)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetRoofLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RoofLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1719)
inline void COMKERNALLib::IComDormer::PutRoofLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RoofLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1720)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetCeilingLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_CeilingLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1721)
inline void COMKERNALLib::IComDormer::PutCeilingLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_CeilingLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1722)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetSlabLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_SlabLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1723)
inline void COMKERNALLib::IComDormer::PutSlabLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_SlabLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1724)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetWallLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_WallLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1725)
inline void COMKERNALLib::IComDormer::PutWallLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_WallLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1726)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetFrameLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_FrameLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1727)
inline void COMKERNALLib::IComDormer::PutFrameLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_FrameLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1728)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetGlassLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_GlassLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1729)
inline void COMKERNALLib::IComDormer::PutGlassLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_GlassLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1730)
inline ACAD_LAYER COMKERNALLib::IComDormer::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1731)
inline void COMKERNALLib::IComDormer::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1732)
inline _bstr_t COMKERNALLib::IComDormer::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1733)
inline void COMKERNALLib::IComDormer::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComNetShelf wrapper method implementations
//

#pragma implementation_key(1734)
inline ACAD_LAYER COMKERNALLib::IComNetShelf::GetSphereLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_SphereLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1735)
inline void COMKERNALLib::IComNetShelf::PutSphereLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_SphereLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1736)
inline _bstr_t COMKERNALLib::IComNetShelf::GetMonoSphere ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_MonoSphere(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1737)
inline void COMKERNALLib::IComNetShelf::PutMonoSphere ( _bstr_t pVal ) {
    HRESULT _hr = put_MonoSphere(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1738)
inline double COMKERNALLib::IComNetShelf::GetSphereRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_SphereRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1739)
inline void COMKERNALLib::IComNetShelf::PutSphereRadius ( double pVal ) {
    HRESULT _hr = put_SphereRadius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1740)
inline double COMKERNALLib::IComNetShelf::GetPoleRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_PoleRadius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1741)
inline void COMKERNALLib::IComNetShelf::PutPoleRadius ( double pVal ) {
    HRESULT _hr = put_PoleRadius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1742)
inline double COMKERNALLib::IComNetShelf::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1743)
inline void COMKERNALLib::IComNetShelf::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1744)
inline double COMKERNALLib::IComNetShelf::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1745)
inline void COMKERNALLib::IComNetShelf::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1746)
inline _bstr_t COMKERNALLib::IComNetShelf::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1747)
inline void COMKERNALLib::IComNetShelf::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComMultiViewInsert wrapper method implementations
//

#pragma implementation_key(1748)
inline double COMKERNALLib::IComMultiViewInsert::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1749)
inline void COMKERNALLib::IComMultiViewInsert::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1750)
inline double COMKERNALLib::IComMultiViewInsert::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1751)
inline void COMKERNALLib::IComMultiViewInsert::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1752)
inline double COMKERNALLib::IComMultiViewInsert::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1753)
inline void COMKERNALLib::IComMultiViewInsert::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1754)
inline double COMKERNALLib::IComMultiViewInsert::GetScaleX ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleX(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1755)
inline void COMKERNALLib::IComMultiViewInsert::PutScaleX ( double pVal ) {
    HRESULT _hr = put_ScaleX(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1756)
inline double COMKERNALLib::IComMultiViewInsert::GetScaleY ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleY(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1757)
inline void COMKERNALLib::IComMultiViewInsert::PutScaleY ( double pVal ) {
    HRESULT _hr = put_ScaleY(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1758)
inline double COMKERNALLib::IComMultiViewInsert::GetScaleZ ( ) {
    double _result = 0;
    HRESULT _hr = get_ScaleZ(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1759)
inline void COMKERNALLib::IComMultiViewInsert::PutScaleZ ( double pVal ) {
    HRESULT _hr = put_ScaleZ(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1760)
inline _bstr_t COMKERNALLib::IComMultiViewInsert::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1761)
inline void COMKERNALLib::IComMultiViewInsert::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComPromptMark wrapper method implementations
//

#pragma implementation_key(1762)
inline double COMKERNALLib::IComPromptMark::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1763)
inline void COMKERNALLib::IComPromptMark::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1764)
inline double COMKERNALLib::IComPromptMark::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1765)
inline void COMKERNALLib::IComPromptMark::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1766)
inline double COMKERNALLib::IComPromptMark::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1767)
inline void COMKERNALLib::IComPromptMark::PutLength ( double pVal ) {
    HRESULT _hr = put_Length(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1768)
inline double COMKERNALLib::IComPromptMark::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1769)
inline void COMKERNALLib::IComPromptMark::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1770)
inline double COMKERNALLib::IComPromptMark::GetRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1771)
inline void COMKERNALLib::IComPromptMark::PutRotation ( double pVal ) {
    HRESULT _hr = put_Rotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1772)
inline _bstr_t COMKERNALLib::IComPromptMark::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1773)
inline void COMKERNALLib::IComPromptMark::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1774)
inline _bstr_t COMKERNALLib::IComPromptMark::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1775)
inline void COMKERNALLib::IComPromptMark::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1776)
inline _bstr_t COMKERNALLib::IComPromptMark::GetShape ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Shape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1777)
inline void COMKERNALLib::IComPromptMark::PutShape ( _bstr_t pVal ) {
    HRESULT _hr = put_Shape(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComDrawingName wrapper method implementations
//

#pragma implementation_key(1778)
inline _bstr_t COMKERNALLib::IComDrawingName::GetNameText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1779)
inline void COMKERNALLib::IComDrawingName::PutNameText ( _bstr_t pVal ) {
    HRESULT _hr = put_NameText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1780)
inline _bstr_t COMKERNALLib::IComDrawingName::GetNameStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1781)
inline void COMKERNALLib::IComDrawingName::PutNameStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_NameStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1782)
inline _bstr_t COMKERNALLib::IComDrawingName::GetNameHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NameHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1783)
inline void COMKERNALLib::IComDrawingName::PutNameHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_NameHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1784)
inline _bstr_t COMKERNALLib::IComDrawingName::GetScaleText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1785)
inline void COMKERNALLib::IComDrawingName::PutScaleText ( _bstr_t pVal ) {
    HRESULT _hr = put_ScaleText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1786)
inline _bstr_t COMKERNALLib::IComDrawingName::GetScaleStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1787)
inline void COMKERNALLib::IComDrawingName::PutScaleStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_ScaleStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1788)
inline _bstr_t COMKERNALLib::IComDrawingName::GetScaleHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ScaleHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1789)
inline void COMKERNALLib::IComDrawingName::PutScaleHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_ScaleHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1790)
inline _bstr_t COMKERNALLib::IComDrawingName::GetSpaceCoef ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SpaceCoef(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1791)
inline void COMKERNALLib::IComDrawingName::PutSpaceCoef ( _bstr_t pVal ) {
    HRESULT _hr = put_SpaceCoef(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1792)
inline _bstr_t COMKERNALLib::IComDrawingName::GetDimStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DimStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1793)
inline void COMKERNALLib::IComDrawingName::PutDimStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_DimStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1794)
inline ACAD_COLOR COMKERNALLib::IComDrawingName::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1795)
inline void COMKERNALLib::IComDrawingName::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1796)
inline _bstr_t COMKERNALLib::IComDrawingName::GetShowScale ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowScale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1797)
inline void COMKERNALLib::IComDrawingName::PutShowScale ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowScale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1798)
inline double COMKERNALLib::IComDrawingName::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1799)
inline void COMKERNALLib::IComDrawingName::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1800)
inline double COMKERNALLib::IComDrawingName::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1801)
inline void COMKERNALLib::IComDrawingName::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCurveMesh2 wrapper method implementations
//

#pragma implementation_key(1802)
inline double COMKERNALLib::IComCurveMesh2::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1803)
inline void COMKERNALLib::IComCurveMesh2::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1804)
inline double COMKERNALLib::IComCurveMesh2::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1805)
inline void COMKERNALLib::IComCurveMesh2::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1806)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1807)
inline void COMKERNALLib::IComCurveMesh2::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1808)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetPathLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1809)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetSideArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1810)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetShapePerimeter ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShapePerimeter(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1811)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1812)
inline _variant_t COMKERNALLib::IComCurveMesh2::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1813)
inline void COMKERNALLib::IComCurveMesh2::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1814)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetShapeVisibility ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShapeVisibility(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1815)
inline void COMKERNALLib::IComCurveMesh2::PutShapeVisibility ( _bstr_t pVal ) {
    HRESULT _hr = put_ShapeVisibility(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1816)
inline _bstr_t COMKERNALLib::IComCurveMesh2::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1817)
inline void COMKERNALLib::IComCurveMesh2::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComPolyMesh2 wrapper method implementations
//

#pragma implementation_key(1818)
inline double COMKERNALLib::IComPolyMesh2::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1819)
inline void COMKERNALLib::IComPolyMesh2::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1820)
inline double COMKERNALLib::IComPolyMesh2::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1821)
inline void COMKERNALLib::IComPolyMesh2::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1822)
inline _bstr_t COMKERNALLib::IComPolyMesh2::GetViewType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ViewType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1823)
inline void COMKERNALLib::IComPolyMesh2::PutViewType ( _bstr_t pVal ) {
    HRESULT _hr = put_ViewType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1824)
inline _bstr_t COMKERNALLib::IComPolyMesh2::GetPathLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1825)
inline _bstr_t COMKERNALLib::IComPolyMesh2::GetSideArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1826)
inline int COMKERNALLib::IComPolyMesh2::GetSectionNum ( ) {
    int _result = 0;
    HRESULT _hr = get_SectionNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1827)
inline _bstr_t COMKERNALLib::IComPolyMesh2::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1828)
inline _variant_t COMKERNALLib::IComPolyMesh2::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1829)
inline void COMKERNALLib::IComPolyMesh2::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1830)
inline _variant_t COMKERNALLib::IComPolyMesh2::GetSection ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Section(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1831)
inline void COMKERNALLib::IComPolyMesh2::PutSection ( const _variant_t & pVal ) {
    HRESULT _hr = put_Section(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1832)
inline _bstr_t COMKERNALLib::IComPolyMesh2::GetShapeVisibility ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShapeVisibility(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1833)
inline void COMKERNALLib::IComPolyMesh2::PutShapeVisibility ( _bstr_t pVal ) {
    HRESULT _hr = put_ShapeVisibility(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1834)
inline _bstr_t COMKERNALLib::IComPolyMesh2::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1835)
inline void COMKERNALLib::IComPolyMesh2::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCuspRoof wrapper method implementations
//

#pragma implementation_key(1836)
inline double COMKERNALLib::IComCuspRoof::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1837)
inline void COMKERNALLib::IComCuspRoof::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1838)
inline double COMKERNALLib::IComCuspRoof::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1839)
inline void COMKERNALLib::IComCuspRoof::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1840)
inline _bstr_t COMKERNALLib::IComCuspRoof::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1841)
inline void COMKERNALLib::IComCuspRoof::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1842)
inline double COMKERNALLib::IComCuspRoof::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1843)
inline void COMKERNALLib::IComCuspRoof::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1844)
inline int COMKERNALLib::IComCuspRoof::GetSideNum ( ) {
    int _result = 0;
    HRESULT _hr = get_SideNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1845)
inline void COMKERNALLib::IComCuspRoof::PutSideNum ( int pVal ) {
    HRESULT _hr = put_SideNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1846)
inline double COMKERNALLib::IComCuspRoof::GetHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1847)
inline void COMKERNALLib::IComCuspRoof::PutHeight ( double pVal ) {
    HRESULT _hr = put_Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1848)
inline double COMKERNALLib::IComCuspRoof::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1849)
inline void COMKERNALLib::IComCuspRoof::PutRadius ( double pVal ) {
    HRESULT _hr = put_Radius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1850)
inline double COMKERNALLib::IComCuspRoof::GetRotate ( ) {
    double _result = 0;
    HRESULT _hr = get_Rotate(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1851)
inline void COMKERNALLib::IComCuspRoof::PutRotate ( double pVal ) {
    HRESULT _hr = put_Rotate(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1852)
inline double COMKERNALLib::IComCuspRoof::GetEavesLen ( ) {
    double _result = 0;
    HRESULT _hr = get_EavesLen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1853)
inline void COMKERNALLib::IComCuspRoof::PutEavesLen ( double pVal ) {
    HRESULT _hr = put_EavesLen(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1854)
inline double COMKERNALLib::IComCuspRoof::GetSlabThick ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1855)
inline void COMKERNALLib::IComCuspRoof::PutSlabThick ( double pVal ) {
    HRESULT _hr = put_SlabThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComDualSlopeRoof wrapper method implementations
//

#pragma implementation_key(1856)
inline double COMKERNALLib::IComDualSlopeRoof::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1857)
inline void COMKERNALLib::IComDualSlopeRoof::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1858)
inline double COMKERNALLib::IComDualSlopeRoof::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1859)
inline void COMKERNALLib::IComDualSlopeRoof::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1860)
inline _bstr_t COMKERNALLib::IComDualSlopeRoof::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1861)
inline void COMKERNALLib::IComDualSlopeRoof::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1862)
inline double COMKERNALLib::IComDualSlopeRoof::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1863)
inline void COMKERNALLib::IComDualSlopeRoof::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1864)
inline double COMKERNALLib::IComDualSlopeRoof::GetLeftSlopeAng ( ) {
    double _result = 0;
    HRESULT _hr = get_LeftSlopeAng(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1865)
inline void COMKERNALLib::IComDualSlopeRoof::PutLeftSlopeAng ( double pVal ) {
    HRESULT _hr = put_LeftSlopeAng(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1866)
inline double COMKERNALLib::IComDualSlopeRoof::GetRightSlopeAng ( ) {
    double _result = 0;
    HRESULT _hr = get_RightSlopeAng(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1867)
inline void COMKERNALLib::IComDualSlopeRoof::PutRightSlopeAng ( double pVal ) {
    HRESULT _hr = put_RightSlopeAng(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1868)
inline double COMKERNALLib::IComDualSlopeRoof::GetSlabThick ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1869)
inline void COMKERNALLib::IComDualSlopeRoof::PutSlabThick ( double pVal ) {
    HRESULT _hr = put_SlabThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1870)
inline double COMKERNALLib::IComDualSlopeRoof::GetRoofHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RoofHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1871)
inline void COMKERNALLib::IComDualSlopeRoof::PutRoofHeight ( double pVal ) {
    HRESULT _hr = put_RoofHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbCut wrapper method implementations
//

#pragma implementation_key(1872)
inline double COMKERNALLib::IComSymbCut::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1873)
inline void COMKERNALLib::IComSymbCut::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1874)
inline double COMKERNALLib::IComSymbCut::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1875)
inline void COMKERNALLib::IComSymbCut::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1876)
inline _bstr_t COMKERNALLib::IComSymbCut::GetCutType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CutType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1877)
inline void COMKERNALLib::IComSymbCut::PutCutType ( _bstr_t pVal ) {
    HRESULT _hr = put_CutType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1878)
inline _bstr_t COMKERNALLib::IComSymbCut::GetIsHide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsHide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1879)
inline void COMKERNALLib::IComSymbCut::PutIsHide ( _bstr_t pVal ) {
    HRESULT _hr = put_IsHide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComPolyPathArray wrapper method implementations
//

#pragma implementation_key(1880)
inline double COMKERNALLib::IComPolyPathArray::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1881)
inline void COMKERNALLib::IComPolyPathArray::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1882)
inline double COMKERNALLib::IComPolyPathArray::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1883)
inline void COMKERNALLib::IComPolyPathArray::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1884)
inline _bstr_t COMKERNALLib::IComPolyPathArray::GetCellAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CellAlign(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1885)
inline void COMKERNALLib::IComPolyPathArray::PutCellAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_CellAlign(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1886)
inline _bstr_t COMKERNALLib::IComPolyPathArray::GetBasePos ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BasePos(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1887)
inline void COMKERNALLib::IComPolyPathArray::PutBasePos ( _bstr_t pVal ) {
    HRESULT _hr = put_BasePos(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1888)
inline double COMKERNALLib::IComPolyPathArray::GetPicWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_PicWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1889)
inline void COMKERNALLib::IComPolyPathArray::PutPicWidth ( double pVal ) {
    HRESULT _hr = put_PicWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1890)
inline _bstr_t COMKERNALLib::IComPolyPathArray::GetPicRatio ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PicRatio(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1891)
inline void COMKERNALLib::IComPolyPathArray::PutPicRatio ( _bstr_t pVal ) {
    HRESULT _hr = put_PicRatio(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCrossStair wrapper method implementations
//

#pragma implementation_key(1892)
inline double COMKERNALLib::IComCrossStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1893)
inline void COMKERNALLib::IComCrossStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1894)
inline double COMKERNALLib::IComCrossStair::GetSpaceWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SpaceWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1895)
inline void COMKERNALLib::IComCrossStair::PutSpaceWidth ( double pVal ) {
    HRESULT _hr = put_SpaceWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1896)
inline double COMKERNALLib::IComCrossStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1897)
inline void COMKERNALLib::IComCrossStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1898)
inline double COMKERNALLib::IComCrossStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1899)
inline void COMKERNALLib::IComCrossStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1900)
inline double COMKERNALLib::IComCrossStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1901)
inline void COMKERNALLib::IComCrossStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1902)
inline short COMKERNALLib::IComCrossStair::GetStepSumNum ( ) {
    short _result = 0;
    HRESULT _hr = get_StepSumNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1903)
inline void COMKERNALLib::IComCrossStair::PutStepSumNum ( short pVal ) {
    HRESULT _hr = put_StepSumNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1904)
inline double COMKERNALLib::IComCrossStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1905)
inline void COMKERNALLib::IComCrossStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1906)
inline double COMKERNALLib::IComCrossStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1907)
inline void COMKERNALLib::IComCrossStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1908)
inline _bstr_t COMKERNALLib::IComCrossStair::GetRailInside ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailInside(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1909)
inline void COMKERNALLib::IComCrossStair::PutRailInside ( _bstr_t pVal ) {
    HRESULT _hr = put_RailInside(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1910)
inline _bstr_t COMKERNALLib::IComCrossStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1911)
inline void COMKERNALLib::IComCrossStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1912)
inline double COMKERNALLib::IComCrossStair::GetRailOutDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RailOutDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1913)
inline void COMKERNALLib::IComCrossStair::PutRailOutDist ( double pVal ) {
    HRESULT _hr = put_RailOutDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1914)
inline _bstr_t COMKERNALLib::IComCrossStair::GetRailOutSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailOutSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1915)
inline void COMKERNALLib::IComCrossStair::PutRailOutSide ( _bstr_t pVal ) {
    HRESULT _hr = put_RailOutSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1916)
inline _bstr_t COMKERNALLib::IComCrossStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1917)
inline void COMKERNALLib::IComCrossStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1918)
inline _bstr_t COMKERNALLib::IComCrossStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1919)
inline void COMKERNALLib::IComCrossStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1920)
inline _bstr_t COMKERNALLib::IComCrossStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1921)
inline void COMKERNALLib::IComCrossStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1922)
inline double COMKERNALLib::IComCrossStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1923)
inline void COMKERNALLib::IComCrossStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1924)
inline double COMKERNALLib::IComCrossStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1925)
inline void COMKERNALLib::IComCrossStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1926)
inline ACAD_LAYER COMKERNALLib::IComCrossStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1927)
inline void COMKERNALLib::IComCrossStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1928)
inline ACAD_LAYER COMKERNALLib::IComCrossStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1929)
inline void COMKERNALLib::IComCrossStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1930)
inline ACAD_LAYER COMKERNALLib::IComCrossStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1931)
inline void COMKERNALLib::IComCrossStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1932)
inline ACAD_LAYER COMKERNALLib::IComCrossStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1933)
inline void COMKERNALLib::IComCrossStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1934)
inline double COMKERNALLib::IComCrossStair::GetSlabLength1 ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabLength1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1935)
inline void COMKERNALLib::IComCrossStair::PutSlabLength1 ( double pVal ) {
    HRESULT _hr = put_SlabLength1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1936)
inline double COMKERNALLib::IComCrossStair::GetSlabLength2 ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabLength2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1937)
inline void COMKERNALLib::IComCrossStair::PutSlabLength2 ( double pVal ) {
    HRESULT _hr = put_SlabLength2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1938)
inline double COMKERNALLib::IComCrossStair::GetSlabLength3 ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabLength3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1939)
inline void COMKERNALLib::IComCrossStair::PutSlabLength3 ( double pVal ) {
    HRESULT _hr = put_SlabLength3(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1940)
inline double COMKERNALLib::IComCrossStair::GetBoardThick ( ) {
    double _result = 0;
    HRESULT _hr = get_BoardThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1941)
inline void COMKERNALLib::IComCrossStair::PutBoardThick ( double pVal ) {
    HRESULT _hr = put_BoardThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1942)
inline _bstr_t COMKERNALLib::IComCrossStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1943)
inline void COMKERNALLib::IComCrossStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1944)
inline _bstr_t COMKERNALLib::IComCrossStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1945)
inline void COMKERNALLib::IComCrossStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1946)
inline short COMKERNALLib::IComCrossStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1947)
inline void COMKERNALLib::IComCrossStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1948)
inline _bstr_t COMKERNALLib::IComCrossStair::GetEvacuateDia ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EvacuateDia(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1949)
inline void COMKERNALLib::IComCrossStair::PutEvacuateDia ( _bstr_t pVal ) {
    HRESULT _hr = put_EvacuateDia(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1950)
inline _variant_t COMKERNALLib::IComCrossStair::GetEvacuateDiaColor ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_EvacuateDiaColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(1951)
inline void COMKERNALLib::IComCrossStair::PutEvacuateDiaColor ( const _variant_t & pVal ) {
    HRESULT _hr = put_EvacuateDiaColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1952)
inline short COMKERNALLib::IComCrossStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1953)
inline void COMKERNALLib::IComCrossStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1954)
inline double COMKERNALLib::IComCrossStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1955)
inline void COMKERNALLib::IComCrossStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1956)
inline ACAD_LAYER COMKERNALLib::IComCrossStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1957)
inline void COMKERNALLib::IComCrossStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1958)
inline ACAD_LAYER COMKERNALLib::IComCrossStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1959)
inline void COMKERNALLib::IComCrossStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1960)
inline double COMKERNALLib::IComCrossStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1961)
inline void COMKERNALLib::IComCrossStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1962)
inline _bstr_t COMKERNALLib::IComCrossStair::GetHasCeller ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasCeller(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1963)
inline void COMKERNALLib::IComCrossStair::PutHasCeller ( _bstr_t pVal ) {
    HRESULT _hr = put_HasCeller(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1964)
inline _bstr_t COMKERNALLib::IComCrossStair::GetDownDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_DownDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1965)
inline void COMKERNALLib::IComCrossStair::PutDownDir ( _bstr_t pVal ) {
    HRESULT _hr = put_DownDir(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1966)
inline _bstr_t COMKERNALLib::IComCrossStair::GetHasRoof ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRoof(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1967)
inline void COMKERNALLib::IComCrossStair::PutHasRoof ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRoof(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1968)
inline _bstr_t COMKERNALLib::IComCrossStair::GetUpDir ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_UpDir(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1969)
inline void COMKERNALLib::IComCrossStair::PutUpDir ( _bstr_t pVal ) {
    HRESULT _hr = put_UpDir(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1970)
inline _bstr_t COMKERNALLib::IComCrossStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1971)
inline void COMKERNALLib::IComCrossStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1972)
inline double COMKERNALLib::IComCrossStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1973)
inline void COMKERNALLib::IComCrossStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1974)
inline _bstr_t COMKERNALLib::IComCrossStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1975)
inline void COMKERNALLib::IComCrossStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1976)
inline _bstr_t COMKERNALLib::IComCrossStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1977)
inline void COMKERNALLib::IComCrossStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1978)
inline _bstr_t COMKERNALLib::IComCrossStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1979)
inline void COMKERNALLib::IComCrossStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1980)
inline _bstr_t COMKERNALLib::IComCrossStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1981)
inline void COMKERNALLib::IComCrossStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1982)
inline _bstr_t COMKERNALLib::IComCrossStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(1983)
inline void COMKERNALLib::IComCrossStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComParallelStair wrapper method implementations
//

#pragma implementation_key(1984)
inline double COMKERNALLib::IComParallelStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1985)
inline void COMKERNALLib::IComParallelStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1986)
inline double COMKERNALLib::IComParallelStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1987)
inline void COMKERNALLib::IComParallelStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1988)
inline short COMKERNALLib::IComParallelStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1989)
inline void COMKERNALLib::IComParallelStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1990)
inline double COMKERNALLib::IComParallelStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1991)
inline void COMKERNALLib::IComParallelStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1992)
inline double COMKERNALLib::IComParallelStair::GetSpaceWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SpaceWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1993)
inline void COMKERNALLib::IComParallelStair::PutSpaceWidth ( double pVal ) {
    HRESULT _hr = put_SpaceWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1994)
inline double COMKERNALLib::IComParallelStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1995)
inline void COMKERNALLib::IComParallelStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1996)
inline double COMKERNALLib::IComParallelStair::GetStairWidth2 ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1997)
inline void COMKERNALLib::IComParallelStair::PutStairWidth2 ( double pVal ) {
    HRESULT _hr = put_StairWidth2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(1998)
inline double COMKERNALLib::IComParallelStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(1999)
inline void COMKERNALLib::IComParallelStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2000)
inline short COMKERNALLib::IComParallelStair::GetStepTotalNum ( ) {
    short _result = 0;
    HRESULT _hr = get_StepTotalNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2001)
inline void COMKERNALLib::IComParallelStair::PutStepTotalNum ( short pVal ) {
    HRESULT _hr = put_StepTotalNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2002)
inline short COMKERNALLib::IComParallelStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2003)
inline void COMKERNALLib::IComParallelStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2004)
inline short COMKERNALLib::IComParallelStair::GetStepNum2 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2005)
inline void COMKERNALLib::IComParallelStair::PutStepNum2 ( short pVal ) {
    HRESULT _hr = put_StepNum2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2006)
inline double COMKERNALLib::IComParallelStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2007)
inline void COMKERNALLib::IComParallelStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2008)
inline double COMKERNALLib::IComParallelStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2009)
inline void COMKERNALLib::IComParallelStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2010)
inline double COMKERNALLib::IComParallelStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2011)
inline void COMKERNALLib::IComParallelStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2012)
inline double COMKERNALLib::IComParallelStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2013)
inline void COMKERNALLib::IComParallelStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2014)
inline _bstr_t COMKERNALLib::IComParallelStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2015)
inline void COMKERNALLib::IComParallelStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2016)
inline _bstr_t COMKERNALLib::IComParallelStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2017)
inline void COMKERNALLib::IComParallelStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2018)
inline _bstr_t COMKERNALLib::IComParallelStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2019)
inline void COMKERNALLib::IComParallelStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2020)
inline double COMKERNALLib::IComParallelStair::GetRotationDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2021)
inline void COMKERNALLib::IComParallelStair::PutRotationDist ( double pVal ) {
    HRESULT _hr = put_RotationDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2022)
inline double COMKERNALLib::IComParallelStair::GetLayerDist ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2023)
inline void COMKERNALLib::IComParallelStair::PutLayerDist ( double pVal ) {
    HRESULT _hr = put_LayerDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2024)
inline _bstr_t COMKERNALLib::IComParallelStair::GetPlatType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlatType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2025)
inline void COMKERNALLib::IComParallelStair::PutPlatType ( _bstr_t pVal ) {
    HRESULT _hr = put_PlatType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2026)
inline _bstr_t COMKERNALLib::IComParallelStair::GetHasSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2027)
inline void COMKERNALLib::IComParallelStair::PutHasSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2028)
inline double COMKERNALLib::IComParallelStair::GetSlabSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2029)
inline void COMKERNALLib::IComParallelStair::PutSlabSize ( double pVal ) {
    HRESULT _hr = put_SlabSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2030)
inline double COMKERNALLib::IComParallelStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2031)
inline void COMKERNALLib::IComParallelStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2032)
inline _bstr_t COMKERNALLib::IComParallelStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2033)
inline void COMKERNALLib::IComParallelStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2034)
inline _bstr_t COMKERNALLib::IComParallelStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2035)
inline void COMKERNALLib::IComParallelStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2036)
inline double COMKERNALLib::IComParallelStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2037)
inline void COMKERNALLib::IComParallelStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2038)
inline double COMKERNALLib::IComParallelStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2039)
inline void COMKERNALLib::IComParallelStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2040)
inline ACAD_LAYER COMKERNALLib::IComParallelStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2041)
inline void COMKERNALLib::IComParallelStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2042)
inline ACAD_LAYER COMKERNALLib::IComParallelStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2043)
inline void COMKERNALLib::IComParallelStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2044)
inline ACAD_LAYER COMKERNALLib::IComParallelStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2045)
inline void COMKERNALLib::IComParallelStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2046)
inline ACAD_LAYER COMKERNALLib::IComParallelStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2047)
inline void COMKERNALLib::IComParallelStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2048)
inline ACAD_LAYER COMKERNALLib::IComParallelStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2049)
inline void COMKERNALLib::IComParallelStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2050)
inline ACAD_LAYER COMKERNALLib::IComParallelStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2051)
inline void COMKERNALLib::IComParallelStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2052)
inline _bstr_t COMKERNALLib::IComParallelStair::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2053)
inline void COMKERNALLib::IComParallelStair::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2054)
inline _bstr_t COMKERNALLib::IComParallelStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2055)
inline void COMKERNALLib::IComParallelStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2056)
inline _bstr_t COMKERNALLib::IComParallelStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2057)
inline void COMKERNALLib::IComParallelStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2058)
inline short COMKERNALLib::IComParallelStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2059)
inline void COMKERNALLib::IComParallelStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2060)
inline _bstr_t COMKERNALLib::IComParallelStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2061)
inline void COMKERNALLib::IComParallelStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2062)
inline _bstr_t COMKERNALLib::IComParallelStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2063)
inline void COMKERNALLib::IComParallelStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2064)
inline _bstr_t COMKERNALLib::IComParallelStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2065)
inline void COMKERNALLib::IComParallelStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2066)
inline _bstr_t COMKERNALLib::IComParallelStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2067)
inline void COMKERNALLib::IComParallelStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2068)
inline _bstr_t COMKERNALLib::IComParallelStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2069)
inline void COMKERNALLib::IComParallelStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2070)
inline _bstr_t COMKERNALLib::IComParallelStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2071)
inline void COMKERNALLib::IComParallelStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComScissorsStair wrapper method implementations
//

#pragma implementation_key(2072)
inline double COMKERNALLib::IComScissorsStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2073)
inline void COMKERNALLib::IComScissorsStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2074)
inline double COMKERNALLib::IComScissorsStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2075)
inline void COMKERNALLib::IComScissorsStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2076)
inline short COMKERNALLib::IComScissorsStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2077)
inline void COMKERNALLib::IComScissorsStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2078)
inline double COMKERNALLib::IComScissorsStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2079)
inline void COMKERNALLib::IComScissorsStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2080)
inline double COMKERNALLib::IComScissorsStair::GetSpaceWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SpaceWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2081)
inline void COMKERNALLib::IComScissorsStair::PutSpaceWidth ( double pVal ) {
    HRESULT _hr = put_SpaceWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2082)
inline double COMKERNALLib::IComScissorsStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2083)
inline void COMKERNALLib::IComScissorsStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2084)
inline double COMKERNALLib::IComScissorsStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2085)
inline void COMKERNALLib::IComScissorsStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2086)
inline short COMKERNALLib::IComScissorsStair::GetStepTotalNum ( ) {
    short _result = 0;
    HRESULT _hr = get_StepTotalNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2087)
inline void COMKERNALLib::IComScissorsStair::PutStepTotalNum ( short pVal ) {
    HRESULT _hr = put_StepTotalNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2088)
inline short COMKERNALLib::IComScissorsStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2089)
inline void COMKERNALLib::IComScissorsStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2090)
inline short COMKERNALLib::IComScissorsStair::GetStepNum2 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2091)
inline void COMKERNALLib::IComScissorsStair::PutStepNum2 ( short pVal ) {
    HRESULT _hr = put_StepNum2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2092)
inline double COMKERNALLib::IComScissorsStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2093)
inline void COMKERNALLib::IComScissorsStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2094)
inline double COMKERNALLib::IComScissorsStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2095)
inline void COMKERNALLib::IComScissorsStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2096)
inline double COMKERNALLib::IComScissorsStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2097)
inline void COMKERNALLib::IComScissorsStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2098)
inline double COMKERNALLib::IComScissorsStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2099)
inline void COMKERNALLib::IComScissorsStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2100)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2101)
inline void COMKERNALLib::IComScissorsStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2102)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2103)
inline void COMKERNALLib::IComScissorsStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2104)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2105)
inline void COMKERNALLib::IComScissorsStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2106)
inline double COMKERNALLib::IComScissorsStair::GetRotationDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2107)
inline void COMKERNALLib::IComScissorsStair::PutRotationDist ( double pVal ) {
    HRESULT _hr = put_RotationDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2108)
inline double COMKERNALLib::IComScissorsStair::GetLayerDist ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2109)
inline void COMKERNALLib::IComScissorsStair::PutLayerDist ( double pVal ) {
    HRESULT _hr = put_LayerDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2110)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetHasSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2111)
inline void COMKERNALLib::IComScissorsStair::PutHasSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2112)
inline double COMKERNALLib::IComScissorsStair::GetSlabSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2113)
inline void COMKERNALLib::IComScissorsStair::PutSlabSize ( double pVal ) {
    HRESULT _hr = put_SlabSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2114)
inline double COMKERNALLib::IComScissorsStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2115)
inline void COMKERNALLib::IComScissorsStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2116)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2117)
inline void COMKERNALLib::IComScissorsStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2118)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2119)
inline void COMKERNALLib::IComScissorsStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2120)
inline double COMKERNALLib::IComScissorsStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2121)
inline void COMKERNALLib::IComScissorsStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2122)
inline double COMKERNALLib::IComScissorsStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2123)
inline void COMKERNALLib::IComScissorsStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2124)
inline ACAD_LAYER COMKERNALLib::IComScissorsStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2125)
inline void COMKERNALLib::IComScissorsStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2126)
inline ACAD_LAYER COMKERNALLib::IComScissorsStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2127)
inline void COMKERNALLib::IComScissorsStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2128)
inline ACAD_LAYER COMKERNALLib::IComScissorsStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2129)
inline void COMKERNALLib::IComScissorsStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2130)
inline ACAD_LAYER COMKERNALLib::IComScissorsStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2131)
inline void COMKERNALLib::IComScissorsStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2132)
inline ACAD_LAYER COMKERNALLib::IComScissorsStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2133)
inline void COMKERNALLib::IComScissorsStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2134)
inline ACAD_LAYER COMKERNALLib::IComScissorsStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2135)
inline void COMKERNALLib::IComScissorsStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2136)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetAlignment ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Alignment(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2137)
inline void COMKERNALLib::IComScissorsStair::PutAlignment ( _bstr_t pVal ) {
    HRESULT _hr = put_Alignment(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2138)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2139)
inline void COMKERNALLib::IComScissorsStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2140)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2141)
inline void COMKERNALLib::IComScissorsStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2142)
inline short COMKERNALLib::IComScissorsStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2143)
inline void COMKERNALLib::IComScissorsStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2144)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2145)
inline void COMKERNALLib::IComScissorsStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2146)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2147)
inline void COMKERNALLib::IComScissorsStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2148)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2149)
inline void COMKERNALLib::IComScissorsStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2150)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2151)
inline void COMKERNALLib::IComScissorsStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2152)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2153)
inline void COMKERNALLib::IComScissorsStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2154)
inline _bstr_t COMKERNALLib::IComScissorsStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2155)
inline void COMKERNALLib::IComScissorsStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComCornerStair wrapper method implementations
//

#pragma implementation_key(2156)
inline double COMKERNALLib::IComCornerStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2157)
inline void COMKERNALLib::IComCornerStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2158)
inline double COMKERNALLib::IComCornerStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2159)
inline void COMKERNALLib::IComCornerStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2160)
inline short COMKERNALLib::IComCornerStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2161)
inline void COMKERNALLib::IComCornerStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2162)
inline double COMKERNALLib::IComCornerStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2163)
inline void COMKERNALLib::IComCornerStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2164)
inline double COMKERNALLib::IComCornerStair::GetSideStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SideStairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2165)
inline void COMKERNALLib::IComCornerStair::PutSideStairWidth ( double pVal ) {
    HRESULT _hr = put_SideStairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2166)
inline double COMKERNALLib::IComCornerStair::GetMidStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MidStairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2167)
inline void COMKERNALLib::IComCornerStair::PutMidStairWidth ( double pVal ) {
    HRESULT _hr = put_MidStairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2168)
inline double COMKERNALLib::IComCornerStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2169)
inline void COMKERNALLib::IComCornerStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2170)
inline short COMKERNALLib::IComCornerStair::GetStepTotalNum ( ) {
    short _result = 0;
    HRESULT _hr = get_StepTotalNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2171)
inline void COMKERNALLib::IComCornerStair::PutStepTotalNum ( short pVal ) {
    HRESULT _hr = put_StepTotalNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2172)
inline short COMKERNALLib::IComCornerStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2173)
inline void COMKERNALLib::IComCornerStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2174)
inline short COMKERNALLib::IComCornerStair::GetStepNum2 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2175)
inline void COMKERNALLib::IComCornerStair::PutStepNum2 ( short pVal ) {
    HRESULT _hr = put_StepNum2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2176)
inline double COMKERNALLib::IComCornerStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2177)
inline void COMKERNALLib::IComCornerStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2178)
inline double COMKERNALLib::IComCornerStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2179)
inline void COMKERNALLib::IComCornerStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2180)
inline double COMKERNALLib::IComCornerStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2181)
inline void COMKERNALLib::IComCornerStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2182)
inline double COMKERNALLib::IComCornerStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2183)
inline void COMKERNALLib::IComCornerStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2184)
inline _bstr_t COMKERNALLib::IComCornerStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2185)
inline void COMKERNALLib::IComCornerStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2186)
inline _bstr_t COMKERNALLib::IComCornerStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2187)
inline void COMKERNALLib::IComCornerStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2188)
inline _bstr_t COMKERNALLib::IComCornerStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2189)
inline void COMKERNALLib::IComCornerStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2190)
inline _bstr_t COMKERNALLib::IComCornerStair::GetPlatType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PlatType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2191)
inline void COMKERNALLib::IComCornerStair::PutPlatType ( _bstr_t pVal ) {
    HRESULT _hr = put_PlatType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2192)
inline _bstr_t COMKERNALLib::IComCornerStair::GetHasSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2193)
inline void COMKERNALLib::IComCornerStair::PutHasSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2194)
inline double COMKERNALLib::IComCornerStair::GetSlabSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2195)
inline void COMKERNALLib::IComCornerStair::PutSlabSize ( double pVal ) {
    HRESULT _hr = put_SlabSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2196)
inline double COMKERNALLib::IComCornerStair::GetSlabLength ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2197)
inline void COMKERNALLib::IComCornerStair::PutSlabLength ( double pVal ) {
    HRESULT _hr = put_SlabLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2198)
inline double COMKERNALLib::IComCornerStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2199)
inline void COMKERNALLib::IComCornerStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2200)
inline double COMKERNALLib::IComCornerStair::GetRotationDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RotationDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2201)
inline void COMKERNALLib::IComCornerStair::PutRotationDist ( double pVal ) {
    HRESULT _hr = put_RotationDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2202)
inline double COMKERNALLib::IComCornerStair::GetLayerDist ( ) {
    double _result = 0;
    HRESULT _hr = get_LayerDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2203)
inline void COMKERNALLib::IComCornerStair::PutLayerDist ( double pVal ) {
    HRESULT _hr = put_LayerDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2204)
inline _bstr_t COMKERNALLib::IComCornerStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2205)
inline void COMKERNALLib::IComCornerStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2206)
inline _bstr_t COMKERNALLib::IComCornerStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2207)
inline void COMKERNALLib::IComCornerStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2208)
inline double COMKERNALLib::IComCornerStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2209)
inline void COMKERNALLib::IComCornerStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2210)
inline double COMKERNALLib::IComCornerStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2211)
inline void COMKERNALLib::IComCornerStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2212)
inline ACAD_LAYER COMKERNALLib::IComCornerStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2213)
inline void COMKERNALLib::IComCornerStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2214)
inline ACAD_LAYER COMKERNALLib::IComCornerStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2215)
inline void COMKERNALLib::IComCornerStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2216)
inline ACAD_LAYER COMKERNALLib::IComCornerStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2217)
inline void COMKERNALLib::IComCornerStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2218)
inline ACAD_LAYER COMKERNALLib::IComCornerStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2219)
inline void COMKERNALLib::IComCornerStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2220)
inline ACAD_LAYER COMKERNALLib::IComCornerStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2221)
inline void COMKERNALLib::IComCornerStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2222)
inline ACAD_LAYER COMKERNALLib::IComCornerStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2223)
inline void COMKERNALLib::IComCornerStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2224)
inline _bstr_t COMKERNALLib::IComCornerStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2225)
inline void COMKERNALLib::IComCornerStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2226)
inline _bstr_t COMKERNALLib::IComCornerStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2227)
inline void COMKERNALLib::IComCornerStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2228)
inline short COMKERNALLib::IComCornerStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2229)
inline void COMKERNALLib::IComCornerStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2230)
inline _bstr_t COMKERNALLib::IComCornerStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2231)
inline void COMKERNALLib::IComCornerStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2232)
inline _bstr_t COMKERNALLib::IComCornerStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2233)
inline void COMKERNALLib::IComCornerStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2234)
inline _bstr_t COMKERNALLib::IComCornerStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2235)
inline void COMKERNALLib::IComCornerStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2236)
inline _bstr_t COMKERNALLib::IComCornerStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2237)
inline void COMKERNALLib::IComCornerStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2238)
inline _bstr_t COMKERNALLib::IComCornerStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2239)
inline void COMKERNALLib::IComCornerStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2240)
inline _bstr_t COMKERNALLib::IComCornerStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2241)
inline void COMKERNALLib::IComCornerStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComDoubleMulStair wrapper method implementations
//

#pragma implementation_key(2242)
inline double COMKERNALLib::IComDoubleMulStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2243)
inline void COMKERNALLib::IComDoubleMulStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2244)
inline double COMKERNALLib::IComDoubleMulStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2245)
inline void COMKERNALLib::IComDoubleMulStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2246)
inline short COMKERNALLib::IComDoubleMulStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2247)
inline void COMKERNALLib::IComDoubleMulStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2248)
inline double COMKERNALLib::IComDoubleMulStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2249)
inline void COMKERNALLib::IComDoubleMulStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2250)
inline double COMKERNALLib::IComDoubleMulStair::GetSideStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SideStairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2251)
inline void COMKERNALLib::IComDoubleMulStair::PutSideStairWidth ( double pVal ) {
    HRESULT _hr = put_SideStairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2252)
inline double COMKERNALLib::IComDoubleMulStair::GetMidStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MidStairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2253)
inline void COMKERNALLib::IComDoubleMulStair::PutMidStairWidth ( double pVal ) {
    HRESULT _hr = put_MidStairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2254)
inline double COMKERNALLib::IComDoubleMulStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2255)
inline void COMKERNALLib::IComDoubleMulStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2256)
inline short COMKERNALLib::IComDoubleMulStair::GetStepTotalNum ( ) {
    short _result = 0;
    HRESULT _hr = get_StepTotalNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2257)
inline void COMKERNALLib::IComDoubleMulStair::PutStepTotalNum ( short pVal ) {
    HRESULT _hr = put_StepTotalNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2258)
inline short COMKERNALLib::IComDoubleMulStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2259)
inline void COMKERNALLib::IComDoubleMulStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2260)
inline short COMKERNALLib::IComDoubleMulStair::GetStepNum2 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2261)
inline void COMKERNALLib::IComDoubleMulStair::PutStepNum2 ( short pVal ) {
    HRESULT _hr = put_StepNum2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2262)
inline short COMKERNALLib::IComDoubleMulStair::GetStepNum3 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2263)
inline void COMKERNALLib::IComDoubleMulStair::PutStepNum3 ( short pVal ) {
    HRESULT _hr = put_StepNum3(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2264)
inline double COMKERNALLib::IComDoubleMulStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2265)
inline void COMKERNALLib::IComDoubleMulStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2266)
inline double COMKERNALLib::IComDoubleMulStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2267)
inline void COMKERNALLib::IComDoubleMulStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2268)
inline double COMKERNALLib::IComDoubleMulStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2269)
inline void COMKERNALLib::IComDoubleMulStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2270)
inline double COMKERNALLib::IComDoubleMulStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2271)
inline void COMKERNALLib::IComDoubleMulStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2272)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2273)
inline void COMKERNALLib::IComDoubleMulStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2274)
inline double COMKERNALLib::IComDoubleMulStair::GetRailOutDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RailOutDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2275)
inline void COMKERNALLib::IComDoubleMulStair::PutRailOutDist ( double pVal ) {
    HRESULT _hr = put_RailOutDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2276)
inline double COMKERNALLib::IComDoubleMulStair::GetRailOutDistSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailOutDistSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2277)
inline void COMKERNALLib::IComDoubleMulStair::PutRailOutDistSide ( double pVal ) {
    HRESULT _hr = put_RailOutDistSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2278)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2279)
inline void COMKERNALLib::IComDoubleMulStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2280)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2281)
inline void COMKERNALLib::IComDoubleMulStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2282)
inline double COMKERNALLib::IComDoubleMulStair::GetSidePlatLength ( ) {
    double _result = 0;
    HRESULT _hr = get_SidePlatLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2283)
inline void COMKERNALLib::IComDoubleMulStair::PutSidePlatLength ( double pVal ) {
    HRESULT _hr = put_SidePlatLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2284)
inline double COMKERNALLib::IComDoubleMulStair::GetSidePlatWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SidePlatWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2285)
inline void COMKERNALLib::IComDoubleMulStair::PutSidePlatWidth ( double pVal ) {
    HRESULT _hr = put_SidePlatWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2286)
inline double COMKERNALLib::IComDoubleMulStair::GetMidPlatLength ( ) {
    double _result = 0;
    HRESULT _hr = get_MidPlatLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2287)
inline void COMKERNALLib::IComDoubleMulStair::PutMidPlatLength ( double pVal ) {
    HRESULT _hr = put_MidPlatLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2288)
inline double COMKERNALLib::IComDoubleMulStair::GetMidPlatWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_MidPlatWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2289)
inline void COMKERNALLib::IComDoubleMulStair::PutMidPlatWidth ( double pVal ) {
    HRESULT _hr = put_MidPlatWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2290)
inline double COMKERNALLib::IComDoubleMulStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2291)
inline void COMKERNALLib::IComDoubleMulStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2292)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2293)
inline void COMKERNALLib::IComDoubleMulStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2294)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2295)
inline void COMKERNALLib::IComDoubleMulStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2296)
inline double COMKERNALLib::IComDoubleMulStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2297)
inline void COMKERNALLib::IComDoubleMulStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2298)
inline double COMKERNALLib::IComDoubleMulStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2299)
inline void COMKERNALLib::IComDoubleMulStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2300)
inline ACAD_LAYER COMKERNALLib::IComDoubleMulStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2301)
inline void COMKERNALLib::IComDoubleMulStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2302)
inline ACAD_LAYER COMKERNALLib::IComDoubleMulStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2303)
inline void COMKERNALLib::IComDoubleMulStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2304)
inline ACAD_LAYER COMKERNALLib::IComDoubleMulStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2305)
inline void COMKERNALLib::IComDoubleMulStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2306)
inline ACAD_LAYER COMKERNALLib::IComDoubleMulStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2307)
inline void COMKERNALLib::IComDoubleMulStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2308)
inline ACAD_LAYER COMKERNALLib::IComDoubleMulStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2309)
inline void COMKERNALLib::IComDoubleMulStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2310)
inline ACAD_LAYER COMKERNALLib::IComDoubleMulStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2311)
inline void COMKERNALLib::IComDoubleMulStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2312)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2313)
inline void COMKERNALLib::IComDoubleMulStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2314)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2315)
inline void COMKERNALLib::IComDoubleMulStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2316)
inline short COMKERNALLib::IComDoubleMulStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2317)
inline void COMKERNALLib::IComDoubleMulStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2318)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2319)
inline void COMKERNALLib::IComDoubleMulStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2320)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2321)
inline void COMKERNALLib::IComDoubleMulStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2322)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2323)
inline void COMKERNALLib::IComDoubleMulStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2324)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2325)
inline void COMKERNALLib::IComDoubleMulStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2326)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2327)
inline void COMKERNALLib::IComDoubleMulStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2328)
inline _bstr_t COMKERNALLib::IComDoubleMulStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2329)
inline void COMKERNALLib::IComDoubleMulStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComTriangleStair wrapper method implementations
//

#pragma implementation_key(2330)
inline double COMKERNALLib::IComTriangleStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2331)
inline void COMKERNALLib::IComTriangleStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2332)
inline double COMKERNALLib::IComTriangleStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2333)
inline void COMKERNALLib::IComTriangleStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2334)
inline short COMKERNALLib::IComTriangleStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2335)
inline void COMKERNALLib::IComTriangleStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2336)
inline double COMKERNALLib::IComTriangleStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2337)
inline void COMKERNALLib::IComTriangleStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2338)
inline double COMKERNALLib::IComTriangleStair::GetSpaceWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SpaceWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2339)
inline void COMKERNALLib::IComTriangleStair::PutSpaceWidth ( double pVal ) {
    HRESULT _hr = put_SpaceWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2340)
inline double COMKERNALLib::IComTriangleStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2341)
inline void COMKERNALLib::IComTriangleStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2342)
inline double COMKERNALLib::IComTriangleStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2343)
inline void COMKERNALLib::IComTriangleStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2344)
inline short COMKERNALLib::IComTriangleStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2345)
inline void COMKERNALLib::IComTriangleStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2346)
inline double COMKERNALLib::IComTriangleStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2347)
inline void COMKERNALLib::IComTriangleStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2348)
inline double COMKERNALLib::IComTriangleStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2349)
inline void COMKERNALLib::IComTriangleStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2350)
inline double COMKERNALLib::IComTriangleStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2351)
inline void COMKERNALLib::IComTriangleStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2352)
inline double COMKERNALLib::IComTriangleStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2353)
inline void COMKERNALLib::IComTriangleStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2354)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetHasRailConnect ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRailConnect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2355)
inline void COMKERNALLib::IComTriangleStair::PutHasRailConnect ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRailConnect(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2356)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetRailIsOpen ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailIsOpen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2357)
inline void COMKERNALLib::IComTriangleStair::PutRailIsOpen ( _bstr_t pVal ) {
    HRESULT _hr = put_RailIsOpen(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2358)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2359)
inline void COMKERNALLib::IComTriangleStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2360)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2361)
inline void COMKERNALLib::IComTriangleStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2362)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2363)
inline void COMKERNALLib::IComTriangleStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2364)
inline double COMKERNALLib::IComTriangleStair::GetRailOutDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RailOutDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2365)
inline void COMKERNALLib::IComTriangleStair::PutRailOutDist ( double pVal ) {
    HRESULT _hr = put_RailOutDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2366)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetHasSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2367)
inline void COMKERNALLib::IComTriangleStair::PutHasSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2368)
inline double COMKERNALLib::IComTriangleStair::GetSlabSize ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSize(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2369)
inline void COMKERNALLib::IComTriangleStair::PutSlabSize ( double pVal ) {
    HRESULT _hr = put_SlabSize(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2370)
inline double COMKERNALLib::IComTriangleStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2371)
inline void COMKERNALLib::IComTriangleStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2372)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2373)
inline void COMKERNALLib::IComTriangleStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2374)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2375)
inline void COMKERNALLib::IComTriangleStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2376)
inline double COMKERNALLib::IComTriangleStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2377)
inline void COMKERNALLib::IComTriangleStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2378)
inline double COMKERNALLib::IComTriangleStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2379)
inline void COMKERNALLib::IComTriangleStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2380)
inline ACAD_LAYER COMKERNALLib::IComTriangleStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2381)
inline void COMKERNALLib::IComTriangleStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2382)
inline ACAD_LAYER COMKERNALLib::IComTriangleStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2383)
inline void COMKERNALLib::IComTriangleStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2384)
inline ACAD_LAYER COMKERNALLib::IComTriangleStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2385)
inline void COMKERNALLib::IComTriangleStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2386)
inline ACAD_LAYER COMKERNALLib::IComTriangleStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2387)
inline void COMKERNALLib::IComTriangleStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2388)
inline ACAD_LAYER COMKERNALLib::IComTriangleStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2389)
inline void COMKERNALLib::IComTriangleStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2390)
inline ACAD_LAYER COMKERNALLib::IComTriangleStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2391)
inline void COMKERNALLib::IComTriangleStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2392)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2393)
inline void COMKERNALLib::IComTriangleStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2394)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2395)
inline void COMKERNALLib::IComTriangleStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2396)
inline short COMKERNALLib::IComTriangleStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2397)
inline void COMKERNALLib::IComTriangleStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2398)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2399)
inline void COMKERNALLib::IComTriangleStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2400)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2401)
inline void COMKERNALLib::IComTriangleStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2402)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2403)
inline void COMKERNALLib::IComTriangleStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2404)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2405)
inline void COMKERNALLib::IComTriangleStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2406)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2407)
inline void COMKERNALLib::IComTriangleStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2408)
inline _bstr_t COMKERNALLib::IComTriangleStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2409)
inline void COMKERNALLib::IComTriangleStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComRectCornerStair wrapper method implementations
//

#pragma implementation_key(2410)
inline double COMKERNALLib::IComRectCornerStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2411)
inline void COMKERNALLib::IComRectCornerStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2412)
inline double COMKERNALLib::IComRectCornerStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2413)
inline void COMKERNALLib::IComRectCornerStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2414)
inline short COMKERNALLib::IComRectCornerStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2415)
inline void COMKERNALLib::IComRectCornerStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2416)
inline double COMKERNALLib::IComRectCornerStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2417)
inline void COMKERNALLib::IComRectCornerStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2418)
inline double COMKERNALLib::IComRectCornerStair::GetStairWidthOne ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidthOne(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2419)
inline void COMKERNALLib::IComRectCornerStair::PutStairWidthOne ( double pVal ) {
    HRESULT _hr = put_StairWidthOne(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2420)
inline double COMKERNALLib::IComRectCornerStair::GetStairWidthTwo ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidthTwo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2421)
inline void COMKERNALLib::IComRectCornerStair::PutStairWidthTwo ( double pVal ) {
    HRESULT _hr = put_StairWidthTwo(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2422)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetIsSmmetry ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_IsSmmetry(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2423)
inline void COMKERNALLib::IComRectCornerStair::PutIsSmmetry ( _bstr_t pVal ) {
    HRESULT _hr = put_IsSmmetry(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2424)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetStairNum ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2425)
inline void COMKERNALLib::IComRectCornerStair::PutStairNum ( _bstr_t pVal ) {
    HRESULT _hr = put_StairNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2426)
inline double COMKERNALLib::IComRectCornerStair::GetStairWidthThree ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidthThree(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2427)
inline void COMKERNALLib::IComRectCornerStair::PutStairWidthThree ( double pVal ) {
    HRESULT _hr = put_StairWidthThree(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2428)
inline short COMKERNALLib::IComRectCornerStair::GetStepNum3 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum3(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2429)
inline void COMKERNALLib::IComRectCornerStair::PutStepNum3 ( short pVal ) {
    HRESULT _hr = put_StepNum3(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2430)
inline double COMKERNALLib::IComRectCornerStair::GetStairWidthFour ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidthFour(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2431)
inline void COMKERNALLib::IComRectCornerStair::PutStairWidthFour ( double pVal ) {
    HRESULT _hr = put_StairWidthFour(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2432)
inline short COMKERNALLib::IComRectCornerStair::GetStepNum4 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum4(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2433)
inline void COMKERNALLib::IComRectCornerStair::PutStepNum4 ( short pVal ) {
    HRESULT _hr = put_StepNum4(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2434)
inline double COMKERNALLib::IComRectCornerStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2435)
inline void COMKERNALLib::IComRectCornerStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2436)
inline short COMKERNALLib::IComRectCornerStair::GetStepNum1 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2437)
inline void COMKERNALLib::IComRectCornerStair::PutStepNum1 ( short pVal ) {
    HRESULT _hr = put_StepNum1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2438)
inline short COMKERNALLib::IComRectCornerStair::GetStepNum2 ( ) {
    short _result = 0;
    HRESULT _hr = get_StepNum2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2439)
inline void COMKERNALLib::IComRectCornerStair::PutStepNum2 ( short pVal ) {
    HRESULT _hr = put_StepNum2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2440)
inline double COMKERNALLib::IComRectCornerStair::GetStepHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StepHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2441)
inline void COMKERNALLib::IComRectCornerStair::PutStepHeight ( double pVal ) {
    HRESULT _hr = put_StepHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2442)
inline double COMKERNALLib::IComRectCornerStair::GetStepWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StepWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2443)
inline void COMKERNALLib::IComRectCornerStair::PutStepWidth ( double pVal ) {
    HRESULT _hr = put_StepWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2444)
inline double COMKERNALLib::IComRectCornerStair::GetRailWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_RailWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2445)
inline void COMKERNALLib::IComRectCornerStair::PutRailWidth ( double pVal ) {
    HRESULT _hr = put_RailWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2446)
inline double COMKERNALLib::IComRectCornerStair::GetRailDistToSide ( ) {
    double _result = 0;
    HRESULT _hr = get_RailDistToSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2447)
inline void COMKERNALLib::IComRectCornerStair::PutRailDistToSide ( double pVal ) {
    HRESULT _hr = put_RailDistToSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2448)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetHasRailConnect ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasRailConnect(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2449)
inline void COMKERNALLib::IComRectCornerStair::PutHasRailConnect ( _bstr_t pVal ) {
    HRESULT _hr = put_HasRailConnect(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2450)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetRailMake ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RailMake(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2451)
inline void COMKERNALLib::IComRectCornerStair::PutRailMake ( _bstr_t pVal ) {
    HRESULT _hr = put_RailMake(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2452)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetHasOutRail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutRail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2453)
inline void COMKERNALLib::IComRectCornerStair::PutHasOutRail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutRail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2454)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetHasOutsideHandrail ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasOutsideHandrail(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2455)
inline void COMKERNALLib::IComRectCornerStair::PutHasOutsideHandrail ( _bstr_t pVal ) {
    HRESULT _hr = put_HasOutsideHandrail(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2456)
inline double COMKERNALLib::IComRectCornerStair::GetRailOutDist ( ) {
    double _result = 0;
    HRESULT _hr = get_RailOutDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2457)
inline void COMKERNALLib::IComRectCornerStair::PutRailOutDist ( double pVal ) {
    HRESULT _hr = put_RailOutDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2458)
inline double COMKERNALLib::IComRectCornerStair::GetRailOutDistDown ( ) {
    double _result = 0;
    HRESULT _hr = get_RailOutDistDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2459)
inline void COMKERNALLib::IComRectCornerStair::PutRailOutDistDown ( double pVal ) {
    HRESULT _hr = put_RailOutDistDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2460)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetHasSlab ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasSlab(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2461)
inline void COMKERNALLib::IComRectCornerStair::PutHasSlab ( _bstr_t pVal ) {
    HRESULT _hr = put_HasSlab(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2462)
inline double COMKERNALLib::IComRectCornerStair::GetSlabWidthOne ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabWidthOne(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2463)
inline void COMKERNALLib::IComRectCornerStair::PutSlabWidthOne ( double pVal ) {
    HRESULT _hr = put_SlabWidthOne(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2464)
inline double COMKERNALLib::IComRectCornerStair::GetSlabSizeOne ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSizeOne(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2465)
inline void COMKERNALLib::IComRectCornerStair::PutSlabSizeOne ( double pVal ) {
    HRESULT _hr = put_SlabSizeOne(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2466)
inline double COMKERNALLib::IComRectCornerStair::GetSlabWidthTwo ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabWidthTwo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2467)
inline void COMKERNALLib::IComRectCornerStair::PutSlabWidthTwo ( double pVal ) {
    HRESULT _hr = put_SlabWidthTwo(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2468)
inline double COMKERNALLib::IComRectCornerStair::GetSlabSizeTwo ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSizeTwo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2469)
inline void COMKERNALLib::IComRectCornerStair::PutSlabSizeTwo ( double pVal ) {
    HRESULT _hr = put_SlabSizeTwo(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2470)
inline double COMKERNALLib::IComRectCornerStair::GetSlabWidthThree ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabWidthThree(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2471)
inline void COMKERNALLib::IComRectCornerStair::PutSlabWidthThree ( double pVal ) {
    HRESULT _hr = put_SlabWidthThree(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2472)
inline double COMKERNALLib::IComRectCornerStair::GetSlabSizeThree ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabSizeThree(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2473)
inline void COMKERNALLib::IComRectCornerStair::PutSlabSizeThree ( double pVal ) {
    HRESULT _hr = put_SlabSizeThree(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2474)
inline double COMKERNALLib::IComRectCornerStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2475)
inline void COMKERNALLib::IComRectCornerStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2476)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetLeftBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2477)
inline void COMKERNALLib::IComRectCornerStair::PutLeftBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2478)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetRightBeam ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightBeam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2479)
inline void COMKERNALLib::IComRectCornerStair::PutRightBeam ( _bstr_t pVal ) {
    HRESULT _hr = put_RightBeam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2480)
inline double COMKERNALLib::IComRectCornerStair::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2481)
inline void COMKERNALLib::IComRectCornerStair::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2482)
inline double COMKERNALLib::IComRectCornerStair::GetBeamThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2483)
inline void COMKERNALLib::IComRectCornerStair::PutBeamThickness ( double pVal ) {
    HRESULT _hr = put_BeamThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2484)
inline ACAD_LAYER COMKERNALLib::IComRectCornerStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2485)
inline void COMKERNALLib::IComRectCornerStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2486)
inline ACAD_LAYER COMKERNALLib::IComRectCornerStair::GetBeamLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_BeamLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2487)
inline void COMKERNALLib::IComRectCornerStair::PutBeamLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_BeamLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2488)
inline ACAD_LAYER COMKERNALLib::IComRectCornerStair::GetRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_RailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2489)
inline void COMKERNALLib::IComRectCornerStair::PutRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_RailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2490)
inline ACAD_LAYER COMKERNALLib::IComRectCornerStair::GetHandRailLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HandRailLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2491)
inline void COMKERNALLib::IComRectCornerStair::PutHandRailLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HandRailLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2492)
inline ACAD_LAYER COMKERNALLib::IComRectCornerStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2493)
inline void COMKERNALLib::IComRectCornerStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2494)
inline ACAD_LAYER COMKERNALLib::IComRectCornerStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2495)
inline void COMKERNALLib::IComRectCornerStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2496)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetStartSide ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StartSide(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2497)
inline void COMKERNALLib::IComRectCornerStair::PutStartSide ( _bstr_t pVal ) {
    HRESULT _hr = put_StartSide(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2498)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2499)
inline void COMKERNALLib::IComRectCornerStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2500)
inline short COMKERNALLib::IComRectCornerStair::GetSectStepNum ( ) {
    short _result = 0;
    HRESULT _hr = get_SectStepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2501)
inline void COMKERNALLib::IComRectCornerStair::PutSectStepNum ( short pVal ) {
    HRESULT _hr = put_SectStepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2502)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2503)
inline void COMKERNALLib::IComRectCornerStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2504)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetHasArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HasArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2505)
inline void COMKERNALLib::IComRectCornerStair::PutHasArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_HasArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2506)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2507)
inline void COMKERNALLib::IComRectCornerStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2508)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2509)
inline void COMKERNALLib::IComRectCornerStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2510)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2511)
inline void COMKERNALLib::IComRectCornerStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2512)
inline _bstr_t COMKERNALLib::IComRectCornerStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2513)
inline void COMKERNALLib::IComRectCornerStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComAutoStair wrapper method implementations
//

#pragma implementation_key(2514)
inline double COMKERNALLib::IComAutoStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2515)
inline void COMKERNALLib::IComAutoStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2516)
inline double COMKERNALLib::IComAutoStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2517)
inline void COMKERNALLib::IComAutoStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2518)
inline short COMKERNALLib::IComAutoStair::GetViewCtrl ( ) {
    short _result = 0;
    HRESULT _hr = get_ViewCtrl(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2519)
inline void COMKERNALLib::IComAutoStair::PutViewCtrl ( short pVal ) {
    HRESULT _hr = put_ViewCtrl(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2520)
inline double COMKERNALLib::IComAutoStair::GetAutoStairTotalLen ( ) {
    double _result = 0;
    HRESULT _hr = get_AutoStairTotalLen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2521)
inline void COMKERNALLib::IComAutoStair::PutAutoStairTotalLen ( double pVal ) {
    HRESULT _hr = put_AutoStairTotalLen(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2522)
inline double COMKERNALLib::IComAutoStair::GetAutoStairTotalWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_AutoStairTotalWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2523)
inline void COMKERNALLib::IComAutoStair::PutAutoStairTotalWidth ( double pVal ) {
    HRESULT _hr = put_AutoStairTotalWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2524)
inline double COMKERNALLib::IComAutoStair::GetStairHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_StairHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2525)
inline void COMKERNALLib::IComAutoStair::PutStairHeight ( double pVal ) {
    HRESULT _hr = put_StairHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2526)
inline double COMKERNALLib::IComAutoStair::GetStepDist ( ) {
    double _result = 0;
    HRESULT _hr = get_StepDist(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2527)
inline void COMKERNALLib::IComAutoStair::PutStepDist ( double pVal ) {
    HRESULT _hr = put_StepDist(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2528)
inline double COMKERNALLib::IComAutoStair::GetPlatLength ( ) {
    double _result = 0;
    HRESULT _hr = get_PlatLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2529)
inline void COMKERNALLib::IComAutoStair::PutPlatLength ( double pVal ) {
    HRESULT _hr = put_PlatLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2530)
inline double COMKERNALLib::IComAutoStair::GetSlopeAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SlopeAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2531)
inline void COMKERNALLib::IComAutoStair::PutSlopeAngle ( double pVal ) {
    HRESULT _hr = put_SlopeAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2532)
inline double COMKERNALLib::IComAutoStair::GetElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_Elevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2533)
inline void COMKERNALLib::IComAutoStair::PutElevation ( double pVal ) {
    HRESULT _hr = put_Elevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2534)
inline _bstr_t COMKERNALLib::IComAutoStair::GetSingleStair ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SingleStair(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2535)
inline void COMKERNALLib::IComAutoStair::PutSingleStair ( _bstr_t pVal ) {
    HRESULT _hr = put_SingleStair(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2536)
inline double COMKERNALLib::IComAutoStair::GetStairWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_StairWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2537)
inline void COMKERNALLib::IComAutoStair::PutStairWidth ( double pVal ) {
    HRESULT _hr = put_StairWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2538)
inline double COMKERNALLib::IComAutoStair::GetSpaceWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SpaceWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2539)
inline void COMKERNALLib::IComAutoStair::PutSpaceWidth ( double pVal ) {
    HRESULT _hr = put_SpaceWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2540)
inline _bstr_t COMKERNALLib::IComAutoStair::GetCrossAppose ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CrossAppose(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2541)
inline void COMKERNALLib::IComAutoStair::PutCrossAppose ( _bstr_t pVal ) {
    HRESULT _hr = put_CrossAppose(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2542)
inline ACAD_LAYER COMKERNALLib::IComAutoStair::GetStepLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_StepLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2543)
inline void COMKERNALLib::IComAutoStair::PutStepLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_StepLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2544)
inline ACAD_LAYER COMKERNALLib::IComAutoStair::GetTextLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_TextLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2545)
inline void COMKERNALLib::IComAutoStair::PutTextLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_TextLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2546)
inline ACAD_LAYER COMKERNALLib::IComAutoStair::GetArrowLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_ArrowLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2547)
inline void COMKERNALLib::IComAutoStair::PutArrowLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_ArrowLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2548)
inline _bstr_t COMKERNALLib::IComAutoStair::GetStairFlagTwo ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlagTwo(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2549)
inline void COMKERNALLib::IComAutoStair::PutStairFlagTwo ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlagTwo(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2550)
inline _bstr_t COMKERNALLib::IComAutoStair::GetStairFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StairFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2551)
inline void COMKERNALLib::IComAutoStair::PutStairFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_StairFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2552)
inline _bstr_t COMKERNALLib::IComAutoStair::GetSignArrow ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SignArrow(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2553)
inline void COMKERNALLib::IComAutoStair::PutSignArrow ( _bstr_t pVal ) {
    HRESULT _hr = put_SignArrow(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2554)
inline _bstr_t COMKERNALLib::IComAutoStair::GetSameDirection ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SameDirection(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2555)
inline void COMKERNALLib::IComAutoStair::PutSameDirection ( _bstr_t pVal ) {
    HRESULT _hr = put_SameDirection(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2556)
inline _bstr_t COMKERNALLib::IComAutoStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2557)
inline void COMKERNALLib::IComAutoStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2558)
inline _bstr_t COMKERNALLib::IComAutoStair::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2559)
inline void COMKERNALLib::IComAutoStair::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2560)
inline _bstr_t COMKERNALLib::IComAutoStair::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2561)
inline void COMKERNALLib::IComAutoStair::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2562)
inline _bstr_t COMKERNALLib::IComAutoStair::GetTextUp ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextUp(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2563)
inline void COMKERNALLib::IComAutoStair::PutTextUp ( _bstr_t pVal ) {
    HRESULT _hr = put_TextUp(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2564)
inline _bstr_t COMKERNALLib::IComAutoStair::GetTextDown ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextDown(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2565)
inline void COMKERNALLib::IComAutoStair::PutTextDown ( _bstr_t pVal ) {
    HRESULT _hr = put_TextDown(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComApron wrapper method implementations
//

#pragma implementation_key(2566)
inline double COMKERNALLib::IComApron::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2567)
inline void COMKERNALLib::IComApron::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2568)
inline double COMKERNALLib::IComApron::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2569)
inline void COMKERNALLib::IComApron::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2570)
inline double COMKERNALLib::IComApron::GetInHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_InHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2571)
inline void COMKERNALLib::IComApron::PutInHeight ( double pVal ) {
    HRESULT _hr = put_InHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2572)
inline double COMKERNALLib::IComApron::GetOutHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_OutHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2573)
inline void COMKERNALLib::IComApron::PutOutHeight ( double pVal ) {
    HRESULT _hr = put_OutHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2574)
inline double COMKERNALLib::IComApron::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2575)
inline void COMKERNALLib::IComApron::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2576)
inline _bstr_t COMKERNALLib::IComApron::GetPathLength ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_PathLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2577)
inline _bstr_t COMKERNALLib::IComApron::GetDists ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Dists(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2578)
inline void COMKERNALLib::IComApron::PutDists ( _bstr_t pVal ) {
    HRESULT _hr = put_Dists(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2579)
inline _bstr_t COMKERNALLib::IComApron::GetSideArea ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SideArea(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2580)
inline _bstr_t COMKERNALLib::IComApron::GetVolume ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Volume(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2581)
inline _bstr_t COMKERNALLib::IComApron::GetCloseFlag ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CloseFlag(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2582)
inline void COMKERNALLib::IComApron::PutCloseFlag ( _bstr_t pVal ) {
    HRESULT _hr = put_CloseFlag(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2583)
inline _variant_t COMKERNALLib::IComApron::GetVertex ( ) {
    VARIANT _result;
    VariantInit(&_result);
    HRESULT _hr = get_Vertex(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _variant_t(_result, false);
}

#pragma implementation_key(2584)
inline void COMKERNALLib::IComApron::PutVertex ( const _variant_t & pVal ) {
    HRESULT _hr = put_Vertex(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComMountRoof wrapper method implementations
//

#pragma implementation_key(2585)
inline double COMKERNALLib::IComMountRoof::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2586)
inline void COMKERNALLib::IComMountRoof::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2587)
inline double COMKERNALLib::IComMountRoof::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2588)
inline void COMKERNALLib::IComMountRoof::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2589)
inline _bstr_t COMKERNALLib::IComMountRoof::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2590)
inline void COMKERNALLib::IComMountRoof::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2591)
inline _bstr_t COMKERNALLib::IComMountRoof::GetRoofType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RoofType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2592)
inline double COMKERNALLib::IComMountRoof::GetElev ( ) {
    double _result = 0;
    HRESULT _hr = get_Elev(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2593)
inline void COMKERNALLib::IComMountRoof::PutElev ( double pVal ) {
    HRESULT _hr = put_Elev(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2594)
inline _bstr_t COMKERNALLib::IComMountRoof::GetSlopeAng ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlopeAng(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2595)
inline void COMKERNALLib::IComMountRoof::PutSlopeAng ( _bstr_t pVal ) {
    HRESULT _hr = put_SlopeAng(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2596)
inline double COMKERNALLib::IComMountRoof::GetRoofHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_RoofHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2597)
inline void COMKERNALLib::IComMountRoof::PutRoofHeight ( double pVal ) {
    HRESULT _hr = put_RoofHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2598)
inline double COMKERNALLib::IComMountRoof::GetMountHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_MountHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2599)
inline void COMKERNALLib::IComMountRoof::PutMountHeight ( double pVal ) {
    HRESULT _hr = put_MountHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2600)
inline double COMKERNALLib::IComMountRoof::GetLength ( ) {
    double _result = 0;
    HRESULT _hr = get_Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2601)
inline void COMKERNALLib::IComMountRoof::PutLength ( double pVal ) {
    HRESULT _hr = put_Length(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2602)
inline double COMKERNALLib::IComMountRoof::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2603)
inline void COMKERNALLib::IComMountRoof::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2604)
inline double COMKERNALLib::IComMountRoof::GetEavesLength ( ) {
    double _result = 0;
    HRESULT _hr = get_EavesLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2605)
inline void COMKERNALLib::IComMountRoof::PutEavesLength ( double pVal ) {
    HRESULT _hr = put_EavesLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2606)
inline double COMKERNALLib::IComMountRoof::GetMountLength ( ) {
    double _result = 0;
    HRESULT _hr = get_MountLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2607)
inline void COMKERNALLib::IComMountRoof::PutMountLength ( double pVal ) {
    HRESULT _hr = put_MountLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2608)
inline double COMKERNALLib::IComMountRoof::GetTopLength ( ) {
    double _result = 0;
    HRESULT _hr = get_TopLength(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2609)
inline void COMKERNALLib::IComMountRoof::PutTopLength ( double pVal ) {
    HRESULT _hr = put_TopLength(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2610)
inline double COMKERNALLib::IComMountRoof::GetSlabThick ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2611)
inline void COMKERNALLib::IComMountRoof::PutSlabThick ( double pVal ) {
    HRESULT _hr = put_SlabThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComFloorRect wrapper method implementations
//

#pragma implementation_key(2612)
inline double COMKERNALLib::IComFloorRect::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2613)
inline void COMKERNALLib::IComFloorRect::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2614)
inline double COMKERNALLib::IComFloorRect::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2615)
inline void COMKERNALLib::IComFloorRect::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2616)
inline _bstr_t COMKERNALLib::IComFloorRect::GetProjectName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ProjectName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2617)
inline _bstr_t COMKERNALLib::IComFloorRect::GetFloorName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorName(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2618)
inline _bstr_t COMKERNALLib::IComFloorRect::GetFloorHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2619)
inline _bstr_t COMKERNALLib::IComFloorRect::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2620)
inline void COMKERNALLib::IComFloorRect::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2621)
inline _bstr_t COMKERNALLib::IComFloorRect::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2622)
inline void COMKERNALLib::IComFloorRect::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2623)
inline ACAD_COLOR COMKERNALLib::IComFloorRect::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2624)
inline void COMKERNALLib::IComFloorRect::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2625)
inline _bstr_t COMKERNALLib::IComFloorRect::GetCrossLen ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_CrossLen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2626)
inline void COMKERNALLib::IComFloorRect::PutCrossLen ( _bstr_t pVal ) {
    HRESULT _hr = put_CrossLen(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface ISectionEntity wrapper method implementations
//

#pragma implementation_key(2627)
inline _bstr_t COMKERNALLib::ISectionEntity::GetBorder ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Border(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2628)
inline void COMKERNALLib::ISectionEntity::PutBorder ( _bstr_t pStr ) {
    HRESULT _hr = put_Border(pStr);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2629)
inline _bstr_t COMKERNALLib::ISectionEntity::GetLineType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LineType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2630)
inline void COMKERNALLib::ISectionEntity::PutLineType ( _bstr_t pStr ) {
    HRESULT _hr = put_LineType(pStr);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2631)
inline _bstr_t COMKERNALLib::ISectionEntity::GetName ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2632)
inline void COMKERNALLib::ISectionEntity::PutName ( _bstr_t pStr ) {
    HRESULT _hr = put_Name(pStr);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2633)
inline _bstr_t COMKERNALLib::ISectionEntity::GetHideLine ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLine(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2634)
inline void COMKERNALLib::ISectionEntity::PutHideLine ( _bstr_t pStr ) {
    HRESULT _hr = put_HideLine(pStr);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2635)
inline _bstr_t COMKERNALLib::ISectionEntity::GetShowFill ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowFill(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2636)
inline void COMKERNALLib::ISectionEntity::PutShowFill ( _bstr_t pStr ) {
    HRESULT _hr = put_ShowFill(pStr);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComSymbModi wrapper method implementations
//

#pragma implementation_key(2637)
inline double COMKERNALLib::IComSymbModi::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2638)
inline void COMKERNALLib::IComSymbModi::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2639)
inline double COMKERNALLib::IComSymbModi::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2640)
inline void COMKERNALLib::IComSymbModi::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2641)
inline _bstr_t COMKERNALLib::IComSymbModi::GetEditText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_EditText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2642)
inline void COMKERNALLib::IComSymbModi::PutEditText ( _bstr_t pVal ) {
    HRESULT _hr = put_EditText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2643)
inline _bstr_t COMKERNALLib::IComSymbModi::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2644)
inline void COMKERNALLib::IComSymbModi::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2645)
inline _bstr_t COMKERNALLib::IComSymbModi::GetTextContent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextContent(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2646)
inline void COMKERNALLib::IComSymbModi::PutTextContent ( _bstr_t pVal ) {
    HRESULT _hr = put_TextContent(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2647)
inline _bstr_t COMKERNALLib::IComSymbModi::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2648)
inline void COMKERNALLib::IComSymbModi::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2649)
inline ACAD_COLOR COMKERNALLib::IComSymbModi::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2650)
inline void COMKERNALLib::IComSymbModi::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruBeam wrapper method implementations
//

#pragma implementation_key(2651)
inline double COMKERNALLib::IComStruBeam::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2652)
inline void COMKERNALLib::IComStruBeam::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2653)
inline double COMKERNALLib::IComStruBeam::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2654)
inline void COMKERNALLib::IComStruBeam::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2655)
inline _bstr_t COMKERNALLib::IComStruBeam::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2656)
inline void COMKERNALLib::IComStruBeam::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2657)
inline _bstr_t COMKERNALLib::IComStruBeam::GetBeamShape ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BeamShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2658)
inline void COMKERNALLib::IComStruBeam::PutBeamShape ( _bstr_t pVal ) {
    HRESULT _hr = put_BeamShape(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2659)
inline double COMKERNALLib::IComStruBeam::GetBeamHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2660)
inline void COMKERNALLib::IComStruBeam::PutBeamHeight ( double pVal ) {
    HRESULT _hr = put_BeamHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2661)
inline double COMKERNALLib::IComStruBeam::GetBeamWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2662)
inline void COMKERNALLib::IComStruBeam::PutBeamWidth ( double pVal ) {
    HRESULT _hr = put_BeamWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2663)
inline double COMKERNALLib::IComStruBeam::GetBeamTotalWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamTotalWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2664)
inline void COMKERNALLib::IComStruBeam::PutBeamTotalWidth ( double pVal ) {
    HRESULT _hr = put_BeamTotalWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2665)
inline double COMKERNALLib::IComStruBeam::GetBeamTotalHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamTotalHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2666)
inline void COMKERNALLib::IComStruBeam::PutBeamTotalHeight ( double pVal ) {
    HRESULT _hr = put_BeamTotalHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2667)
inline double COMKERNALLib::IComStruBeam::GetBeamUpHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamUpHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2668)
inline void COMKERNALLib::IComStruBeam::PutBeamUpHeight ( double pVal ) {
    HRESULT _hr = put_BeamUpHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2669)
inline double COMKERNALLib::IComStruBeam::GetBeamUpWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamUpWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2670)
inline void COMKERNALLib::IComStruBeam::PutBeamUpWidth ( double pVal ) {
    HRESULT _hr = put_BeamUpWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2671)
inline double COMKERNALLib::IComStruBeam::GetBeamDownHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamDownHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2672)
inline void COMKERNALLib::IComStruBeam::PutBeamDownHeight ( double pVal ) {
    HRESULT _hr = put_BeamDownHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2673)
inline double COMKERNALLib::IComStruBeam::GetBeamDownWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamDownWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2674)
inline void COMKERNALLib::IComStruBeam::PutBeamDownWidth ( double pVal ) {
    HRESULT _hr = put_BeamDownWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2675)
inline double COMKERNALLib::IComStruBeam::GetBeamTopHeight1 ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamTopHeight1(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2676)
inline void COMKERNALLib::IComStruBeam::PutBeamTopHeight1 ( double pVal ) {
    HRESULT _hr = put_BeamTopHeight1(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2677)
inline double COMKERNALLib::IComStruBeam::GetBeamTopHeight2 ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamTopHeight2(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2678)
inline void COMKERNALLib::IComStruBeam::PutBeamTopHeight2 ( double pVal ) {
    HRESULT _hr = put_BeamTopHeight2(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2679)
inline double COMKERNALLib::IComStruBeam::GetBeamCorner ( ) {
    double _result = 0;
    HRESULT _hr = get_BeamCorner(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2680)
inline void COMKERNALLib::IComStruBeam::PutBeamCorner ( double pVal ) {
    HRESULT _hr = put_BeamCorner(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2681)
inline _bstr_t COMKERNALLib::IComStruBeam::GetBeamNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BeamNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2682)
inline void COMKERNALLib::IComStruBeam::PutBeamNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_BeamNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2683)
inline _bstr_t COMKERNALLib::IComStruBeam::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2684)
inline void COMKERNALLib::IComStruBeam::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2685)
inline _bstr_t COMKERNALLib::IComStruBeam::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2686)
inline void COMKERNALLib::IComStruBeam::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2687)
inline _bstr_t COMKERNALLib::IComStruBeam::GetHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2688)
inline void COMKERNALLib::IComStruBeam::PutHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_HideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2689)
inline _bstr_t COMKERNALLib::IComStruBeam::GetBeamIsArc ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BeamIsArc(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2690)
inline _bstr_t COMKERNALLib::IComStruBeam::GetBeamMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BeamMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2691)
inline void COMKERNALLib::IComStruBeam::PutBeamMaterial ( _bstr_t pVal ) {
    HRESULT _hr = put_BeamMaterial(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruFloorSlab wrapper method implementations
//

#pragma implementation_key(2692)
inline double COMKERNALLib::IComStruFloorSlab::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2693)
inline void COMKERNALLib::IComStruFloorSlab::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2694)
inline double COMKERNALLib::IComStruFloorSlab::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2695)
inline void COMKERNALLib::IComStruFloorSlab::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2696)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2697)
inline void COMKERNALLib::IComStruFloorSlab::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2698)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorSlabType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorSlabType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2699)
inline double COMKERNALLib::IComStruFloorSlab::GetFloorSlabThick ( ) {
    double _result = 0;
    HRESULT _hr = get_FloorSlabThick(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2700)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorSlabThick ( double pVal ) {
    HRESULT _hr = put_FloorSlabThick(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2701)
inline double COMKERNALLib::IComStruFloorSlab::GetFloorSlabHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_FloorSlabHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2702)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorSlabHeight ( double pVal ) {
    HRESULT _hr = put_FloorSlabHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2703)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorSlabNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorSlabNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2704)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorSlabNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorSlabNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2705)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorCLTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorCLTextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2706)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorCLTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorCLTextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2707)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorCLTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorCLTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2708)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorCLTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorCLTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2709)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorCLHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorCLHideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2710)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorCLHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorCLHideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2711)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorSlabShape ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorSlabShape(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2712)
inline _bstr_t COMKERNALLib::IComStruFloorSlab::GetFloorSlabMaterial ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FloorSlabMaterial(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2713)
inline void COMKERNALLib::IComStruFloorSlab::PutFloorSlabMaterial ( _bstr_t pVal ) {
    HRESULT _hr = put_FloorSlabMaterial(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruSlabHole wrapper method implementations
//

#pragma implementation_key(2714)
inline double COMKERNALLib::IComStruSlabHole::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2715)
inline void COMKERNALLib::IComStruSlabHole::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2716)
inline double COMKERNALLib::IComStruSlabHole::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2717)
inline void COMKERNALLib::IComStruSlabHole::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2718)
inline _bstr_t COMKERNALLib::IComStruSlabHole::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2719)
inline void COMKERNALLib::IComStruSlabHole::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2720)
inline _bstr_t COMKERNALLib::IComStruSlabHole::GetSlabHoleType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SlabHoleType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2721)
inline double COMKERNALLib::IComStruSlabHole::GetSlabHoleWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabHoleWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2722)
inline void COMKERNALLib::IComStruSlabHole::PutSlabHoleWidth ( double pVal ) {
    HRESULT _hr = put_SlabHoleWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2723)
inline double COMKERNALLib::IComStruSlabHole::GetSlabHoleHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabHoleHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2724)
inline void COMKERNALLib::IComStruSlabHole::PutSlabHoleHeight ( double pVal ) {
    HRESULT _hr = put_SlabHoleHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2725)
inline double COMKERNALLib::IComStruSlabHole::GetSlabHoleAngle ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabHoleAngle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2726)
inline void COMKERNALLib::IComStruSlabHole::PutSlabHoleAngle ( double pVal ) {
    HRESULT _hr = put_SlabHoleAngle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2727)
inline double COMKERNALLib::IComStruSlabHole::GetSlabHoleDiam ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabHoleDiam(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2728)
inline void COMKERNALLib::IComStruSlabHole::PutSlabHoleDiam ( double pVal ) {
    HRESULT _hr = put_SlabHoleDiam(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2729)
inline double COMKERNALLib::IComStruSlabHole::GetSlabHoleElevation ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabHoleElevation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2730)
inline void COMKERNALLib::IComStruSlabHole::PutSlabHoleElevation ( double pVal ) {
    HRESULT _hr = put_SlabHoleElevation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2731)
inline _bstr_t COMKERNALLib::IComStruSlabHole::GetLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Label(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2732)
inline void COMKERNALLib::IComStruSlabHole::PutLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_Label(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2733)
inline _bstr_t COMKERNALLib::IComStruSlabHole::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2734)
inline void COMKERNALLib::IComStruSlabHole::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2735)
inline _bstr_t COMKERNALLib::IComStruSlabHole::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2736)
inline void COMKERNALLib::IComStruSlabHole::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2737)
inline _bstr_t COMKERNALLib::IComStruSlabHole::GetHideLabel ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_HideLabel(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2738)
inline void COMKERNALLib::IComStruSlabHole::PutHideLabel ( _bstr_t pVal ) {
    HRESULT _hr = put_HideLabel(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruNodePoint wrapper method implementations
//

#pragma implementation_key(2739)
inline double COMKERNALLib::IComStruNodePoint::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2740)
inline void COMKERNALLib::IComStruNodePoint::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2741)
inline double COMKERNALLib::IComStruNodePoint::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2742)
inline void COMKERNALLib::IComStruNodePoint::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2743)
inline _bstr_t COMKERNALLib::IComStruNodePoint::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2744)
inline void COMKERNALLib::IComStruNodePoint::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2745)
inline _bstr_t COMKERNALLib::IComStruNodePoint::GetNodeNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_NodeNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2746)
inline void COMKERNALLib::IComStruNodePoint::PutNodeNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_NodeNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruBarBase wrapper method implementations
//

#pragma implementation_key(2747)
inline double COMKERNALLib::IComStruBarBase::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2748)
inline void COMKERNALLib::IComStruBarBase::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2749)
inline double COMKERNALLib::IComStruBarBase::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2750)
inline void COMKERNALLib::IComStruBarBase::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2751)
inline _bstr_t COMKERNALLib::IComStruBarBase::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2752)
inline void COMKERNALLib::IComStruBarBase::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2753)
inline _bstr_t COMKERNALLib::IComStruBarBase::GetBaseNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BaseNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2754)
inline void COMKERNALLib::IComStruBarBase::PutBaseNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_BaseNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2755)
inline double COMKERNALLib::IComStruBarBase::GetBaseWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BaseWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2756)
inline void COMKERNALLib::IComStruBarBase::PutBaseWidth ( double pVal ) {
    HRESULT _hr = put_BaseWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruSelfBase wrapper method implementations
//

#pragma implementation_key(2757)
inline double COMKERNALLib::IComStruSelfBase::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2758)
inline void COMKERNALLib::IComStruSelfBase::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2759)
inline double COMKERNALLib::IComStruSelfBase::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2760)
inline void COMKERNALLib::IComStruSelfBase::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2761)
inline _bstr_t COMKERNALLib::IComStruSelfBase::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2762)
inline void COMKERNALLib::IComStruSelfBase::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2763)
inline _bstr_t COMKERNALLib::IComStruSelfBase::GetBaseNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BaseNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2764)
inline void COMKERNALLib::IComStruSelfBase::PutBaseNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_BaseNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2765)
inline double COMKERNALLib::IComStruSelfBase::GetBaseWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_BaseWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2766)
inline void COMKERNALLib::IComStruSelfBase::PutBaseWidth ( double pVal ) {
    HRESULT _hr = put_BaseWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2767)
inline double COMKERNALLib::IComStruSelfBase::GetBaseHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_BaseHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2768)
inline void COMKERNALLib::IComStruSelfBase::PutBaseHeight ( double pVal ) {
    HRESULT _hr = put_BaseHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruReinBar wrapper method implementations
//

#pragma implementation_key(2769)
inline double COMKERNALLib::IComStruReinBar::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2770)
inline void COMKERNALLib::IComStruReinBar::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2771)
inline double COMKERNALLib::IComStruReinBar::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2772)
inline void COMKERNALLib::IComStruReinBar::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2773)
inline _bstr_t COMKERNALLib::IComStruReinBar::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2774)
inline void COMKERNALLib::IComStruReinBar::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2775)
inline _bstr_t COMKERNALLib::IComStruReinBar::GetBarType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BarType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2776)
inline _bstr_t COMKERNALLib::IComStruReinBar::GetBarTypeStart ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BarTypeStart(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2777)
inline void COMKERNALLib::IComStruReinBar::PutBarTypeStart ( _bstr_t pVal ) {
    HRESULT _hr = put_BarTypeStart(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2778)
inline _bstr_t COMKERNALLib::IComStruReinBar::GetBarTypeEnd ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_BarTypeEnd(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2779)
inline void COMKERNALLib::IComStruReinBar::PutBarTypeEnd ( _bstr_t pVal ) {
    HRESULT _hr = put_BarTypeEnd(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2780)
inline double COMKERNALLib::IComStruReinBar::GetWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2781)
inline void COMKERNALLib::IComStruReinBar::PutWidth ( double pVal ) {
    HRESULT _hr = put_Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2782)
inline double COMKERNALLib::IComStruReinBar::GetLengthS ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthS(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2783)
inline void COMKERNALLib::IComStruReinBar::PutLengthS ( double pVal ) {
    HRESULT _hr = put_LengthS(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2784)
inline double COMKERNALLib::IComStruReinBar::GetLengthO ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthO(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2785)
inline void COMKERNALLib::IComStruReinBar::PutLengthO ( double pVal ) {
    HRESULT _hr = put_LengthO(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2786)
inline double COMKERNALLib::IComStruReinBar::GetLengthB ( ) {
    double _result = 0;
    HRESULT _hr = get_LengthB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2787)
inline void COMKERNALLib::IComStruReinBar::PutLengthB ( double pVal ) {
    HRESULT _hr = put_LengthB(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2788)
inline double COMKERNALLib::IComStruReinBar::GetDiaB ( ) {
    double _result = 0;
    HRESULT _hr = get_DiaB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2789)
inline void COMKERNALLib::IComStruReinBar::PutDiaB ( double pVal ) {
    HRESULT _hr = put_DiaB(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruSymbFocus wrapper method implementations
//

#pragma implementation_key(2790)
inline double COMKERNALLib::IComStruSymbFocus::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2791)
inline void COMKERNALLib::IComStruSymbFocus::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2792)
inline double COMKERNALLib::IComStruSymbFocus::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2793)
inline void COMKERNALLib::IComStruSymbFocus::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2794)
inline _bstr_t COMKERNALLib::IComStruSymbFocus::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2795)
inline void COMKERNALLib::IComStruSymbFocus::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2796)
inline _bstr_t COMKERNALLib::IComStruSymbFocus::GetTxtHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TxtHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2797)
inline void COMKERNALLib::IComStruSymbFocus::PutTxtHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TxtHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2798)
inline _bstr_t COMKERNALLib::IComStruSymbFocus::GetAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Align(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2799)
inline void COMKERNALLib::IComStruSymbFocus::PutAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_Align(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2800)
inline _bstr_t COMKERNALLib::IComStruSymbFocus::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2801)
inline void COMKERNALLib::IComStruSymbFocus::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2802)
inline double COMKERNALLib::IComStruSymbFocus::GetRowSpaceCoe ( ) {
    double _result = 0;
    HRESULT _hr = get_RowSpaceCoe(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2803)
inline void COMKERNALLib::IComStruSymbFocus::PutRowSpaceCoe ( double pVal ) {
    HRESULT _hr = put_RowSpaceCoe(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2804)
inline ACAD_COLOR COMKERNALLib::IComStruSymbFocus::GetTxtColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TxtColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2805)
inline void COMKERNALLib::IComStruSymbFocus::PutTxtColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TxtColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruSymbInsitu wrapper method implementations
//

#pragma implementation_key(2806)
inline double COMKERNALLib::IComStruSymbInsitu::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2807)
inline void COMKERNALLib::IComStruSymbInsitu::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2808)
inline double COMKERNALLib::IComStruSymbInsitu::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2809)
inline void COMKERNALLib::IComStruSymbInsitu::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2810)
inline _bstr_t COMKERNALLib::IComStruSymbInsitu::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2811)
inline void COMKERNALLib::IComStruSymbInsitu::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2812)
inline _bstr_t COMKERNALLib::IComStruSymbInsitu::GetTxtHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TxtHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2813)
inline void COMKERNALLib::IComStruSymbInsitu::PutTxtHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TxtHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2814)
inline _bstr_t COMKERNALLib::IComStruSymbInsitu::GetAlign ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Align(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2815)
inline void COMKERNALLib::IComStruSymbInsitu::PutAlign ( _bstr_t pVal ) {
    HRESULT _hr = put_Align(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2816)
inline _bstr_t COMKERNALLib::IComStruSymbInsitu::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2817)
inline void COMKERNALLib::IComStruSymbInsitu::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2818)
inline _bstr_t COMKERNALLib::IComStruSymbInsitu::GetContent ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Content(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2819)
inline void COMKERNALLib::IComStruSymbInsitu::PutContent ( _bstr_t pVal ) {
    HRESULT _hr = put_Content(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2820)
inline ACAD_COLOR COMKERNALLib::IComStruSymbInsitu::GetTxtColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TxtColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2821)
inline void COMKERNALLib::IComStruSymbInsitu::PutTxtColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TxtColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruHanger wrapper method implementations
//

#pragma implementation_key(2822)
inline double COMKERNALLib::IComStruHanger::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2823)
inline void COMKERNALLib::IComStruHanger::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2824)
inline double COMKERNALLib::IComStruHanger::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2825)
inline void COMKERNALLib::IComStruHanger::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2826)
inline _bstr_t COMKERNALLib::IComStruHanger::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2827)
inline void COMKERNALLib::IComStruHanger::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2828)
inline _bstr_t COMKERNALLib::IComStruHanger::GetTxtHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TxtHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2829)
inline void COMKERNALLib::IComStruHanger::PutTxtHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TxtHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2830)
inline _bstr_t COMKERNALLib::IComStruHanger::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2831)
inline void COMKERNALLib::IComStruHanger::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2832)
inline _bstr_t COMKERNALLib::IComStruHanger::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2833)
inline void COMKERNALLib::IComStruHanger::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2834)
inline ACAD_COLOR COMKERNALLib::IComStruHanger::GetTxtColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TxtColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2835)
inline void COMKERNALLib::IComStruHanger::PutTxtColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TxtColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruStirrup wrapper method implementations
//

#pragma implementation_key(2836)
inline double COMKERNALLib::IComStruStirrup::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2837)
inline void COMKERNALLib::IComStruStirrup::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2838)
inline double COMKERNALLib::IComStruStirrup::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2839)
inline void COMKERNALLib::IComStruStirrup::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2840)
inline _bstr_t COMKERNALLib::IComStruStirrup::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2841)
inline void COMKERNALLib::IComStruStirrup::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2842)
inline _bstr_t COMKERNALLib::IComStruStirrup::GetTxtHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TxtHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2843)
inline void COMKERNALLib::IComStruStirrup::PutTxtHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TxtHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2844)
inline _bstr_t COMKERNALLib::IComStruStirrup::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2845)
inline void COMKERNALLib::IComStruStirrup::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2846)
inline _bstr_t COMKERNALLib::IComStruStirrup::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2847)
inline void COMKERNALLib::IComStruStirrup::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2848)
inline ACAD_COLOR COMKERNALLib::IComStruStirrup::GetTxtColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TxtColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2849)
inline void COMKERNALLib::IComStruStirrup::PutTxtColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TxtColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruPlainNumber wrapper method implementations
//

#pragma implementation_key(2850)
inline double COMKERNALLib::IComStruPlainNumber::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2851)
inline void COMKERNALLib::IComStruPlainNumber::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2852)
inline double COMKERNALLib::IComStruPlainNumber::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2853)
inline void COMKERNALLib::IComStruPlainNumber::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2854)
inline _bstr_t COMKERNALLib::IComStruPlainNumber::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2855)
inline void COMKERNALLib::IComStruPlainNumber::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2856)
inline _bstr_t COMKERNALLib::IComStruPlainNumber::GetTxtHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TxtHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2857)
inline void COMKERNALLib::IComStruPlainNumber::PutTxtHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TxtHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2858)
inline double COMKERNALLib::IComStruPlainNumber::GetCorner ( ) {
    double _result = 0;
    HRESULT _hr = get_Corner(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2859)
inline void COMKERNALLib::IComStruPlainNumber::PutCorner ( double pVal ) {
    HRESULT _hr = put_Corner(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2860)
inline _bstr_t COMKERNALLib::IComStruPlainNumber::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2861)
inline void COMKERNALLib::IComStruPlainNumber::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2862)
inline _bstr_t COMKERNALLib::IComStruPlainNumber::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2863)
inline void COMKERNALLib::IComStruPlainNumber::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2864)
inline ACAD_COLOR COMKERNALLib::IComStruPlainNumber::GetTxtColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TxtColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2865)
inline void COMKERNALLib::IComStruPlainNumber::PutTxtColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TxtColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruSectStair wrapper method implementations
//

#pragma implementation_key(2866)
inline double COMKERNALLib::IComStruSectStair::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2867)
inline void COMKERNALLib::IComStruSectStair::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2868)
inline double COMKERNALLib::IComStruSectStair::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2869)
inline void COMKERNALLib::IComStruSectStair::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2870)
inline _bstr_t COMKERNALLib::IComStruSectStair::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2871)
inline void COMKERNALLib::IComStruSectStair::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2872)
inline _bstr_t COMKERNALLib::IComStruSectStair::GetSectNumber ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_SectNumber(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2873)
inline void COMKERNALLib::IComStruSectStair::PutSectNumber ( _bstr_t pVal ) {
    HRESULT _hr = put_SectNumber(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2874)
inline _bstr_t COMKERNALLib::IComStruSectStair::GetLeftHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_LeftHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2875)
inline void COMKERNALLib::IComStruSectStair::PutLeftHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_LeftHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2876)
inline _bstr_t COMKERNALLib::IComStruSectStair::GetRightHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_RightHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2877)
inline void COMKERNALLib::IComStruSectStair::PutRightHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_RightHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2878)
inline int COMKERNALLib::IComStruSectStair::GetStepNum ( ) {
    int _result = 0;
    HRESULT _hr = get_StepNum(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2879)
inline void COMKERNALLib::IComStruSectStair::PutStepNum ( int pVal ) {
    HRESULT _hr = put_StepNum(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2880)
inline double COMKERNALLib::IComStruSectStair::GetSlabShadowLen ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabShadowLen(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2881)
inline void COMKERNALLib::IComStruSectStair::PutSlabShadowLen ( double pVal ) {
    HRESULT _hr = put_SlabShadowLen(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2882)
inline double COMKERNALLib::IComStruSectStair::GetSlabThickness ( ) {
    double _result = 0;
    HRESULT _hr = get_SlabThickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2883)
inline void COMKERNALLib::IComStruSectStair::PutSlabThickness ( double pVal ) {
    HRESULT _hr = put_SlabThickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2884)
inline double COMKERNALLib::IComStruSectStair::GetB1Width ( ) {
    double _result = 0;
    HRESULT _hr = get_B1Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2885)
inline void COMKERNALLib::IComStruSectStair::PutB1Width ( double pVal ) {
    HRESULT _hr = put_B1Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2886)
inline double COMKERNALLib::IComStruSectStair::GetC1Height ( ) {
    double _result = 0;
    HRESULT _hr = get_C1Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2887)
inline void COMKERNALLib::IComStruSectStair::PutC1Height ( double pVal ) {
    HRESULT _hr = put_C1Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2888)
inline double COMKERNALLib::IComStruSectStair::GetD1Width ( ) {
    double _result = 0;
    HRESULT _hr = get_D1Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2889)
inline void COMKERNALLib::IComStruSectStair::PutD1Width ( double pVal ) {
    HRESULT _hr = put_D1Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2890)
inline double COMKERNALLib::IComStruSectStair::GetT1Tickness ( ) {
    double _result = 0;
    HRESULT _hr = get_T1Tickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2891)
inline void COMKERNALLib::IComStruSectStair::PutT1Tickness ( double pVal ) {
    HRESULT _hr = put_T1Tickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2892)
inline double COMKERNALLib::IComStruSectStair::GetB2Width ( ) {
    double _result = 0;
    HRESULT _hr = get_B2Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2893)
inline void COMKERNALLib::IComStruSectStair::PutB2Width ( double pVal ) {
    HRESULT _hr = put_B2Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2894)
inline double COMKERNALLib::IComStruSectStair::GetC2Height ( ) {
    double _result = 0;
    HRESULT _hr = get_C2Height(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2895)
inline void COMKERNALLib::IComStruSectStair::PutC2Height ( double pVal ) {
    HRESULT _hr = put_C2Height(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2896)
inline double COMKERNALLib::IComStruSectStair::GetD2Width ( ) {
    double _result = 0;
    HRESULT _hr = get_D2Width(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2897)
inline void COMKERNALLib::IComStruSectStair::PutD2Width ( double pVal ) {
    HRESULT _hr = put_D2Width(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2898)
inline double COMKERNALLib::IComStruSectStair::GetT2Tickness ( ) {
    double _result = 0;
    HRESULT _hr = get_T2Tickness(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2899)
inline void COMKERNALLib::IComStruSectStair::PutT2Tickness ( double pVal ) {
    HRESULT _hr = put_T2Tickness(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2900)
inline double COMKERNALLib::IComStruSectStair::GetL2Length ( ) {
    double _result = 0;
    HRESULT _hr = get_L2Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2901)
inline void COMKERNALLib::IComStruSectStair::PutL2Length ( double pVal ) {
    HRESULT _hr = put_L2Length(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2902)
inline double COMKERNALLib::IComStruSectStair::GetL3Length ( ) {
    double _result = 0;
    HRESULT _hr = get_L3Length(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2903)
inline void COMKERNALLib::IComStruSectStair::PutL3Length ( double pVal ) {
    HRESULT _hr = put_L3Length(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComReinIndexDim wrapper method implementations
//

#pragma implementation_key(2904)
inline double COMKERNALLib::IComReinIndexDim::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2905)
inline void COMKERNALLib::IComReinIndexDim::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2906)
inline double COMKERNALLib::IComReinIndexDim::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2907)
inline void COMKERNALLib::IComReinIndexDim::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2908)
inline _bstr_t COMKERNALLib::IComReinIndexDim::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2909)
inline void COMKERNALLib::IComReinIndexDim::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2910)
inline _bstr_t COMKERNALLib::IComReinIndexDim::GetReinCLAB ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ReinCLAB(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2911)
inline void COMKERNALLib::IComReinIndexDim::PutReinCLAB ( _bstr_t pVal ) {
    HRESULT _hr = put_ReinCLAB(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2912)
inline double COMKERNALLib::IComReinIndexDim::GetRadius ( ) {
    double _result = 0;
    HRESULT _hr = get_Radius(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2913)
inline void COMKERNALLib::IComReinIndexDim::PutRadius ( double pVal ) {
    HRESULT _hr = put_Radius(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2914)
inline _bstr_t COMKERNALLib::IComReinIndexDim::GetInTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_InTextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2915)
inline void COMKERNALLib::IComReinIndexDim::PutInTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_InTextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2916)
inline double COMKERNALLib::IComReinIndexDim::GetInTextHeight ( ) {
    double _result = 0;
    HRESULT _hr = get_InTextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2917)
inline void COMKERNALLib::IComReinIndexDim::PutInTextHeight ( double pVal ) {
    HRESULT _hr = put_InTextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2918)
inline _bstr_t COMKERNALLib::IComReinIndexDim::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2919)
inline void COMKERNALLib::IComReinIndexDim::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2920)
inline _bstr_t COMKERNALLib::IComReinIndexDim::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2921)
inline void COMKERNALLib::IComReinIndexDim::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2922)
inline _bstr_t COMKERNALLib::IComReinIndexDim::GetTxt ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Txt(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2923)
inline void COMKERNALLib::IComReinIndexDim::PutTxt ( _bstr_t pVal ) {
    HRESULT _hr = put_Txt(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2924)
inline ACAD_COLOR COMKERNALLib::IComReinIndexDim::GetTxtColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TxtColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2925)
inline void COMKERNALLib::IComReinIndexDim::PutTxtColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TxtColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComStruWColuSect wrapper method implementations
//

#pragma implementation_key(2926)
inline double COMKERNALLib::IComStruWColuSect::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2927)
inline void COMKERNALLib::IComStruWColuSect::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2928)
inline double COMKERNALLib::IComStruWColuSect::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2929)
inline void COMKERNALLib::IComStruWColuSect::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2930)
inline _bstr_t COMKERNALLib::IComStruWColuSect::GetShadowType ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShadowType(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2931)
inline void COMKERNALLib::IComStruWColuSect::PutShadowType ( _bstr_t pVal ) {
    HRESULT _hr = put_ShadowType(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2932)
inline _bstr_t COMKERNALLib::IComStruWColuSect::GetTxtHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TxtHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2933)
inline void COMKERNALLib::IComStruWColuSect::PutTxtHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TxtHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2934)
inline _bstr_t COMKERNALLib::IComStruWColuSect::GetTextStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2935)
inline void COMKERNALLib::IComStruWColuSect::PutTextStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_TextStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2936)
inline ACAD_LAYER COMKERNALLib::IComStruWColuSect::GetHatchLayer ( ) {
    ACAD_LAYER _result;
    HRESULT _hr = get_HatchLayer(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2937)
inline void COMKERNALLib::IComStruWColuSect::PutHatchLayer ( ACAD_LAYER pVal ) {
    HRESULT _hr = put_HatchLayer(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface IComEvacPath wrapper method implementations
//

#pragma implementation_key(2938)
inline _bstr_t COMKERNALLib::IComEvacPath::GetShowText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_ShowText(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2939)
inline void COMKERNALLib::IComEvacPath::PutShowText ( _bstr_t pVal ) {
    HRESULT _hr = put_ShowText(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2940)
inline _bstr_t COMKERNALLib::IComEvacPath::GetTextHeight ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_TextHeight(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2941)
inline void COMKERNALLib::IComEvacPath::PutTextHeight ( _bstr_t pVal ) {
    HRESULT _hr = put_TextHeight(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2942)
inline _bstr_t COMKERNALLib::IComEvacPath::GetFontStyle ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_FontStyle(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2943)
inline void COMKERNALLib::IComEvacPath::PutFontStyle ( _bstr_t pVal ) {
    HRESULT _hr = put_FontStyle(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2944)
inline ACAD_COLOR COMKERNALLib::IComEvacPath::GetTextColor ( ) {
    ACAD_COLOR _result;
    HRESULT _hr = get_TextColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2945)
inline void COMKERNALLib::IComEvacPath::PutTextColor ( ACAD_COLOR pVal ) {
    HRESULT _hr = put_TextColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2946)
inline _bstr_t COMKERNALLib::IComEvacPath::GetText ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_Text(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2947)
inline void COMKERNALLib::IComEvacPath::PutText ( _bstr_t pVal ) {
    HRESULT _hr = put_Text(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2948)
inline double COMKERNALLib::IComEvacPath::GetPolyWidth ( ) {
    double _result = 0;
    HRESULT _hr = get_PolyWidth(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2949)
inline void COMKERNALLib::IComEvacPath::PutPolyWidth ( double pVal ) {
    HRESULT _hr = put_PolyWidth(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2950)
inline _bstr_t COMKERNALLib::IComEvacPath::GetStandardRange ( ) {
    BSTR _result = 0;
    HRESULT _hr = get_StandardRange(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

#pragma implementation_key(2951)
inline void COMKERNALLib::IComEvacPath::PutStandardRange ( _bstr_t pVal ) {
    HRESULT _hr = put_StandardRange(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2952)
inline double COMKERNALLib::IComEvacPath::GetScale ( ) {
    double _result = 0;
    HRESULT _hr = get_Scale(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2953)
inline void COMKERNALLib::IComEvacPath::PutScale ( double pVal ) {
    HRESULT _hr = put_Scale(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

#pragma implementation_key(2954)
inline double COMKERNALLib::IComEvacPath::GetLayoutRotation ( ) {
    double _result = 0;
    HRESULT _hr = get_LayoutRotation(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

#pragma implementation_key(2955)
inline void COMKERNALLib::IComEvacPath::PutLayoutRotation ( double pVal ) {
    HRESULT _hr = put_LayoutRotation(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}
